<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook original-version='18.1' source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='Flights_2_0' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='877050760_72018_182_airline_delay_causes' inline='true' name='federated.12m2fuv0p58mks1a5j6v21idq34y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='877050760_72018_182_airline_delay_causes' name='textscan.0ktbs0i1rnzprx1a1zm8o18ajo7x'>
            <connection class='textscan' directory='D:/Data Science/Flights' filename='877050760_72018_182_airline_delay_causes.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ktbs0i1rnzprx1a1zm8o18ajo7x' name='877050760_72018_182_airline_delay_causes.csv' table='[877050760_72018_182_airline_delay_causes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name=' month' ordinal='1' />
            <column datatype='string' name='carrier' ordinal='2' />
            <column datatype='string' name='carrier_name' ordinal='3' />
            <column datatype='string' name='airport' ordinal='4' />
            <column datatype='string' name='airport_name' ordinal='5' />
            <column datatype='real' name='arr_flights' ordinal='6' />
            <column datatype='real' name='arr_del15' ordinal='7' />
            <column datatype='real' name='carrier_ct' ordinal='8' />
            <column datatype='real' name=' weather_ct' ordinal='9' />
            <column datatype='real' name='nas_ct' ordinal='10' />
            <column datatype='real' name='security_ct' ordinal='11' />
            <column datatype='real' name='late_aircraft_ct' ordinal='12' />
            <column datatype='real' name='arr_cancelled' ordinal='13' />
            <column datatype='real' name='arr_diverted' ordinal='14' />
            <column datatype='real' name=' arr_delay' ordinal='15' />
            <column datatype='real' name=' carrier_delay' ordinal='16' />
            <column datatype='real' name='weather_delay' ordinal='17' />
            <column datatype='real' name='nas_delay' ordinal='18' />
            <column datatype='real' name='security_delay' ordinal='19' />
            <column datatype='real' name='late_aircraft_delay' ordinal='20' />
            <column datatype='string' name='F22' ordinal='21' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ month]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias> month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_flights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_flights]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>arr_flights</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_del15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_del15]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>arr_del15</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carrier_ct]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>carrier_ct</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> weather_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ weather_ct]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias> weather_ct</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_ct]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>nas_ct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_ct]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>security_ct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_ct]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>late_aircraft_ct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_cancelled]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>arr_cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_diverted]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>arr_diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ arr_delay]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias> arr_delay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> carrier_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ carrier_delay]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias> carrier_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[877050760_72018_182_airline_delay_causes.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
      <column caption='Weather Ct' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
      <column caption='Airport Size' datatype='string' name='[Airport (group)]' role='dimension' semantic-role='[Airport].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[airport]' default='&quot;Big Airports&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Small Airports&quot;'>
            <value>&quot;ABE&quot;</value>
            <value>&quot;ABI&quot;</value>
            <value>&quot;ABQ&quot;</value>
            <value>&quot;ABR&quot;</value>
            <value>&quot;ABY&quot;</value>
            <value>&quot;ACK&quot;</value>
            <value>&quot;ACT&quot;</value>
            <value>&quot;ACV&quot;</value>
            <value>&quot;ACY&quot;</value>
            <value>&quot;ADK&quot;</value>
            <value>&quot;ADQ&quot;</value>
            <value>&quot;AEX&quot;</value>
            <value>&quot;AGS&quot;</value>
            <value>&quot;AKN&quot;</value>
            <value>&quot;ALB&quot;</value>
            <value>&quot;ALO&quot;</value>
            <value>&quot;AMA&quot;</value>
            <value>&quot;ANC&quot;</value>
            <value>&quot;APN&quot;</value>
            <value>&quot;ART&quot;</value>
            <value>&quot;ASE&quot;</value>
            <value>&quot;ATW&quot;</value>
            <value>&quot;AVL&quot;</value>
            <value>&quot;AVP&quot;</value>
            <value>&quot;AZA&quot;</value>
            <value>&quot;AZO&quot;</value>
            <value>&quot;BDL&quot;</value>
            <value>&quot;BET&quot;</value>
            <value>&quot;BFF&quot;</value>
            <value>&quot;BFL&quot;</value>
            <value>&quot;BGM&quot;</value>
            <value>&quot;BGR&quot;</value>
            <value>&quot;BHM&quot;</value>
            <value>&quot;BIL&quot;</value>
            <value>&quot;BIS&quot;</value>
            <value>&quot;BJI&quot;</value>
            <value>&quot;BKG&quot;</value>
            <value>&quot;BLI&quot;</value>
            <value>&quot;BLV&quot;</value>
            <value>&quot;BMI&quot;</value>
            <value>&quot;BOI&quot;</value>
            <value>&quot;BPT&quot;</value>
            <value>&quot;BQK&quot;</value>
            <value>&quot;BQN&quot;</value>
            <value>&quot;BRD&quot;</value>
            <value>&quot;BRO&quot;</value>
            <value>&quot;BRW&quot;</value>
            <value>&quot;BTM&quot;</value>
            <value>&quot;BTR&quot;</value>
            <value>&quot;BTV&quot;</value>
            <value>&quot;BUF&quot;</value>
            <value>&quot;BUR&quot;</value>
            <value>&quot;BZN&quot;</value>
            <value>&quot;CAE&quot;</value>
            <value>&quot;CAK&quot;</value>
            <value>&quot;CDC&quot;</value>
            <value>&quot;CDV&quot;</value>
            <value>&quot;CEC&quot;</value>
            <value>&quot;CGI&quot;</value>
            <value>&quot;CHA&quot;</value>
            <value>&quot;CHO&quot;</value>
            <value>&quot;CHS&quot;</value>
            <value>&quot;CIC&quot;</value>
            <value>&quot;CID&quot;</value>
            <value>&quot;CIU&quot;</value>
            <value>&quot;CKB&quot;</value>
            <value>&quot;CLD&quot;</value>
            <value>&quot;CLL&quot;</value>
            <value>&quot;CMH&quot;</value>
            <value>&quot;CMI&quot;</value>
            <value>&quot;CMX&quot;</value>
            <value>&quot;CNY&quot;</value>
            <value>&quot;COD&quot;</value>
            <value>&quot;COS&quot;</value>
            <value>&quot;COU&quot;</value>
            <value>&quot;CPR&quot;</value>
            <value>&quot;CRP&quot;</value>
            <value>&quot;CRW&quot;</value>
            <value>&quot;CSG&quot;</value>
            <value>&quot;CVG&quot;</value>
            <value>&quot;CWA&quot;</value>
            <value>&quot;CYS&quot;</value>
            <value>&quot;DAB&quot;</value>
            <value>&quot;DAY&quot;</value>
            <value>&quot;DBQ&quot;</value>
            <value>&quot;DHN&quot;</value>
            <value>&quot;DIK&quot;</value>
            <value>&quot;DLG&quot;</value>
            <value>&quot;DLH&quot;</value>
            <value>&quot;DRO&quot;</value>
            <value>&quot;DRT&quot;</value>
            <value>&quot;DSM&quot;</value>
            <value>&quot;DVL&quot;</value>
            <value>&quot;EAU&quot;</value>
            <value>&quot;ECP&quot;</value>
            <value>&quot;EGE&quot;</value>
            <value>&quot;EKO&quot;</value>
            <value>&quot;ELM&quot;</value>
            <value>&quot;ELP&quot;</value>
            <value>&quot;ERI&quot;</value>
            <value>&quot;ESC&quot;</value>
            <value>&quot;EUG&quot;</value>
            <value>&quot;EVV&quot;</value>
            <value>&quot;EWN&quot;</value>
            <value>&quot;EYW&quot;</value>
            <value>&quot;FAI&quot;</value>
            <value>&quot;FAR&quot;</value>
            <value>&quot;FAT&quot;</value>
            <value>&quot;FAY&quot;</value>
            <value>&quot;FCA&quot;</value>
            <value>&quot;FLG&quot;</value>
            <value>&quot;FLO&quot;</value>
            <value>&quot;FNL&quot;</value>
            <value>&quot;FNT&quot;</value>
            <value>&quot;FOE&quot;</value>
            <value>&quot;FSD&quot;</value>
            <value>&quot;FSM&quot;</value>
            <value>&quot;FWA&quot;</value>
            <value>&quot;GCC&quot;</value>
            <value>&quot;GCK&quot;</value>
            <value>&quot;GEG&quot;</value>
            <value>&quot;GFK&quot;</value>
            <value>&quot;GGG&quot;</value>
            <value>&quot;GJT&quot;</value>
            <value>&quot;GNV&quot;</value>
            <value>&quot;GPT&quot;</value>
            <value>&quot;GRB&quot;</value>
            <value>&quot;GRI&quot;</value>
            <value>&quot;GRK&quot;</value>
            <value>&quot;GRR&quot;</value>
            <value>&quot;GSO&quot;</value>
            <value>&quot;GSP&quot;</value>
            <value>&quot;GST&quot;</value>
            <value>&quot;GTF&quot;</value>
            <value>&quot;GTR&quot;</value>
            <value>&quot;GUC&quot;</value>
            <value>&quot;GUM&quot;</value>
            <value>&quot;HDN&quot;</value>
            <value>&quot;HGR&quot;</value>
            <value>&quot;HHH&quot;</value>
            <value>&quot;HIB&quot;</value>
            <value>&quot;HLN&quot;</value>
            <value>&quot;HOB&quot;</value>
            <value>&quot;HPN&quot;</value>
            <value>&quot;HRL&quot;</value>
            <value>&quot;HSV&quot;</value>
            <value>&quot;HTS&quot;</value>
            <value>&quot;HVN&quot;</value>
            <value>&quot;HYA&quot;</value>
            <value>&quot;HYS&quot;</value>
            <value>&quot;IAG&quot;</value>
            <value>&quot;ICT&quot;</value>
            <value>&quot;IDA&quot;</value>
            <value>&quot;IFP&quot;</value>
            <value>&quot;ILG&quot;</value>
            <value>&quot;ILM&quot;</value>
            <value>&quot;IMT&quot;</value>
            <value>&quot;INL&quot;</value>
            <value>&quot;IPL&quot;</value>
            <value>&quot;ISN&quot;</value>
            <value>&quot;ISP&quot;</value>
            <value>&quot;ITH&quot;</value>
            <value>&quot;ITO&quot;</value>
            <value>&quot;IYK&quot;</value>
            <value>&quot;JAC&quot;</value>
            <value>&quot;JAN&quot;</value>
            <value>&quot;JAX&quot;</value>
            <value>&quot;JLN&quot;</value>
            <value>&quot;JMS&quot;</value>
            <value>&quot;JNU&quot;</value>
            <value>&quot;KOA&quot;</value>
            <value>&quot;KTN&quot;</value>
            <value>&quot;LAN&quot;</value>
            <value>&quot;LAR&quot;</value>
            <value>&quot;LAW&quot;</value>
            <value>&quot;LBB&quot;</value>
            <value>&quot;LBE&quot;</value>
            <value>&quot;LBF&quot;</value>
            <value>&quot;LBL&quot;</value>
            <value>&quot;LCH&quot;</value>
            <value>&quot;LCK&quot;</value>
            <value>&quot;LEX&quot;</value>
            <value>&quot;LFT&quot;</value>
            <value>&quot;LGB&quot;</value>
            <value>&quot;LIH&quot;</value>
            <value>&quot;LIT&quot;</value>
            <value>&quot;LMT&quot;</value>
            <value>&quot;LNK&quot;</value>
            <value>&quot;LRD&quot;</value>
            <value>&quot;LSE&quot;</value>
            <value>&quot;LWB&quot;</value>
            <value>&quot;LWS&quot;</value>
            <value>&quot;LYH&quot;</value>
            <value>&quot;MAF&quot;</value>
            <value>&quot;MBS&quot;</value>
            <value>&quot;MDT&quot;</value>
            <value>&quot;MEI&quot;</value>
            <value>&quot;MEM&quot;</value>
            <value>&quot;MFE&quot;</value>
            <value>&quot;MFR&quot;</value>
            <value>&quot;MGM&quot;</value>
            <value>&quot;MHK&quot;</value>
            <value>&quot;MHT&quot;</value>
            <value>&quot;MKG&quot;</value>
            <value>&quot;MLB&quot;</value>
            <value>&quot;MLI&quot;</value>
            <value>&quot;MLU&quot;</value>
            <value>&quot;MMH&quot;</value>
            <value>&quot;MOB&quot;</value>
            <value>&quot;MOD&quot;</value>
            <value>&quot;MOT&quot;</value>
            <value>&quot;MQT&quot;</value>
            <value>&quot;MRY&quot;</value>
            <value>&quot;MSN&quot;</value>
            <value>&quot;MSO&quot;</value>
            <value>&quot;MTJ&quot;</value>
            <value>&quot;MVY&quot;</value>
            <value>&quot;MYR&quot;</value>
            <value>&quot;OAJ&quot;</value>
            <value>&quot;OGD&quot;</value>
            <value>&quot;OGG&quot;</value>
            <value>&quot;OGS&quot;</value>
            <value>&quot;OKC&quot;</value>
            <value>&quot;OMA&quot;</value>
            <value>&quot;OME&quot;</value>
            <value>&quot;ONT&quot;</value>
            <value>&quot;ORF&quot;</value>
            <value>&quot;ORH&quot;</value>
            <value>&quot;OTH&quot;</value>
            <value>&quot;OTZ&quot;</value>
            <value>&quot;OWB&quot;</value>
            <value>&quot;PAH&quot;</value>
            <value>&quot;PBG&quot;</value>
            <value>&quot;PBI&quot;</value>
            <value>&quot;PGD&quot;</value>
            <value>&quot;PGV&quot;</value>
            <value>&quot;PHF&quot;</value>
            <value>&quot;PIA&quot;</value>
            <value>&quot;PIB&quot;</value>
            <value>&quot;PIE&quot;</value>
            <value>&quot;PIH&quot;</value>
            <value>&quot;PLN&quot;</value>
            <value>&quot;PNS&quot;</value>
            <value>&quot;PPG&quot;</value>
            <value>&quot;PSC&quot;</value>
            <value>&quot;PSE&quot;</value>
            <value>&quot;PSG&quot;</value>
            <value>&quot;PSM&quot;</value>
            <value>&quot;PSP&quot;</value>
            <value>&quot;PUB&quot;</value>
            <value>&quot;PVD&quot;</value>
            <value>&quot;PVU&quot;</value>
            <value>&quot;PWM&quot;</value>
            <value>&quot;RAP&quot;</value>
            <value>&quot;RDD&quot;</value>
            <value>&quot;RDM&quot;</value>
            <value>&quot;RFD&quot;</value>
            <value>&quot;RHI&quot;</value>
            <value>&quot;RIC&quot;</value>
            <value>&quot;RKS&quot;</value>
            <value>&quot;RNO&quot;</value>
            <value>&quot;ROA&quot;</value>
            <value>&quot;ROC&quot;</value>
            <value>&quot;ROW&quot;</value>
            <value>&quot;RST&quot;</value>
            <value>&quot;RSW&quot;</value>
            <value>&quot;SAF&quot;</value>
            <value>&quot;SAV&quot;</value>
            <value>&quot;SBA&quot;</value>
            <value>&quot;SBN&quot;</value>
            <value>&quot;SBP&quot;</value>
            <value>&quot;SCC&quot;</value>
            <value>&quot;SCE&quot;</value>
            <value>&quot;SCK&quot;</value>
            <value>&quot;SDF&quot;</value>
            <value>&quot;SFB&quot;</value>
            <value>&quot;SGF&quot;</value>
            <value>&quot;SGU&quot;</value>
            <value>&quot;SHD&quot;</value>
            <value>&quot;SHV&quot;</value>
            <value>&quot;SIT&quot;</value>
            <value>&quot;SJT&quot;</value>
            <value>&quot;SJU&quot;</value>
            <value>&quot;SLN&quot;</value>
            <value>&quot;SMX&quot;</value>
            <value>&quot;SPI&quot;</value>
            <value>&quot;SPN&quot;</value>
            <value>&quot;SPS&quot;</value>
            <value>&quot;SRQ&quot;</value>
            <value>&quot;STC&quot;</value>
            <value>&quot;STS&quot;</value>
            <value>&quot;STT&quot;</value>
            <value>&quot;STX&quot;</value>
            <value>&quot;SUN&quot;</value>
            <value>&quot;SUX&quot;</value>
            <value>&quot;SWF&quot;</value>
            <value>&quot;SWO&quot;</value>
            <value>&quot;SYR&quot;</value>
            <value>&quot;TLH&quot;</value>
            <value>&quot;TOL&quot;</value>
            <value>&quot;TRI&quot;</value>
            <value>&quot;TTN&quot;</value>
            <value>&quot;TUL&quot;</value>
            <value>&quot;TUS&quot;</value>
            <value>&quot;TVC&quot;</value>
            <value>&quot;TWF&quot;</value>
            <value>&quot;TXK&quot;</value>
            <value>&quot;TYR&quot;</value>
            <value>&quot;TYS&quot;</value>
            <value>&quot;UIN&quot;</value>
            <value>&quot;USA&quot;</value>
            <value>&quot;UST&quot;</value>
            <value>&quot;VEL&quot;</value>
            <value>&quot;VLD&quot;</value>
            <value>&quot;VPS&quot;</value>
            <value>&quot;WRG&quot;</value>
            <value>&quot;WYS&quot;</value>
            <value>&quot;XNA&quot;</value>
            <value>&quot;YAK&quot;</value>
            <value>&quot;YNG&quot;</value>
            <value>&quot;YUM&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='All Delays (AVG)' datatype='real' name='[Calculation_1397523314907598848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
      </column>
      <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
      </column>
      <column caption='Total Flights' datatype='real' name='[Calculation_1397523314949632005]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [arr_flights] + [arr_diverted]' />
      </column>
      <column caption='Avg Delay Percentage' datatype='real' name='[Calculation_1397523314950144006]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([arr_del15])/SUM([Calculation_1397523314949632005])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='City' datatype='string' name='[airport_name - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.12m2fuv0p58mks1a5j6v21idq34y].[airport_name]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [airport_name], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='State' datatype='string' name='[airport_name - Split 2]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.12m2fuv0p58mks1a5j6v21idq34y].[airport_name]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( [airport_name], &quot;,&quot;, 2 ), &quot;:&quot;, 1 ) )' />
      </column>
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Cancelled' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
      <column caption='Arr Del15' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
      <column caption='Arr Diverted' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
      <column caption='Arr Flights' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Ct' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='Late Aircraft Ct' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Nas Ct' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
      <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Ct' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_cancelled]' derivation='Avg' name='[avg:arr_cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_diverted]' derivation='Avg' name='[avg:arr_diverted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Median' name='[med: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_del15]' derivation='Sum' name='[sum:arr_del15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_diverted]' derivation='Sum' name='[sum:arr_diverted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397523314907598848]' derivation='User' name='[usr:Calculation_1397523314907598848:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Airport Name)' hidden='true' name='[Action (Airport Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airport_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Carrier Name)' hidden='true' name='[Action (Carrier Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier_name]' />
        </groupfilter>
      </group>
      <group caption=' Top 10 delayed airports' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1397523314907598848]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[airport_name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State, City'>
          <field>[airport_name - Split 2]</field>
          <field>[airport_name - Split 1]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Adittya/Desktop/877050760_72018_182_airline_delay_causes1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/23/2018 07:32:47 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='94396' timestamp-start='2018-10-23 07:32:47.546' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name> month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias> month</remote-alias>
              <ordinal>1</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>2</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_name</remote-alias>
              <ordinal>3</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>4</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>253</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport_name</remote-alias>
              <ordinal>5</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>253</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_flights</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arr_flights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_flights</remote-alias>
              <ordinal>6</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>573</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_del15</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arr_del15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_del15</remote-alias>
              <ordinal>7</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_ct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[carrier_ct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_ct</remote-alias>
              <ordinal>8</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2246</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name> weather_ct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ weather_ct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias> weather_ct</remote-alias>
              <ordinal>9</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>396</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_ct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[nas_ct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_ct</remote-alias>
              <ordinal>10</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1766</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_ct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[security_ct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_ct</remote-alias>
              <ordinal>11</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_ct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[late_aircraft_ct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_ct</remote-alias>
              <ordinal>12</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1913</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_cancelled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arr_cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_cancelled</remote-alias>
              <ordinal>13</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_diverted</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arr_diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_diverted</remote-alias>
              <ordinal>14</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name> arr_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ arr_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias> arr_delay</remote-alias>
              <ordinal>15</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3973</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name> carrier_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ carrier_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias> carrier_delay</remote-alias>
              <ordinal>16</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1656</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weather_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather_delay</remote-alias>
              <ordinal>17</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>362</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[nas_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_delay</remote-alias>
              <ordinal>18</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>905</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[security_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_delay</remote-alias>
              <ordinal>19</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[late_aircraft_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_delay</remote-alias>
              <ordinal>20</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1491</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F22</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F22]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F22</remote-alias>
              <ordinal>21</ordinal>
              <family>877050760_72018_182_airline_delay_causes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.357751' group-percentage='0.0408859' measure-ordering='alphabetic' measure-percentage='0.601363' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[Airport (group)]' type='shape'>
            <map to='circle'>
              <bucket>&quot;ABE, ABI, ABQ and 318 more&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Small Airports&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Big Airports&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Airport (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Small Airports&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Big Airports&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[med: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:arr_cancelled:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:arr_cancelled:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:security_ct:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:nas_ct:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:carrier_ct:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:arr_del15:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum: weather_ct:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:arr_diverted:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:late_aircraft_ct:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:arr_diverted:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Airport Names' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Top 10 delayed carriers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Airport Names'>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='All Delays (AVG)' datatype='real' name='[Calculation_1397523314907598848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='None' name='[none:airport_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1397523314907598848]' derivation='User' name='[usr:Calculation_1397523314907598848:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]' filter-group='5'>
            <groupfilter from='&quot;Aberdeen, SD: Aberdeen Regional&quot;' function='range' level='[none:airport_name:nk]' to='&quot;Yuma, AZ: Yuma MCAS/Yuma International&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[yr:Calculation_1397523314924310531:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1675' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' />
              <size column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' />
              <text column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]' />
              <lod column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Airport Size'>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Airport Size' datatype='string' name='[Airport (group)]' role='dimension' semantic-role='[Airport].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[airport]' default='&quot;Big Airports&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Small Airports&quot;'>
                  <value>&quot;ABE&quot;</value>
                  <value>&quot;ABI&quot;</value>
                  <value>&quot;ABQ&quot;</value>
                  <value>&quot;ABR&quot;</value>
                  <value>&quot;ABY&quot;</value>
                  <value>&quot;ACK&quot;</value>
                  <value>&quot;ACT&quot;</value>
                  <value>&quot;ACV&quot;</value>
                  <value>&quot;ACY&quot;</value>
                  <value>&quot;ADK&quot;</value>
                  <value>&quot;ADQ&quot;</value>
                  <value>&quot;AEX&quot;</value>
                  <value>&quot;AGS&quot;</value>
                  <value>&quot;AKN&quot;</value>
                  <value>&quot;ALB&quot;</value>
                  <value>&quot;ALO&quot;</value>
                  <value>&quot;AMA&quot;</value>
                  <value>&quot;ANC&quot;</value>
                  <value>&quot;APN&quot;</value>
                  <value>&quot;ART&quot;</value>
                  <value>&quot;ASE&quot;</value>
                  <value>&quot;ATW&quot;</value>
                  <value>&quot;AVL&quot;</value>
                  <value>&quot;AVP&quot;</value>
                  <value>&quot;AZA&quot;</value>
                  <value>&quot;AZO&quot;</value>
                  <value>&quot;BDL&quot;</value>
                  <value>&quot;BET&quot;</value>
                  <value>&quot;BFF&quot;</value>
                  <value>&quot;BFL&quot;</value>
                  <value>&quot;BGM&quot;</value>
                  <value>&quot;BGR&quot;</value>
                  <value>&quot;BHM&quot;</value>
                  <value>&quot;BIL&quot;</value>
                  <value>&quot;BIS&quot;</value>
                  <value>&quot;BJI&quot;</value>
                  <value>&quot;BKG&quot;</value>
                  <value>&quot;BLI&quot;</value>
                  <value>&quot;BLV&quot;</value>
                  <value>&quot;BMI&quot;</value>
                  <value>&quot;BOI&quot;</value>
                  <value>&quot;BPT&quot;</value>
                  <value>&quot;BQK&quot;</value>
                  <value>&quot;BQN&quot;</value>
                  <value>&quot;BRD&quot;</value>
                  <value>&quot;BRO&quot;</value>
                  <value>&quot;BRW&quot;</value>
                  <value>&quot;BTM&quot;</value>
                  <value>&quot;BTR&quot;</value>
                  <value>&quot;BTV&quot;</value>
                  <value>&quot;BUF&quot;</value>
                  <value>&quot;BUR&quot;</value>
                  <value>&quot;BZN&quot;</value>
                  <value>&quot;CAE&quot;</value>
                  <value>&quot;CAK&quot;</value>
                  <value>&quot;CDC&quot;</value>
                  <value>&quot;CDV&quot;</value>
                  <value>&quot;CEC&quot;</value>
                  <value>&quot;CGI&quot;</value>
                  <value>&quot;CHA&quot;</value>
                  <value>&quot;CHO&quot;</value>
                  <value>&quot;CHS&quot;</value>
                  <value>&quot;CIC&quot;</value>
                  <value>&quot;CID&quot;</value>
                  <value>&quot;CIU&quot;</value>
                  <value>&quot;CKB&quot;</value>
                  <value>&quot;CLD&quot;</value>
                  <value>&quot;CLL&quot;</value>
                  <value>&quot;CMH&quot;</value>
                  <value>&quot;CMI&quot;</value>
                  <value>&quot;CMX&quot;</value>
                  <value>&quot;CNY&quot;</value>
                  <value>&quot;COD&quot;</value>
                  <value>&quot;COS&quot;</value>
                  <value>&quot;COU&quot;</value>
                  <value>&quot;CPR&quot;</value>
                  <value>&quot;CRP&quot;</value>
                  <value>&quot;CRW&quot;</value>
                  <value>&quot;CSG&quot;</value>
                  <value>&quot;CVG&quot;</value>
                  <value>&quot;CWA&quot;</value>
                  <value>&quot;CYS&quot;</value>
                  <value>&quot;DAB&quot;</value>
                  <value>&quot;DAY&quot;</value>
                  <value>&quot;DBQ&quot;</value>
                  <value>&quot;DHN&quot;</value>
                  <value>&quot;DIK&quot;</value>
                  <value>&quot;DLG&quot;</value>
                  <value>&quot;DLH&quot;</value>
                  <value>&quot;DRO&quot;</value>
                  <value>&quot;DRT&quot;</value>
                  <value>&quot;DSM&quot;</value>
                  <value>&quot;DVL&quot;</value>
                  <value>&quot;EAU&quot;</value>
                  <value>&quot;ECP&quot;</value>
                  <value>&quot;EGE&quot;</value>
                  <value>&quot;EKO&quot;</value>
                  <value>&quot;ELM&quot;</value>
                  <value>&quot;ELP&quot;</value>
                  <value>&quot;ERI&quot;</value>
                  <value>&quot;ESC&quot;</value>
                  <value>&quot;EUG&quot;</value>
                  <value>&quot;EVV&quot;</value>
                  <value>&quot;EWN&quot;</value>
                  <value>&quot;EYW&quot;</value>
                  <value>&quot;FAI&quot;</value>
                  <value>&quot;FAR&quot;</value>
                  <value>&quot;FAT&quot;</value>
                  <value>&quot;FAY&quot;</value>
                  <value>&quot;FCA&quot;</value>
                  <value>&quot;FLG&quot;</value>
                  <value>&quot;FLO&quot;</value>
                  <value>&quot;FNL&quot;</value>
                  <value>&quot;FNT&quot;</value>
                  <value>&quot;FOE&quot;</value>
                  <value>&quot;FSD&quot;</value>
                  <value>&quot;FSM&quot;</value>
                  <value>&quot;FWA&quot;</value>
                  <value>&quot;GCC&quot;</value>
                  <value>&quot;GCK&quot;</value>
                  <value>&quot;GEG&quot;</value>
                  <value>&quot;GFK&quot;</value>
                  <value>&quot;GGG&quot;</value>
                  <value>&quot;GJT&quot;</value>
                  <value>&quot;GNV&quot;</value>
                  <value>&quot;GPT&quot;</value>
                  <value>&quot;GRB&quot;</value>
                  <value>&quot;GRI&quot;</value>
                  <value>&quot;GRK&quot;</value>
                  <value>&quot;GRR&quot;</value>
                  <value>&quot;GSO&quot;</value>
                  <value>&quot;GSP&quot;</value>
                  <value>&quot;GST&quot;</value>
                  <value>&quot;GTF&quot;</value>
                  <value>&quot;GTR&quot;</value>
                  <value>&quot;GUC&quot;</value>
                  <value>&quot;GUM&quot;</value>
                  <value>&quot;HDN&quot;</value>
                  <value>&quot;HGR&quot;</value>
                  <value>&quot;HHH&quot;</value>
                  <value>&quot;HIB&quot;</value>
                  <value>&quot;HLN&quot;</value>
                  <value>&quot;HOB&quot;</value>
                  <value>&quot;HPN&quot;</value>
                  <value>&quot;HRL&quot;</value>
                  <value>&quot;HSV&quot;</value>
                  <value>&quot;HTS&quot;</value>
                  <value>&quot;HVN&quot;</value>
                  <value>&quot;HYA&quot;</value>
                  <value>&quot;HYS&quot;</value>
                  <value>&quot;IAG&quot;</value>
                  <value>&quot;ICT&quot;</value>
                  <value>&quot;IDA&quot;</value>
                  <value>&quot;IFP&quot;</value>
                  <value>&quot;ILG&quot;</value>
                  <value>&quot;ILM&quot;</value>
                  <value>&quot;IMT&quot;</value>
                  <value>&quot;INL&quot;</value>
                  <value>&quot;IPL&quot;</value>
                  <value>&quot;ISN&quot;</value>
                  <value>&quot;ISP&quot;</value>
                  <value>&quot;ITH&quot;</value>
                  <value>&quot;ITO&quot;</value>
                  <value>&quot;IYK&quot;</value>
                  <value>&quot;JAC&quot;</value>
                  <value>&quot;JAN&quot;</value>
                  <value>&quot;JAX&quot;</value>
                  <value>&quot;JLN&quot;</value>
                  <value>&quot;JMS&quot;</value>
                  <value>&quot;JNU&quot;</value>
                  <value>&quot;KOA&quot;</value>
                  <value>&quot;KTN&quot;</value>
                  <value>&quot;LAN&quot;</value>
                  <value>&quot;LAR&quot;</value>
                  <value>&quot;LAW&quot;</value>
                  <value>&quot;LBB&quot;</value>
                  <value>&quot;LBE&quot;</value>
                  <value>&quot;LBF&quot;</value>
                  <value>&quot;LBL&quot;</value>
                  <value>&quot;LCH&quot;</value>
                  <value>&quot;LCK&quot;</value>
                  <value>&quot;LEX&quot;</value>
                  <value>&quot;LFT&quot;</value>
                  <value>&quot;LGB&quot;</value>
                  <value>&quot;LIH&quot;</value>
                  <value>&quot;LIT&quot;</value>
                  <value>&quot;LMT&quot;</value>
                  <value>&quot;LNK&quot;</value>
                  <value>&quot;LRD&quot;</value>
                  <value>&quot;LSE&quot;</value>
                  <value>&quot;LWB&quot;</value>
                  <value>&quot;LWS&quot;</value>
                  <value>&quot;LYH&quot;</value>
                  <value>&quot;MAF&quot;</value>
                  <value>&quot;MBS&quot;</value>
                  <value>&quot;MDT&quot;</value>
                  <value>&quot;MEI&quot;</value>
                  <value>&quot;MEM&quot;</value>
                  <value>&quot;MFE&quot;</value>
                  <value>&quot;MFR&quot;</value>
                  <value>&quot;MGM&quot;</value>
                  <value>&quot;MHK&quot;</value>
                  <value>&quot;MHT&quot;</value>
                  <value>&quot;MKG&quot;</value>
                  <value>&quot;MLB&quot;</value>
                  <value>&quot;MLI&quot;</value>
                  <value>&quot;MLU&quot;</value>
                  <value>&quot;MMH&quot;</value>
                  <value>&quot;MOB&quot;</value>
                  <value>&quot;MOD&quot;</value>
                  <value>&quot;MOT&quot;</value>
                  <value>&quot;MQT&quot;</value>
                  <value>&quot;MRY&quot;</value>
                  <value>&quot;MSN&quot;</value>
                  <value>&quot;MSO&quot;</value>
                  <value>&quot;MTJ&quot;</value>
                  <value>&quot;MVY&quot;</value>
                  <value>&quot;MYR&quot;</value>
                  <value>&quot;OAJ&quot;</value>
                  <value>&quot;OGD&quot;</value>
                  <value>&quot;OGG&quot;</value>
                  <value>&quot;OGS&quot;</value>
                  <value>&quot;OKC&quot;</value>
                  <value>&quot;OMA&quot;</value>
                  <value>&quot;OME&quot;</value>
                  <value>&quot;ONT&quot;</value>
                  <value>&quot;ORF&quot;</value>
                  <value>&quot;ORH&quot;</value>
                  <value>&quot;OTH&quot;</value>
                  <value>&quot;OTZ&quot;</value>
                  <value>&quot;OWB&quot;</value>
                  <value>&quot;PAH&quot;</value>
                  <value>&quot;PBG&quot;</value>
                  <value>&quot;PBI&quot;</value>
                  <value>&quot;PGD&quot;</value>
                  <value>&quot;PGV&quot;</value>
                  <value>&quot;PHF&quot;</value>
                  <value>&quot;PIA&quot;</value>
                  <value>&quot;PIB&quot;</value>
                  <value>&quot;PIE&quot;</value>
                  <value>&quot;PIH&quot;</value>
                  <value>&quot;PLN&quot;</value>
                  <value>&quot;PNS&quot;</value>
                  <value>&quot;PPG&quot;</value>
                  <value>&quot;PSC&quot;</value>
                  <value>&quot;PSE&quot;</value>
                  <value>&quot;PSG&quot;</value>
                  <value>&quot;PSM&quot;</value>
                  <value>&quot;PSP&quot;</value>
                  <value>&quot;PUB&quot;</value>
                  <value>&quot;PVD&quot;</value>
                  <value>&quot;PVU&quot;</value>
                  <value>&quot;PWM&quot;</value>
                  <value>&quot;RAP&quot;</value>
                  <value>&quot;RDD&quot;</value>
                  <value>&quot;RDM&quot;</value>
                  <value>&quot;RFD&quot;</value>
                  <value>&quot;RHI&quot;</value>
                  <value>&quot;RIC&quot;</value>
                  <value>&quot;RKS&quot;</value>
                  <value>&quot;RNO&quot;</value>
                  <value>&quot;ROA&quot;</value>
                  <value>&quot;ROC&quot;</value>
                  <value>&quot;ROW&quot;</value>
                  <value>&quot;RST&quot;</value>
                  <value>&quot;RSW&quot;</value>
                  <value>&quot;SAF&quot;</value>
                  <value>&quot;SAV&quot;</value>
                  <value>&quot;SBA&quot;</value>
                  <value>&quot;SBN&quot;</value>
                  <value>&quot;SBP&quot;</value>
                  <value>&quot;SCC&quot;</value>
                  <value>&quot;SCE&quot;</value>
                  <value>&quot;SCK&quot;</value>
                  <value>&quot;SDF&quot;</value>
                  <value>&quot;SFB&quot;</value>
                  <value>&quot;SGF&quot;</value>
                  <value>&quot;SGU&quot;</value>
                  <value>&quot;SHD&quot;</value>
                  <value>&quot;SHV&quot;</value>
                  <value>&quot;SIT&quot;</value>
                  <value>&quot;SJT&quot;</value>
                  <value>&quot;SJU&quot;</value>
                  <value>&quot;SLN&quot;</value>
                  <value>&quot;SMX&quot;</value>
                  <value>&quot;SPI&quot;</value>
                  <value>&quot;SPN&quot;</value>
                  <value>&quot;SPS&quot;</value>
                  <value>&quot;SRQ&quot;</value>
                  <value>&quot;STC&quot;</value>
                  <value>&quot;STS&quot;</value>
                  <value>&quot;STT&quot;</value>
                  <value>&quot;STX&quot;</value>
                  <value>&quot;SUN&quot;</value>
                  <value>&quot;SUX&quot;</value>
                  <value>&quot;SWF&quot;</value>
                  <value>&quot;SWO&quot;</value>
                  <value>&quot;SYR&quot;</value>
                  <value>&quot;TLH&quot;</value>
                  <value>&quot;TOL&quot;</value>
                  <value>&quot;TRI&quot;</value>
                  <value>&quot;TTN&quot;</value>
                  <value>&quot;TUL&quot;</value>
                  <value>&quot;TUS&quot;</value>
                  <value>&quot;TVC&quot;</value>
                  <value>&quot;TWF&quot;</value>
                  <value>&quot;TXK&quot;</value>
                  <value>&quot;TYR&quot;</value>
                  <value>&quot;TYS&quot;</value>
                  <value>&quot;UIN&quot;</value>
                  <value>&quot;USA&quot;</value>
                  <value>&quot;UST&quot;</value>
                  <value>&quot;VEL&quot;</value>
                  <value>&quot;VLD&quot;</value>
                  <value>&quot;VPS&quot;</value>
                  <value>&quot;WRG&quot;</value>
                  <value>&quot;WYS&quot;</value>
                  <value>&quot;XNA&quot;</value>
                  <value>&quot;YAK&quot;</value>
                  <value>&quot;YNG&quot;</value>
                  <value>&quot;YUM&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Total Flights' datatype='real' name='[Calculation_1397523314949632005]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [arr_flights] + [arr_diverted]' />
            </column>
            <column caption='Avg Delay Percentage' datatype='real' name='[Calculation_1397523314950144006]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([arr_del15])/SUM([Calculation_1397523314949632005])' />
            </column>
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Arr Del15' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Arr Diverted' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
            <column caption='Arr Flights' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397523314949632005]' derivation='Sum' name='[sum:Calculation_1397523314949632005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1397523314950144006]' derivation='User' name='[usr:Calculation_1397523314950144006:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' filter-group='15'>
            <groupfilter function='level-members' level='[yr:Calculation_1397523314924310531:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport:nk]' />
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314950144006:qk]</rows>
        <cols>[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:Calculation_1397523314949632005:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Carrier Name'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delays by Carrier Name</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='All Delays (AVG)' datatype='real' name='[Calculation_1397523314907598848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='None' name='[none:airport_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1397523314907598848]' derivation='User' name='[usr:Calculation_1397523314907598848:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:weather_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:security_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]&quot;</bucket>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:late_aircraft_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:nas_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: carrier_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:weather_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:security_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:weather_delay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Adak Island, AK: Adak&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Albuquerque, NM: Albuquerque International Sunport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Anchorage, AK: Ted Stevens Anchorage International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Atlanta, GA: Hartsfield-Jackson Atlanta International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Austin, TX: Austin - Bergstrom International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Baltimore, MD: Baltimore/Washington International Thurgood Marshall&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Barrow, AK: Wiley Post/Will Rogers Memorial&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Bellingham, WA: Bellingham International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Bend/Redmond, OR: Roberts Field&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Bethel, AK: Bethel Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Boise, ID: Boise Air Terminal&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Boston, MA: Logan International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Burbank, CA: Bob Hope&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Charleston, SC: Charleston AFB/International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Chicago, IL: Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Cordova, AK: Merle K Mudhole Smith&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Dallas, TX: Dallas Love Field&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Dallas/Fort Worth, TX: Dallas/Fort Worth International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Deadhorse, AK: Deadhorse Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Denver, CO: Denver International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Detroit, MI: Detroit Metro Wayne County&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Dillingham, AK: Dillingham Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Fairbanks, AK: Fairbanks International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Fort Lauderdale, FL: Fort Lauderdale-Hollywood International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Gustavus, AK: Gustavus Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Honolulu, HI: Daniel K Inouye International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Houston, TX: George Bush Intercontinental/Houston&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Indianapolis, IN: Indianapolis International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Juneau, AK: Juneau International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kahului, HI: Kahului Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kansas City, MO: Kansas City International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Ketchikan, AK: Ketchikan International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;King Salmon, AK: King Salmon Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kodiak, AK: Kodiak Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kona, HI: Ellison Onizuka Kona International at Keahole&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kotzebue, AK: Ralph Wien Memorial&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Las Vegas, NV: McCarran International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Lihue, HI: Lihue Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Los Angeles, CA: Los Angeles International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Miami, FL: Miami International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Milwaukee, WI: General Mitchell International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Minneapolis, MN: Minneapolis-St Paul International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Nashville, TN: Nashville International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;New Orleans, LA: Louis Armstrong New Orleans International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;New York, NY: John F. Kennedy International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Newark, NJ: Newark Liberty International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Nome, AK: Nome Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Oakland, CA: Metropolitan Oakland International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Omaha, NE: Eppley Airfield&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Ontario, CA: Ontario International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Orlando, FL: Orlando International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Palm Springs, CA: Palm Springs International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Petersburg, AK: Petersburg James A Johnson&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Philadelphia, PA: Philadelphia International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Phoenix, AZ: Phoenix Sky Harbor International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Portland, OR: Portland International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Raleigh/Durham, NC: Raleigh-Durham International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Sacramento, CA: Sacramento International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Salt Lake City, UT: Salt Lake City International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Antonio, TX: San Antonio International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Diego, CA: San Diego International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Francisco, CA: San Francisco International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Jose, CA: Norman Y. Mineta San Jose International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Santa Ana, CA: John Wayne Airport-Orange County&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Santa Barbara, CA: Santa Barbara Municipal&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Seattle, WA: Seattle/Tacoma International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Sitka, AK: Sitka Rocky Gutierrez&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Spokane, WA: Spokane International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;St. Louis, MO: St Louis Lambert International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Tampa, FL: Tampa International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Tucson, AZ: Tucson International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Washington, DC: Ronald Reagan Washington National&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Washington, DC: Washington Dulles International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Wrangell, AK: Wrangell Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Yakutat, AK: Yakutat Airport&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;United Air Lines Inc.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]'>
            <groupfilter function='member' level='[yr:Calculation_1397523314924310531:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' value='183' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values]</rows>
        <cols>([federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk] / [federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='All Delays (AVG)' datatype='real' name='[Calculation_1397523314907598848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Month-Trunc' name='[tmn:Calculation_1397523314924310531:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1397523314907598848]' derivation='User' name='[usr:Calculation_1397523314907598848:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;United Air Lines Inc.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]</rows>
        <cols>[federated.12m2fuv0p58mks1a5j6v21idq34y].[tmn:Calculation_1397523314924310531:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delays, Cancellations and Divertions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Delays, Cancellations and Divertions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Arr Cancelled' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Arr Diverted' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
            <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Avg' name='[avg:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_diverted]' derivation='Avg' name='[avg:arr_diverted:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[ month]' derivation='None' name='[none: month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airport_name]' derivation='None' name='[none:airport_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:arr_cancelled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:arr_diverted:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Albany, NY: Albany International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Albuquerque, NM: Albuquerque International Sunport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Allentown/Bethlehem/Easton, PA: Lehigh Valley International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Anchorage, AK: Ted Stevens Anchorage International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Atlanta, GA: Hartsfield-Jackson Atlanta International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Austin, TX: Austin - Bergstrom International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Baltimore, MD: Baltimore/Washington International Thurgood Marshall&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Birmingham, AL: Birmingham-Shuttlesworth International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Boise, ID: Boise Air Terminal&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Boston, MA: Logan International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Buffalo, NY: Buffalo Niagara International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Burbank, CA: Bob Hope&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Burlington, VT: Burlington International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Charleston, SC: Charleston AFB/International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Charlotte Amalie, VI: Cyril E King&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Charlotte, NC: Charlotte Douglas International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Chicago, IL: Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Christiansted, VI: Henry E. Rohlsen&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Cleveland, OH: Cleveland-Hopkins International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Columbus, OH: John Glenn Columbus International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Dallas/Fort Worth, TX: Dallas/Fort Worth International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Daytona Beach, FL: Daytona Beach International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Denver, CO: Denver International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Des Moines, IA: Des Moines International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Detroit, MI: Detroit Metro Wayne County&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;El Paso, TX: El Paso International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Fort Lauderdale, FL: Fort Lauderdale-Hollywood International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Fort Myers, FL: Southwest Florida International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Greensboro/High Point, NC: Piedmont Triad International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Harrisburg, PA: Harrisburg International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Hartford, CT: Bradley International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Honolulu, HI: Daniel K Inouye International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Houston, TX: George Bush Intercontinental/Houston&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Indianapolis, IN: Indianapolis International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Jacksonville, FL: Jacksonville International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kahului, HI: Kahului Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kansas City, MO: Kansas City International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Kona, HI: Ellison Onizuka Kona International at Keahole&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Las Vegas, NV: McCarran International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Lihue, HI: Lihue Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Long Beach, CA: Long Beach Airport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Los Angeles, CA: Los Angeles International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Louisville, KY: Louisville International-Standiford Field&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Manchester, NH: Manchester-Boston Regional&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Memphis, TN: Memphis International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Miami, FL: Miami International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Milwaukee, WI: General Mitchell International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Minneapolis, MN: Minneapolis-St Paul International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Myrtle Beach, SC: Myrtle Beach International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Nashville, TN: Nashville International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;New Orleans, LA: Louis Armstrong New Orleans International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;New York, NY: John F. Kennedy International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;New York, NY: LaGuardia&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Newark, NJ: Newark Liberty International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Norfolk, VA: Norfolk International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Oakland, CA: Metropolitan Oakland International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Omaha, NE: Eppley Airfield&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Ontario, CA: Ontario International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Orlando, FL: Orlando International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Palm Springs, CA: Palm Springs International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Philadelphia, PA: Philadelphia International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Phoenix, AZ: Phoenix Sky Harbor International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Pittsburgh, PA: Pittsburgh International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Portland, ME: Portland International Jetport&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Portland, OR: Portland International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Providence, RI: Theodore Francis Green State&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Raleigh/Durham, NC: Raleigh-Durham International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Reno, NV: Reno/Tahoe International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Richmond, VA: Richmond International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Rochester, NY: Greater Rochester International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Sacramento, CA: Sacramento International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Salt Lake City, UT: Salt Lake City International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Antonio, TX: San Antonio International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Diego, CA: San Diego International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Francisco, CA: San Francisco International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Jose, CA: Norman Y. Mineta San Jose International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;San Juan, PR: Luis Munoz Marin International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Santa Ana, CA: John Wayne Airport-Orange County&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Sarasota/Bradenton, FL: Sarasota/Bradenton International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Seattle, WA: Seattle/Tacoma International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Spokane, WA: Spokane International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;St. Louis, MO: St Louis Lambert International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Syracuse, NY: Syracuse Hancock International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Tampa, FL: Tampa International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Tucson, AZ: Tucson International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Washington, DC: Ronald Reagan Washington National&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Washington, DC: Washington Dulles International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;West Palm Beach/Palm Beach, FL: Palm Beach International&quot;' />
              <groupfilter function='member' level='[none:airport_name:nk]' member='&quot;Wilmington, NC: Wilmington International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;United Air Lines Inc.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values]' scope='rows' value='Cancelled or Diverted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values] + ([federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk] + [federated.12m2fuv0p58mks1a5j6v21idq34y].[sum:Number of Records:qk]))</rows>
        <cols>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none: month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='All Delays (AVG)' datatype='real' name='[Calculation_1397523314907598848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport_name]' derivation='None' name='[none:airport_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1397523314907598848]' derivation='User' name='[usr:Calculation_1397523314907598848:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Action (Airport Name)]'>
            <groupfilter function='level-members' level='[airport_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]' filter-group='5'>
            <groupfilter from='&quot;Aberdeen, SD: Aberdeen Regional&quot;' function='range' level='[none:airport_name:nk]' to='&quot;Yuma, AZ: Yuma MCAS/Yuma International&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[yr:Calculation_1397523314924310531:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Action (Airport Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Longitude (generated)]' field-type='quantitative' max='-7113213.8794305036' min='-13795129.696043205' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Latitude (generated)]' field-type='quantitative' max='6549335.5925258454' min='2730509.4753865297' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' />
              <size column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' />
              <lod column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport:nk]' />
              <tooltip column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[attr:airport_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2872927188873291' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Latitude (generated)]</rows>
        <cols>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Airport Size' datatype='string' name='[Airport (group)]' role='dimension' semantic-role='[Airport].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[airport]' default='&quot;Big Airports&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Small Airports&quot;'>
                  <value>&quot;ABE&quot;</value>
                  <value>&quot;ABI&quot;</value>
                  <value>&quot;ABQ&quot;</value>
                  <value>&quot;ABR&quot;</value>
                  <value>&quot;ABY&quot;</value>
                  <value>&quot;ACK&quot;</value>
                  <value>&quot;ACT&quot;</value>
                  <value>&quot;ACV&quot;</value>
                  <value>&quot;ACY&quot;</value>
                  <value>&quot;ADK&quot;</value>
                  <value>&quot;ADQ&quot;</value>
                  <value>&quot;AEX&quot;</value>
                  <value>&quot;AGS&quot;</value>
                  <value>&quot;AKN&quot;</value>
                  <value>&quot;ALB&quot;</value>
                  <value>&quot;ALO&quot;</value>
                  <value>&quot;AMA&quot;</value>
                  <value>&quot;ANC&quot;</value>
                  <value>&quot;APN&quot;</value>
                  <value>&quot;ART&quot;</value>
                  <value>&quot;ASE&quot;</value>
                  <value>&quot;ATW&quot;</value>
                  <value>&quot;AVL&quot;</value>
                  <value>&quot;AVP&quot;</value>
                  <value>&quot;AZA&quot;</value>
                  <value>&quot;AZO&quot;</value>
                  <value>&quot;BDL&quot;</value>
                  <value>&quot;BET&quot;</value>
                  <value>&quot;BFF&quot;</value>
                  <value>&quot;BFL&quot;</value>
                  <value>&quot;BGM&quot;</value>
                  <value>&quot;BGR&quot;</value>
                  <value>&quot;BHM&quot;</value>
                  <value>&quot;BIL&quot;</value>
                  <value>&quot;BIS&quot;</value>
                  <value>&quot;BJI&quot;</value>
                  <value>&quot;BKG&quot;</value>
                  <value>&quot;BLI&quot;</value>
                  <value>&quot;BLV&quot;</value>
                  <value>&quot;BMI&quot;</value>
                  <value>&quot;BOI&quot;</value>
                  <value>&quot;BPT&quot;</value>
                  <value>&quot;BQK&quot;</value>
                  <value>&quot;BQN&quot;</value>
                  <value>&quot;BRD&quot;</value>
                  <value>&quot;BRO&quot;</value>
                  <value>&quot;BRW&quot;</value>
                  <value>&quot;BTM&quot;</value>
                  <value>&quot;BTR&quot;</value>
                  <value>&quot;BTV&quot;</value>
                  <value>&quot;BUF&quot;</value>
                  <value>&quot;BUR&quot;</value>
                  <value>&quot;BZN&quot;</value>
                  <value>&quot;CAE&quot;</value>
                  <value>&quot;CAK&quot;</value>
                  <value>&quot;CDC&quot;</value>
                  <value>&quot;CDV&quot;</value>
                  <value>&quot;CEC&quot;</value>
                  <value>&quot;CGI&quot;</value>
                  <value>&quot;CHA&quot;</value>
                  <value>&quot;CHO&quot;</value>
                  <value>&quot;CHS&quot;</value>
                  <value>&quot;CIC&quot;</value>
                  <value>&quot;CID&quot;</value>
                  <value>&quot;CIU&quot;</value>
                  <value>&quot;CKB&quot;</value>
                  <value>&quot;CLD&quot;</value>
                  <value>&quot;CLL&quot;</value>
                  <value>&quot;CMH&quot;</value>
                  <value>&quot;CMI&quot;</value>
                  <value>&quot;CMX&quot;</value>
                  <value>&quot;CNY&quot;</value>
                  <value>&quot;COD&quot;</value>
                  <value>&quot;COS&quot;</value>
                  <value>&quot;COU&quot;</value>
                  <value>&quot;CPR&quot;</value>
                  <value>&quot;CRP&quot;</value>
                  <value>&quot;CRW&quot;</value>
                  <value>&quot;CSG&quot;</value>
                  <value>&quot;CVG&quot;</value>
                  <value>&quot;CWA&quot;</value>
                  <value>&quot;CYS&quot;</value>
                  <value>&quot;DAB&quot;</value>
                  <value>&quot;DAY&quot;</value>
                  <value>&quot;DBQ&quot;</value>
                  <value>&quot;DHN&quot;</value>
                  <value>&quot;DIK&quot;</value>
                  <value>&quot;DLG&quot;</value>
                  <value>&quot;DLH&quot;</value>
                  <value>&quot;DRO&quot;</value>
                  <value>&quot;DRT&quot;</value>
                  <value>&quot;DSM&quot;</value>
                  <value>&quot;DVL&quot;</value>
                  <value>&quot;EAU&quot;</value>
                  <value>&quot;ECP&quot;</value>
                  <value>&quot;EGE&quot;</value>
                  <value>&quot;EKO&quot;</value>
                  <value>&quot;ELM&quot;</value>
                  <value>&quot;ELP&quot;</value>
                  <value>&quot;ERI&quot;</value>
                  <value>&quot;ESC&quot;</value>
                  <value>&quot;EUG&quot;</value>
                  <value>&quot;EVV&quot;</value>
                  <value>&quot;EWN&quot;</value>
                  <value>&quot;EYW&quot;</value>
                  <value>&quot;FAI&quot;</value>
                  <value>&quot;FAR&quot;</value>
                  <value>&quot;FAT&quot;</value>
                  <value>&quot;FAY&quot;</value>
                  <value>&quot;FCA&quot;</value>
                  <value>&quot;FLG&quot;</value>
                  <value>&quot;FLO&quot;</value>
                  <value>&quot;FNL&quot;</value>
                  <value>&quot;FNT&quot;</value>
                  <value>&quot;FOE&quot;</value>
                  <value>&quot;FSD&quot;</value>
                  <value>&quot;FSM&quot;</value>
                  <value>&quot;FWA&quot;</value>
                  <value>&quot;GCC&quot;</value>
                  <value>&quot;GCK&quot;</value>
                  <value>&quot;GEG&quot;</value>
                  <value>&quot;GFK&quot;</value>
                  <value>&quot;GGG&quot;</value>
                  <value>&quot;GJT&quot;</value>
                  <value>&quot;GNV&quot;</value>
                  <value>&quot;GPT&quot;</value>
                  <value>&quot;GRB&quot;</value>
                  <value>&quot;GRI&quot;</value>
                  <value>&quot;GRK&quot;</value>
                  <value>&quot;GRR&quot;</value>
                  <value>&quot;GSO&quot;</value>
                  <value>&quot;GSP&quot;</value>
                  <value>&quot;GST&quot;</value>
                  <value>&quot;GTF&quot;</value>
                  <value>&quot;GTR&quot;</value>
                  <value>&quot;GUC&quot;</value>
                  <value>&quot;GUM&quot;</value>
                  <value>&quot;HDN&quot;</value>
                  <value>&quot;HGR&quot;</value>
                  <value>&quot;HHH&quot;</value>
                  <value>&quot;HIB&quot;</value>
                  <value>&quot;HLN&quot;</value>
                  <value>&quot;HOB&quot;</value>
                  <value>&quot;HPN&quot;</value>
                  <value>&quot;HRL&quot;</value>
                  <value>&quot;HSV&quot;</value>
                  <value>&quot;HTS&quot;</value>
                  <value>&quot;HVN&quot;</value>
                  <value>&quot;HYA&quot;</value>
                  <value>&quot;HYS&quot;</value>
                  <value>&quot;IAG&quot;</value>
                  <value>&quot;ICT&quot;</value>
                  <value>&quot;IDA&quot;</value>
                  <value>&quot;IFP&quot;</value>
                  <value>&quot;ILG&quot;</value>
                  <value>&quot;ILM&quot;</value>
                  <value>&quot;IMT&quot;</value>
                  <value>&quot;INL&quot;</value>
                  <value>&quot;IPL&quot;</value>
                  <value>&quot;ISN&quot;</value>
                  <value>&quot;ISP&quot;</value>
                  <value>&quot;ITH&quot;</value>
                  <value>&quot;ITO&quot;</value>
                  <value>&quot;IYK&quot;</value>
                  <value>&quot;JAC&quot;</value>
                  <value>&quot;JAN&quot;</value>
                  <value>&quot;JAX&quot;</value>
                  <value>&quot;JLN&quot;</value>
                  <value>&quot;JMS&quot;</value>
                  <value>&quot;JNU&quot;</value>
                  <value>&quot;KOA&quot;</value>
                  <value>&quot;KTN&quot;</value>
                  <value>&quot;LAN&quot;</value>
                  <value>&quot;LAR&quot;</value>
                  <value>&quot;LAW&quot;</value>
                  <value>&quot;LBB&quot;</value>
                  <value>&quot;LBE&quot;</value>
                  <value>&quot;LBF&quot;</value>
                  <value>&quot;LBL&quot;</value>
                  <value>&quot;LCH&quot;</value>
                  <value>&quot;LCK&quot;</value>
                  <value>&quot;LEX&quot;</value>
                  <value>&quot;LFT&quot;</value>
                  <value>&quot;LGB&quot;</value>
                  <value>&quot;LIH&quot;</value>
                  <value>&quot;LIT&quot;</value>
                  <value>&quot;LMT&quot;</value>
                  <value>&quot;LNK&quot;</value>
                  <value>&quot;LRD&quot;</value>
                  <value>&quot;LSE&quot;</value>
                  <value>&quot;LWB&quot;</value>
                  <value>&quot;LWS&quot;</value>
                  <value>&quot;LYH&quot;</value>
                  <value>&quot;MAF&quot;</value>
                  <value>&quot;MBS&quot;</value>
                  <value>&quot;MDT&quot;</value>
                  <value>&quot;MEI&quot;</value>
                  <value>&quot;MEM&quot;</value>
                  <value>&quot;MFE&quot;</value>
                  <value>&quot;MFR&quot;</value>
                  <value>&quot;MGM&quot;</value>
                  <value>&quot;MHK&quot;</value>
                  <value>&quot;MHT&quot;</value>
                  <value>&quot;MKG&quot;</value>
                  <value>&quot;MLB&quot;</value>
                  <value>&quot;MLI&quot;</value>
                  <value>&quot;MLU&quot;</value>
                  <value>&quot;MMH&quot;</value>
                  <value>&quot;MOB&quot;</value>
                  <value>&quot;MOD&quot;</value>
                  <value>&quot;MOT&quot;</value>
                  <value>&quot;MQT&quot;</value>
                  <value>&quot;MRY&quot;</value>
                  <value>&quot;MSN&quot;</value>
                  <value>&quot;MSO&quot;</value>
                  <value>&quot;MTJ&quot;</value>
                  <value>&quot;MVY&quot;</value>
                  <value>&quot;MYR&quot;</value>
                  <value>&quot;OAJ&quot;</value>
                  <value>&quot;OGD&quot;</value>
                  <value>&quot;OGG&quot;</value>
                  <value>&quot;OGS&quot;</value>
                  <value>&quot;OKC&quot;</value>
                  <value>&quot;OMA&quot;</value>
                  <value>&quot;OME&quot;</value>
                  <value>&quot;ONT&quot;</value>
                  <value>&quot;ORF&quot;</value>
                  <value>&quot;ORH&quot;</value>
                  <value>&quot;OTH&quot;</value>
                  <value>&quot;OTZ&quot;</value>
                  <value>&quot;OWB&quot;</value>
                  <value>&quot;PAH&quot;</value>
                  <value>&quot;PBG&quot;</value>
                  <value>&quot;PBI&quot;</value>
                  <value>&quot;PGD&quot;</value>
                  <value>&quot;PGV&quot;</value>
                  <value>&quot;PHF&quot;</value>
                  <value>&quot;PIA&quot;</value>
                  <value>&quot;PIB&quot;</value>
                  <value>&quot;PIE&quot;</value>
                  <value>&quot;PIH&quot;</value>
                  <value>&quot;PLN&quot;</value>
                  <value>&quot;PNS&quot;</value>
                  <value>&quot;PPG&quot;</value>
                  <value>&quot;PSC&quot;</value>
                  <value>&quot;PSE&quot;</value>
                  <value>&quot;PSG&quot;</value>
                  <value>&quot;PSM&quot;</value>
                  <value>&quot;PSP&quot;</value>
                  <value>&quot;PUB&quot;</value>
                  <value>&quot;PVD&quot;</value>
                  <value>&quot;PVU&quot;</value>
                  <value>&quot;PWM&quot;</value>
                  <value>&quot;RAP&quot;</value>
                  <value>&quot;RDD&quot;</value>
                  <value>&quot;RDM&quot;</value>
                  <value>&quot;RFD&quot;</value>
                  <value>&quot;RHI&quot;</value>
                  <value>&quot;RIC&quot;</value>
                  <value>&quot;RKS&quot;</value>
                  <value>&quot;RNO&quot;</value>
                  <value>&quot;ROA&quot;</value>
                  <value>&quot;ROC&quot;</value>
                  <value>&quot;ROW&quot;</value>
                  <value>&quot;RST&quot;</value>
                  <value>&quot;RSW&quot;</value>
                  <value>&quot;SAF&quot;</value>
                  <value>&quot;SAV&quot;</value>
                  <value>&quot;SBA&quot;</value>
                  <value>&quot;SBN&quot;</value>
                  <value>&quot;SBP&quot;</value>
                  <value>&quot;SCC&quot;</value>
                  <value>&quot;SCE&quot;</value>
                  <value>&quot;SCK&quot;</value>
                  <value>&quot;SDF&quot;</value>
                  <value>&quot;SFB&quot;</value>
                  <value>&quot;SGF&quot;</value>
                  <value>&quot;SGU&quot;</value>
                  <value>&quot;SHD&quot;</value>
                  <value>&quot;SHV&quot;</value>
                  <value>&quot;SIT&quot;</value>
                  <value>&quot;SJT&quot;</value>
                  <value>&quot;SJU&quot;</value>
                  <value>&quot;SLN&quot;</value>
                  <value>&quot;SMX&quot;</value>
                  <value>&quot;SPI&quot;</value>
                  <value>&quot;SPN&quot;</value>
                  <value>&quot;SPS&quot;</value>
                  <value>&quot;SRQ&quot;</value>
                  <value>&quot;STC&quot;</value>
                  <value>&quot;STS&quot;</value>
                  <value>&quot;STT&quot;</value>
                  <value>&quot;STX&quot;</value>
                  <value>&quot;SUN&quot;</value>
                  <value>&quot;SUX&quot;</value>
                  <value>&quot;SWF&quot;</value>
                  <value>&quot;SWO&quot;</value>
                  <value>&quot;SYR&quot;</value>
                  <value>&quot;TLH&quot;</value>
                  <value>&quot;TOL&quot;</value>
                  <value>&quot;TRI&quot;</value>
                  <value>&quot;TTN&quot;</value>
                  <value>&quot;TUL&quot;</value>
                  <value>&quot;TUS&quot;</value>
                  <value>&quot;TVC&quot;</value>
                  <value>&quot;TWF&quot;</value>
                  <value>&quot;TXK&quot;</value>
                  <value>&quot;TYR&quot;</value>
                  <value>&quot;TYS&quot;</value>
                  <value>&quot;UIN&quot;</value>
                  <value>&quot;USA&quot;</value>
                  <value>&quot;UST&quot;</value>
                  <value>&quot;VEL&quot;</value>
                  <value>&quot;VLD&quot;</value>
                  <value>&quot;VPS&quot;</value>
                  <value>&quot;WRG&quot;</value>
                  <value>&quot;WYS&quot;</value>
                  <value>&quot;XNA&quot;</value>
                  <value>&quot;YAK&quot;</value>
                  <value>&quot;YNG&quot;</value>
                  <value>&quot;YUM&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Total Flights' datatype='real' name='[Calculation_1397523314949632005]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [arr_flights] + [arr_diverted]' />
            </column>
            <column caption='Avg Delay Percentage' datatype='real' name='[Calculation_1397523314950144006]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([arr_del15])/SUM([Calculation_1397523314949632005])' />
            </column>
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Arr Del15' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Arr Diverted' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
            <column caption='Arr Flights' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1397523314950144006]' derivation='User' name='[usr:Calculation_1397523314950144006:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' filter-group='15'>
            <groupfilter function='level-members' level='[yr:Calculation_1397523314924310531:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum: carrier_delay:qk]' field-type='quantitative' max='425146518.01430571' min='-9071405.0785413738' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314950144006:qk]' field-type='quantitative' max='0.32158743446471005' min='-0.35158976071214654' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314950144006:qk]</rows>
        <cols>[federated.12m2fuv0p58mks1a5j6v21idq34y].[sum: carrier_delay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Small/Big'>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Airport Size' datatype='string' name='[Airport (group)]' role='dimension' semantic-role='[Airport].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[airport]' default='&quot;Big Airports&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Small Airports&quot;'>
                  <value>&quot;ABE&quot;</value>
                  <value>&quot;ABI&quot;</value>
                  <value>&quot;ABQ&quot;</value>
                  <value>&quot;ABR&quot;</value>
                  <value>&quot;ABY&quot;</value>
                  <value>&quot;ACK&quot;</value>
                  <value>&quot;ACT&quot;</value>
                  <value>&quot;ACV&quot;</value>
                  <value>&quot;ACY&quot;</value>
                  <value>&quot;ADK&quot;</value>
                  <value>&quot;ADQ&quot;</value>
                  <value>&quot;AEX&quot;</value>
                  <value>&quot;AGS&quot;</value>
                  <value>&quot;AKN&quot;</value>
                  <value>&quot;ALB&quot;</value>
                  <value>&quot;ALO&quot;</value>
                  <value>&quot;AMA&quot;</value>
                  <value>&quot;ANC&quot;</value>
                  <value>&quot;APN&quot;</value>
                  <value>&quot;ART&quot;</value>
                  <value>&quot;ASE&quot;</value>
                  <value>&quot;ATW&quot;</value>
                  <value>&quot;AVL&quot;</value>
                  <value>&quot;AVP&quot;</value>
                  <value>&quot;AZA&quot;</value>
                  <value>&quot;AZO&quot;</value>
                  <value>&quot;BDL&quot;</value>
                  <value>&quot;BET&quot;</value>
                  <value>&quot;BFF&quot;</value>
                  <value>&quot;BFL&quot;</value>
                  <value>&quot;BGM&quot;</value>
                  <value>&quot;BGR&quot;</value>
                  <value>&quot;BHM&quot;</value>
                  <value>&quot;BIL&quot;</value>
                  <value>&quot;BIS&quot;</value>
                  <value>&quot;BJI&quot;</value>
                  <value>&quot;BKG&quot;</value>
                  <value>&quot;BLI&quot;</value>
                  <value>&quot;BLV&quot;</value>
                  <value>&quot;BMI&quot;</value>
                  <value>&quot;BOI&quot;</value>
                  <value>&quot;BPT&quot;</value>
                  <value>&quot;BQK&quot;</value>
                  <value>&quot;BQN&quot;</value>
                  <value>&quot;BRD&quot;</value>
                  <value>&quot;BRO&quot;</value>
                  <value>&quot;BRW&quot;</value>
                  <value>&quot;BTM&quot;</value>
                  <value>&quot;BTR&quot;</value>
                  <value>&quot;BTV&quot;</value>
                  <value>&quot;BUF&quot;</value>
                  <value>&quot;BUR&quot;</value>
                  <value>&quot;BZN&quot;</value>
                  <value>&quot;CAE&quot;</value>
                  <value>&quot;CAK&quot;</value>
                  <value>&quot;CDC&quot;</value>
                  <value>&quot;CDV&quot;</value>
                  <value>&quot;CEC&quot;</value>
                  <value>&quot;CGI&quot;</value>
                  <value>&quot;CHA&quot;</value>
                  <value>&quot;CHO&quot;</value>
                  <value>&quot;CHS&quot;</value>
                  <value>&quot;CIC&quot;</value>
                  <value>&quot;CID&quot;</value>
                  <value>&quot;CIU&quot;</value>
                  <value>&quot;CKB&quot;</value>
                  <value>&quot;CLD&quot;</value>
                  <value>&quot;CLL&quot;</value>
                  <value>&quot;CMH&quot;</value>
                  <value>&quot;CMI&quot;</value>
                  <value>&quot;CMX&quot;</value>
                  <value>&quot;CNY&quot;</value>
                  <value>&quot;COD&quot;</value>
                  <value>&quot;COS&quot;</value>
                  <value>&quot;COU&quot;</value>
                  <value>&quot;CPR&quot;</value>
                  <value>&quot;CRP&quot;</value>
                  <value>&quot;CRW&quot;</value>
                  <value>&quot;CSG&quot;</value>
                  <value>&quot;CVG&quot;</value>
                  <value>&quot;CWA&quot;</value>
                  <value>&quot;CYS&quot;</value>
                  <value>&quot;DAB&quot;</value>
                  <value>&quot;DAY&quot;</value>
                  <value>&quot;DBQ&quot;</value>
                  <value>&quot;DHN&quot;</value>
                  <value>&quot;DIK&quot;</value>
                  <value>&quot;DLG&quot;</value>
                  <value>&quot;DLH&quot;</value>
                  <value>&quot;DRO&quot;</value>
                  <value>&quot;DRT&quot;</value>
                  <value>&quot;DSM&quot;</value>
                  <value>&quot;DVL&quot;</value>
                  <value>&quot;EAU&quot;</value>
                  <value>&quot;ECP&quot;</value>
                  <value>&quot;EGE&quot;</value>
                  <value>&quot;EKO&quot;</value>
                  <value>&quot;ELM&quot;</value>
                  <value>&quot;ELP&quot;</value>
                  <value>&quot;ERI&quot;</value>
                  <value>&quot;ESC&quot;</value>
                  <value>&quot;EUG&quot;</value>
                  <value>&quot;EVV&quot;</value>
                  <value>&quot;EWN&quot;</value>
                  <value>&quot;EYW&quot;</value>
                  <value>&quot;FAI&quot;</value>
                  <value>&quot;FAR&quot;</value>
                  <value>&quot;FAT&quot;</value>
                  <value>&quot;FAY&quot;</value>
                  <value>&quot;FCA&quot;</value>
                  <value>&quot;FLG&quot;</value>
                  <value>&quot;FLO&quot;</value>
                  <value>&quot;FNL&quot;</value>
                  <value>&quot;FNT&quot;</value>
                  <value>&quot;FOE&quot;</value>
                  <value>&quot;FSD&quot;</value>
                  <value>&quot;FSM&quot;</value>
                  <value>&quot;FWA&quot;</value>
                  <value>&quot;GCC&quot;</value>
                  <value>&quot;GCK&quot;</value>
                  <value>&quot;GEG&quot;</value>
                  <value>&quot;GFK&quot;</value>
                  <value>&quot;GGG&quot;</value>
                  <value>&quot;GJT&quot;</value>
                  <value>&quot;GNV&quot;</value>
                  <value>&quot;GPT&quot;</value>
                  <value>&quot;GRB&quot;</value>
                  <value>&quot;GRI&quot;</value>
                  <value>&quot;GRK&quot;</value>
                  <value>&quot;GRR&quot;</value>
                  <value>&quot;GSO&quot;</value>
                  <value>&quot;GSP&quot;</value>
                  <value>&quot;GST&quot;</value>
                  <value>&quot;GTF&quot;</value>
                  <value>&quot;GTR&quot;</value>
                  <value>&quot;GUC&quot;</value>
                  <value>&quot;GUM&quot;</value>
                  <value>&quot;HDN&quot;</value>
                  <value>&quot;HGR&quot;</value>
                  <value>&quot;HHH&quot;</value>
                  <value>&quot;HIB&quot;</value>
                  <value>&quot;HLN&quot;</value>
                  <value>&quot;HOB&quot;</value>
                  <value>&quot;HPN&quot;</value>
                  <value>&quot;HRL&quot;</value>
                  <value>&quot;HSV&quot;</value>
                  <value>&quot;HTS&quot;</value>
                  <value>&quot;HVN&quot;</value>
                  <value>&quot;HYA&quot;</value>
                  <value>&quot;HYS&quot;</value>
                  <value>&quot;IAG&quot;</value>
                  <value>&quot;ICT&quot;</value>
                  <value>&quot;IDA&quot;</value>
                  <value>&quot;IFP&quot;</value>
                  <value>&quot;ILG&quot;</value>
                  <value>&quot;ILM&quot;</value>
                  <value>&quot;IMT&quot;</value>
                  <value>&quot;INL&quot;</value>
                  <value>&quot;IPL&quot;</value>
                  <value>&quot;ISN&quot;</value>
                  <value>&quot;ISP&quot;</value>
                  <value>&quot;ITH&quot;</value>
                  <value>&quot;ITO&quot;</value>
                  <value>&quot;IYK&quot;</value>
                  <value>&quot;JAC&quot;</value>
                  <value>&quot;JAN&quot;</value>
                  <value>&quot;JAX&quot;</value>
                  <value>&quot;JLN&quot;</value>
                  <value>&quot;JMS&quot;</value>
                  <value>&quot;JNU&quot;</value>
                  <value>&quot;KOA&quot;</value>
                  <value>&quot;KTN&quot;</value>
                  <value>&quot;LAN&quot;</value>
                  <value>&quot;LAR&quot;</value>
                  <value>&quot;LAW&quot;</value>
                  <value>&quot;LBB&quot;</value>
                  <value>&quot;LBE&quot;</value>
                  <value>&quot;LBF&quot;</value>
                  <value>&quot;LBL&quot;</value>
                  <value>&quot;LCH&quot;</value>
                  <value>&quot;LCK&quot;</value>
                  <value>&quot;LEX&quot;</value>
                  <value>&quot;LFT&quot;</value>
                  <value>&quot;LGB&quot;</value>
                  <value>&quot;LIH&quot;</value>
                  <value>&quot;LIT&quot;</value>
                  <value>&quot;LMT&quot;</value>
                  <value>&quot;LNK&quot;</value>
                  <value>&quot;LRD&quot;</value>
                  <value>&quot;LSE&quot;</value>
                  <value>&quot;LWB&quot;</value>
                  <value>&quot;LWS&quot;</value>
                  <value>&quot;LYH&quot;</value>
                  <value>&quot;MAF&quot;</value>
                  <value>&quot;MBS&quot;</value>
                  <value>&quot;MDT&quot;</value>
                  <value>&quot;MEI&quot;</value>
                  <value>&quot;MEM&quot;</value>
                  <value>&quot;MFE&quot;</value>
                  <value>&quot;MFR&quot;</value>
                  <value>&quot;MGM&quot;</value>
                  <value>&quot;MHK&quot;</value>
                  <value>&quot;MHT&quot;</value>
                  <value>&quot;MKG&quot;</value>
                  <value>&quot;MLB&quot;</value>
                  <value>&quot;MLI&quot;</value>
                  <value>&quot;MLU&quot;</value>
                  <value>&quot;MMH&quot;</value>
                  <value>&quot;MOB&quot;</value>
                  <value>&quot;MOD&quot;</value>
                  <value>&quot;MOT&quot;</value>
                  <value>&quot;MQT&quot;</value>
                  <value>&quot;MRY&quot;</value>
                  <value>&quot;MSN&quot;</value>
                  <value>&quot;MSO&quot;</value>
                  <value>&quot;MTJ&quot;</value>
                  <value>&quot;MVY&quot;</value>
                  <value>&quot;MYR&quot;</value>
                  <value>&quot;OAJ&quot;</value>
                  <value>&quot;OGD&quot;</value>
                  <value>&quot;OGG&quot;</value>
                  <value>&quot;OGS&quot;</value>
                  <value>&quot;OKC&quot;</value>
                  <value>&quot;OMA&quot;</value>
                  <value>&quot;OME&quot;</value>
                  <value>&quot;ONT&quot;</value>
                  <value>&quot;ORF&quot;</value>
                  <value>&quot;ORH&quot;</value>
                  <value>&quot;OTH&quot;</value>
                  <value>&quot;OTZ&quot;</value>
                  <value>&quot;OWB&quot;</value>
                  <value>&quot;PAH&quot;</value>
                  <value>&quot;PBG&quot;</value>
                  <value>&quot;PBI&quot;</value>
                  <value>&quot;PGD&quot;</value>
                  <value>&quot;PGV&quot;</value>
                  <value>&quot;PHF&quot;</value>
                  <value>&quot;PIA&quot;</value>
                  <value>&quot;PIB&quot;</value>
                  <value>&quot;PIE&quot;</value>
                  <value>&quot;PIH&quot;</value>
                  <value>&quot;PLN&quot;</value>
                  <value>&quot;PNS&quot;</value>
                  <value>&quot;PPG&quot;</value>
                  <value>&quot;PSC&quot;</value>
                  <value>&quot;PSE&quot;</value>
                  <value>&quot;PSG&quot;</value>
                  <value>&quot;PSM&quot;</value>
                  <value>&quot;PSP&quot;</value>
                  <value>&quot;PUB&quot;</value>
                  <value>&quot;PVD&quot;</value>
                  <value>&quot;PVU&quot;</value>
                  <value>&quot;PWM&quot;</value>
                  <value>&quot;RAP&quot;</value>
                  <value>&quot;RDD&quot;</value>
                  <value>&quot;RDM&quot;</value>
                  <value>&quot;RFD&quot;</value>
                  <value>&quot;RHI&quot;</value>
                  <value>&quot;RIC&quot;</value>
                  <value>&quot;RKS&quot;</value>
                  <value>&quot;RNO&quot;</value>
                  <value>&quot;ROA&quot;</value>
                  <value>&quot;ROC&quot;</value>
                  <value>&quot;ROW&quot;</value>
                  <value>&quot;RST&quot;</value>
                  <value>&quot;RSW&quot;</value>
                  <value>&quot;SAF&quot;</value>
                  <value>&quot;SAV&quot;</value>
                  <value>&quot;SBA&quot;</value>
                  <value>&quot;SBN&quot;</value>
                  <value>&quot;SBP&quot;</value>
                  <value>&quot;SCC&quot;</value>
                  <value>&quot;SCE&quot;</value>
                  <value>&quot;SCK&quot;</value>
                  <value>&quot;SDF&quot;</value>
                  <value>&quot;SFB&quot;</value>
                  <value>&quot;SGF&quot;</value>
                  <value>&quot;SGU&quot;</value>
                  <value>&quot;SHD&quot;</value>
                  <value>&quot;SHV&quot;</value>
                  <value>&quot;SIT&quot;</value>
                  <value>&quot;SJT&quot;</value>
                  <value>&quot;SJU&quot;</value>
                  <value>&quot;SLN&quot;</value>
                  <value>&quot;SMX&quot;</value>
                  <value>&quot;SPI&quot;</value>
                  <value>&quot;SPN&quot;</value>
                  <value>&quot;SPS&quot;</value>
                  <value>&quot;SRQ&quot;</value>
                  <value>&quot;STC&quot;</value>
                  <value>&quot;STS&quot;</value>
                  <value>&quot;STT&quot;</value>
                  <value>&quot;STX&quot;</value>
                  <value>&quot;SUN&quot;</value>
                  <value>&quot;SUX&quot;</value>
                  <value>&quot;SWF&quot;</value>
                  <value>&quot;SWO&quot;</value>
                  <value>&quot;SYR&quot;</value>
                  <value>&quot;TLH&quot;</value>
                  <value>&quot;TOL&quot;</value>
                  <value>&quot;TRI&quot;</value>
                  <value>&quot;TTN&quot;</value>
                  <value>&quot;TUL&quot;</value>
                  <value>&quot;TUS&quot;</value>
                  <value>&quot;TVC&quot;</value>
                  <value>&quot;TWF&quot;</value>
                  <value>&quot;TXK&quot;</value>
                  <value>&quot;TYR&quot;</value>
                  <value>&quot;TYS&quot;</value>
                  <value>&quot;UIN&quot;</value>
                  <value>&quot;USA&quot;</value>
                  <value>&quot;UST&quot;</value>
                  <value>&quot;VEL&quot;</value>
                  <value>&quot;VLD&quot;</value>
                  <value>&quot;VPS&quot;</value>
                  <value>&quot;WRG&quot;</value>
                  <value>&quot;WYS&quot;</value>
                  <value>&quot;XNA&quot;</value>
                  <value>&quot;YAK&quot;</value>
                  <value>&quot;YNG&quot;</value>
                  <value>&quot;YUM&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Month-Trunc' name='[tmn:Calculation_1397523314924310531:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Action (Carrier Name)]'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' filter-group='15'>
            <groupfilter function='level-members' level='[yr:Calculation_1397523314924310531:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[tmn:Calculation_1397523314924310531:qk]' field-type='quantitative' max='#2019-02-06 21:33:32.432#' min='#2011-12-11 08:44:35.132#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values]' field-type='quantitative' max='38172.560437104003' min='-1534.7925093430686' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)] * [federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values])</rows>
        <cols>[federated.12m2fuv0p58mks1a5j6v21idq34y].[tmn:Calculation_1397523314924310531:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 delayed carriers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top delayed carriers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='All Delays (AVG)' datatype='real' name='[Calculation_1397523314907598848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1397523314907598848]' derivation='User' name='[usr:Calculation_1397523314907598848:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1644' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' />
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' />
              <text column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[io:Set 1:nk]' />
              <text column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top 10 in/Out'>
      <table>
        <view>
          <datasources>
            <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
          </datasources>
          <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
            <column caption='Arr Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Month' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='All Delays (AVG)' datatype='real' name='[Calculation_1397523314907598848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1397523314924310531]' derivation='Month-Trunc' name='[tmn:Calculation_1397523314924310531:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg: carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12m2fuv0p58mks1a5j6v21idq34y].[avg:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Action (Carrier Name)]'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</column>
            <column>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[tmn:Calculation_1397523314924310531:qk]' field-type='quantitative' max='#2019-02-06 21:33:32.432#' min='#2011-12-11 08:44:35.132#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values]' field-type='quantitative' max='38172.560437104003' min='-1534.7925093430686' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12m2fuv0p58mks1a5j6v21idq34y].[io:Set 1:nk] * [federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values])</rows>
        <cols>[federated.12m2fuv0p58mks1a5j6v21idq34y].[tmn:Calculation_1397523314924310531:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
      </datasources>
      <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
        <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[airport_name]' derivation='None' name='[none:airport_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='5' param='horz' type='layout-flow' w='99058' x='471' y='889'>
            <zone h='98222' id='3' type='layout-basic' w='89646' x='471' y='889'>
              <zone h='49111' id='1' name='Delay by Carrier Name' w='89646' x='471' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='8' name='Delays, Cancellations and Divertions' w='44823' x='471' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='10' name='Delay by Month' w='44823' x='45294' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98222' id='4' is-fixed='true' param='vert' type='layout-flow' w='9412' x='90117' y='889'>
              <zone h='18445' id='7' name='Delay by Carrier Name' pane-specification-id='6' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' type='color' w='9412' x='90117' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5556' id='6' mode='dropdown' name='Delay by Carrier Name' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' type='filter' w='9529' x='63647' y='3333' />
        <zone h='5778' id='9' mode='checkdropdown' name='Delays, Cancellations and Divertions' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]' type='filter' w='9882' x='73824' y='3222' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
      </datasources>
      <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
        <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
        </column>
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='5' param='horz' type='layout-flow' w='99058' x='471' y='889'>
            <zone h='98222' id='3' type='layout-basic' w='99058' x='471' y='889'>
              <zone h='49111' id='1' name='Map Airports' w='99058' x='471' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='10' name='Airport Names' show-title='false' w='99058' x='471' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8444' id='9' name='Map Airports' pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' type='color' w='8235' x='6882' y='14222' />
        <zone h='5778' id='6' mode='dropdown' name='Map Airports' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' type='filter' w='9882' x='78882' y='7333' />
        <zone h='5778' id='7' mode='checkdropdown' name='Map Airports' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' type='filter' w='9882' x='79000' y='13444' />
        <zone h='17556' id='8' name='Map Airports' pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' type='size' w='8235' x='79176' y='20111' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
      </datasources>
      <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
        <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
        </column>
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='5' param='horz' type='layout-flow' w='99058' x='471' y='889'>
            <zone h='98222' id='3' type='layout-basic' w='85999' x='471' y='889'>
              <zone h='49111' id='1' name='Top 10 delayed carriers' w='85999' x='471' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='9' name='Top 10 in/Out' show-title='false' w='85999' x='471' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='222' h='98222' id='4' is-fixed='true' param='vert' type='layout-flow' w='13059' x='86470' y='889'>
              <zone h='7222' id='8' name='Top 10 delayed carriers' pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' type='color' w='13059' x='86470' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16222' id='10' name='Top 10 in/Out' pane-specification-id='3' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' type='color' w='13059' x='86470' y='8111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5778' id='6' mode='dropdown' name='Top 10 delayed carriers' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' type='filter' w='9882' x='62941' y='48222' />
        <zone h='4889' id='7' mode='checkdropdown' name='Top 10 delayed carriers' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' type='filter' w='9412' x='72941' y='48111' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='877050760_72018_182_airline_delay_causes' name='federated.12m2fuv0p58mks1a5j6v21idq34y' />
      </datasources>
      <datasource-dependencies datasource='federated.12m2fuv0p58mks1a5j6v21idq34y'>
        <column caption='Date' datatype='date' name='[Calculation_1397523314924310531]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MM|dd|yyyy&quot;,STR([ month])+&quot;|&quot;+STR(&quot;01|&quot;)+STR([year]) ))' />
        </column>
        <column-instance column='[Calculation_1397523314924310531]' derivation='Year' name='[yr:Calculation_1397523314924310531:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='49111' id='5' param='horz' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='49111' id='3' type='layout-basic' w='89000' x='500' y='889'>
              <zone h='49111' id='1' name='Airport Size' w='44496' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='7' name='Percentage' w='44504' x='44996' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49111' id='4' is-fixed='true' param='vert' type='layout-flow' w='10000' x='89500' y='889'>
              <zone h='7333' id='6' name='Airport Size' pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]' type='color' w='10000' x='89500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5778' id='9' mode='dropdown' name='Small/Big' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' type='filter' w='10000' x='89500' y='8222'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49111' id='8' name='Small/Big' w='89000' x='500' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49111' id='10' name='Small/Big' pane-specification-id='3' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' type='color' w='10000' x='89500' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Flight Delays: Data Visualization</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='462' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1716' minheight='964' minwidth='1716' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='99068' x='466' y='830'>
            <zone h='3423' id='3' type='title' w='99068' x='466' y='830' />
            <zone fixed-size='165' h='17116' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99068' x='466' y='4253' />
            <zone h='77801' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99068' x='466' y='21369'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption=' Most of the flight delays are due to arrival delay followed by Late aircraft delay and NAS delay, while weather and security contributes the least to flight delays. Flight delays are at a peak during June and July, and they tend to go down in November and increase again during December.' captured-sheet='Dashboard 1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Delay by Carrier Name'>
                        <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]'>
                          <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;United Air Lines Inc.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          <target field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' />
                        </filter>
                      </worksheet>
                      <worksheet name='Delay by Month'>
                        <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]'>
                          <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;United Air Lines Inc.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          <target field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' />
                        </filter>
                      </worksheet>
                      <worksheet name='Delays, Cancellations and Divertions'>
                        <filter class='categorical' column='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]'>
                          <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;United Air Lines Inc.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          <target field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The Geolocation plot shows the average delay based on different carriers. For each carrier we can see which airport had caused the most number of delays. For example, with United Air Lines select as the carrier, we can see that most number of delays were caused in the Chicago O&apos;Hare International Airport. When filtering the last two years, we can see that Newark Liberty International has the most delays.' captured-sheet='Dashboard 2' id='2'>
                    <capturedDeltas>
                      <worksheet name='Map Airports'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Latitude (generated)]' field-type='quantitative' max='5946421.7694203174' min='3240952.5255659795' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Longitude (generated)]' field-type='quantitative' max='-4532721.4521543626' min='-16128990.31215856' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='When Plotting the Top 10 delayed carriers and the rest of the carriers side by side, we can notice that the average NAS delays is higher than the carrier delays for the Top 10 carriers, while for the rest (out of top 10) the average carrier delays is higher than NAS delays.' captured-sheet='Dashboard 3' id='3'>
                    <capturedDeltas>
                      <worksheet name='Top 10 in/Out'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Multiple Values]' field-type='quantitative' max='36689.441729928403' min='-3169.1017867089327' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.12m2fuv0p58mks1a5j6v21idq34y].[tmn:Calculation_1397523314924310531:qk]' field-type='quantitative' max='#2019-02-08 02:57:36.330#' min='#2011-12-11 19:16:56.702#' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The airport have been grouped into Small Airports and Big Airport (based on the total number of flights). We can observe that small airports have a slightly bigger range of percentage of delay. In contrast to the Top 10 delayed carriers, the the average carrier delays is higher than NAS delays for small airports and big airports as well.' captured-sheet='Dashboard 4' id='4'>
                    <currentDeltas>
                      <worksheet name='Percentage'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314950144006:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Delay by Carrier Name'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]' type='filter' />
            <card pane-specification-id='6' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:year:qk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delays, Cancellations and Divertions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none: month:qk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Map Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:year:qk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Airport Names'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 delayed carriers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[usr:Calculation_1397523314907598848:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[io:Set 1:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport_name:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:carrier_name:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 in/Out'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Set 1]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[io:Set 1:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none: month:qk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Airport Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none:airport:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Small/Big'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Set 1]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[io:Set 1:nk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[none: month:qk]</field>
            <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[yr:Calculation_1397523314924310531:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Delay by Carrier Name'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delay by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delays, Cancellations and Divertions'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Airport Names' />
        <viewpoint name='Map Airports'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Top 10 delayed carriers' />
        <viewpoint name='Top 10 in/Out'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Airport Size'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[Airport (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Small/Big'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12m2fuv0p58mks1a5j6v21idq34y].[:Measure Names]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='3' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airport Names' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V5MdSZbn9/PQ8up7UyKBhCx0dU1Vi5me7uEKzprRuGZ851fgGz8Hn/kV
      +EDyhTSjDbnGnTXuzM60mOnu6VIoCSATqfPqe0NLPtwEkAkkUBoJEb+HqhAekX4DccL9uPv5
      H1GWZUlFxRuKdNEVqKi4SCoDqHijUU7v/M//+9/x8f2Di6rLhfH2O5s8uOhKfAccTaXXsBgE
      0UVX5bnc7tYZRxdfx1XXxk8T4AkD+Pj+Af/4/r0LqdRFUtYdPhEXXYtvT9PUuJzW2J0HF12V
      52KoEof+xdcxL0omycIQqy5QxRuNct7Bd29dJgsjnJrOJ1sDdFFgmDpxLgh9j1q9xmQyp1U3
      2TmeAYLrGz2KJOJgHBDGGb967xoHw4gVJ+GTg4AiSnBsDUnTOOpPWe3WORr7NCyFw3nKv31n
      gzAImEWQJCGmoXM0jYgCH03XKUtBEofUWw284Ry3ptNqNdnaPcK1VAbzBFdXMA2VSZCiy7C5
      1mH/aMwsylDJkXWTOAyo12wUXWe4d8g0e/y7e60atyydremcAsE4zqipEuMoBQRtW2foR5iq
      zCRKudZpYkk5sqJjK/Dh4YhZJvivr3QYzgP2wxQ/TmmbGqMgIivB1jWSNMVUZQZB8v3+a5Y5
      h7//DebSKmmc0rlxizLqs/en+7iXVlE0nWR8hLV6hSwMMWo2WRSRpQXJ+BB7bRNZVSmznCxJ
      II+QjBqaZTK5+xGlbKMZGmarBYpO/4+/xly+ROz5dG7d5vB3/wlj+RqaZZL5Y7TWGkUcYHWX
      EOJxE+vt7WCsrRMc7GE0OwTjMbV2jclgRpFE6KaO2eowPzzGrFtkhUwZexitZVRVZvt3f4fZ
      WicXBY6lIewWds1FfMNWPI+n5xuAKDI+3xvzE6fHjc01OkbOF1tHXLt6mY6lsDWc8LPry+wN
      fLLQ52BeIEsCIQmSLAchCD2f3VFM17R47x0XuZ/yp4MJv3pnE+Wmz+Eo4vpyg3laEDwY0D/q
      ozsOn24f8e9+cQODgla7hatmDAYhK+td9nf3OAgKNtfbqKpEUhRcu7rO1abK3ihkFqbYiqDX
      1dhsG9w78mg3XS5pKoiSPIdCanBltUMwm/HrvcMnXqCSO0dTfnp1GVsUHE99/LykYds4lsYV
      U6PvB3x4OAbAkODTwZy3ujIHCYiyBCS2R1Pqtsu/7rV4MI8o4phVVydKSy53GuxPQ8p0/v0b
      ABLO6irRPEAyzJNjBSAID7aJohx3qUew9wXToxnOUgvDsZn35xh1g/n2HSSrQzwcYHaWyKMA
      hEfrxjXKsgQhUxYFQlZBCJzVNSIvQFKVk8dXUsyOOb4/xl7ZQJ4e0P/yHit/+e8wLO3xYy4K
      KFL6X3wEWpM8y3CXf0Uy+gTFaXD/d7/BWVrDkDU8X2K2P8FxBHXJptFt4K5eov/pFyy/fYvh
      0OdSb+3bPS3FOt8AtvpzNpccPrl/hKTq3Ctz1jouu0dDttKMv/7FW/yX336MaRs49SZiPmD/
      eMLmepfVOGNn6HHspSxZBXe2jzBHOllY0Gua3H1wSJBl/PufbfJ//N0dmrbKdObRbiwzOBxS
      lBm/ff8usizRbtVJwoDRNGTfjykjn2GQMRWQA6ZloTKFyOLLvTF5CVBSq7nMRiNioZL4PqVq
      YJAy9BIkRSZOEgajOX5+9nfPg4SbLZO/v7vPzY7L7nhOWoCqqdwfTIh7dfYnHpGk0jPg3sTn
      WtNm34tpqJALCYoMy3C53x8yjxNmYYQXpyAEliKYZiVxkjANw2/1j/ZVFFmGvbJBMh2SBD6q
      Xmf5pz9FFAGT3UPspkNRtqnJY5zVNSQyslxBJkZZvUkyOqB2+RpG3WXv7/8GY+k64czHWbuG
      alpM79/BHyqY7WWKNMXqrZFMBwD03vsrZE2GL+/iLC+RJhn19cuo2tnXTHUMju9uU1+7gl5r
      4U+mSAhqy5fQGh2KOEI1NL747Qfc+re/wHKWKOMJZTAmTms47SXUd02sThehjsnjCMlyvsXT
      KhGnJ8L+h//pf30jneBf/es/e/Wd4O7L7wT/8lLnpXCCbzRrj5zgc1uANxXNtOkREgmVumlw
      PPcxFJlxnGIrMpoiMU9yTEmwVLMZBxGzJEOXIENClAW6qiBJClkSMIqLF/sDypLRZx+gOC2E
      LFANE8XQyTOQFShQkCSQZJlkNkaUGXGuYRgSkuFQpAlSnpEKIM3J/Clas0eZxqiOS5FEZHGC
      ZtskYUwy6aM7deRajTxKUZSSvJApEx+ZiFhZwampT1Vz+uWHpO4qg0/+xLW/+Atif85wZ5/O
      1etQCnRLJUtLhChJAh+z3iCaezjt9vf6uPLYqwzgNEJIbDZq+EJGLUDvNLndNNgfh4zyHEeV
      UTNYbxpszSKEMNlsSJRCkBWQlnCp5RJ6Ph8c/TBdnOeTI+k17E6byWf/xNGRh7u8RjCc4C41
      UUyXaNzH6LTx7n2GbDQwLl9j/9e/wVzeQO+s4LgW8eSQNCgowwSkjOMPv8BeXcHt1gimMWQF
      470d2pfXEXFGNBlQRimaoVBKCuHuXRTTwLq5fG4tJb1GdHwX2Wow2LqHYak0Nt8mGW9x7+O7
      rFxZQ8gaVrPGzh9+g1LfxKob37sBQNUCnCFNQj4bg5cLTEXBUAR3i4zt8ZyoBAE0dZ1pGjHJ
      QCoyBoFEQxUc+AlCkkiLnJkfMk9f8NcfQCjotkIwneNu/hkY+xj1Bnqjg91pIZFhNJuUQoFL
      OUazQ+SHNG/dRnG7GI0mosiwlDVEV6UIPdI0o7m5ibmyhm5qaE3IZlMk08KuG2SpTN1WCMY+
      TrcDlEiA7joopnxuNY1WG2GaNFWdMpqRCYPo+B5Gvc7Krdu0V5cAgWaodK7/CLOxguEY3/vj
      kjS7MoDTFFnG8cmwaJCkAOzNzvZZgyRj74nr+qe2P4niH66CXwOzd+nRdrvWeuq8bJ2Uq9cA
      MJ4qIqNp+kkhEx1gaeXRWUkF1TAxe2ev0mudR9uNq7eeW0fVdlDtE6e1Xl/8v9dd7D7RaCzf
      +vFz7/VdEEJUE2EVL55kPiQ9+dAkgf/8soFP7HvnnvOGffL827e0ZZFXLUDFiycLPSZ7Q2Jv
      ShFNMdwa+1/ssnr7KqKUiOYBhisY9iO0MqS2cQ0p9UlyDeIJqttk7/e/pvlnv2Kj1oLze1pf
      SR5PKgOoePHIuoXZsKl3WkTeiDwtWPnRbdxuF0WAWC6ZTo5pLtXR5BSh6UgiJc81ais3KcIx
      nZtvIenWmRnmb16PemUAFS8evd5FP+n6253OuWXMTvc5d+hQW7/xneshJKXyASreYIqsMoCK
      N5iyqAyg4g2mGgateKOR1MoAKt5sKgOoeKOpDKDijaYygIo3mmoirOKNQxKCjdpiMV5lABVv
      HEVZsjNfLLCrukAVbzRVC1DxwrBVlVXHuuhq0DIXQU1FllYGUPHiSPKcSXyxAUMArfREoqUo
      KgOoeHFkRUGU5V9d8AcmeRhEI8mVD1Dx4imLnNnxEdlJ2OlpsuT5LUSRRiRJRpYkhOMBcfTt
      xcUkRalagIoXz+TBfYRV5+jT99Eay0jZHK2+RDSbUuQRUlEgVIVJf0bhTVh++8ckKXTWV0iO
      jjjwQ0xCstymvSZI5Qaq+s3Dwiof4DXiRrtGw9C+uuAFUtc1joIAISBLEjSnhUzM4N6XlOqA
      3s23iKdTwihFVnXsegvhaBx98j652qTRbQESjqMxO5yiqholCpL0LaPCKh/g9eHuaM7eS64M
      VzcWIln1jasEkynG8hICsBptZM1cCPN2GqShj2q5JIGHJDq0Nm+QpTnhbIqzvIImS9Tbq5Rp
      jFC+g9FLcmUAsJAW/EnLvehqfGtcTcUrL965/CY8/GZLioJRazw6nhf5o32zVn90XDOBwmQ+
      muC022iGAcZZraA8TZHVp5XonkXlA5wwDhM+2R9ddDW+NU1TY7O30PmZ3ruD0ljBbjUpy4LU
      nwAW2hPCUv7BfbyhR31jA0mSFtKH4Yzx9i7N67eQFZnUm5MDhnP245CGPqppf+v6Th/cI5NN
      Jjv30VrLiGSG3lwmnk3J0gAZFj7A8YTCm7L09o9JM2g7CcNBSTCdUiYhzvI6iipTxAHTSYBc
      pMhSgd7s4Q0G9G7c5Lm9o7KSRXntkAyHeHxEOtqhVOtQjiCuczQ6pLbWRmhNass97JU10vCQ
      dLJHSgNXksjiEHdlnenW54TjIVatS67LJINd0kIjmw9p/+hnRJMRIosYbj/A7K6iqjL+3l3U
      7lXqy88LZl9QlqBoGqVTR8pDRjvb5Lt9OtduUgYjogxEJOG2epQ1i+NPP6DQW7Rv91B0nXSw
      DbUuO+9/iFE3UVWNvCgxTZ3xzhbFwTFFntHevI6kPmegs9IFOoupa+hlTiEEszh7ZjlbVfBP
      lJ2WHJNZnFLkOYoi4ycZrqlTphmSJJglz7uPjJ/m2JqCn2Q4ukoYp5zuzEhCUHyDTLbh8Q6Y
      LfLxEYWWYHd1Em9CuL+PtVQjnhyi2wa6ayBkiQINkUeU1BFlxvjuZ2g1m6B/jKo3kS2N8HiX
      ODcQ4YgkiImGByQjnTKPKKKAIJDwj/Zw6+tfq46NjU3m/QHN9Q2EAN1xUUwXVdcoug3i2RS9
      3iKaTZAlm/raJdIkB9vBmh/T+Pm/wj8+YnlzE38yI/f6jEYpa29dxWq2UC2LyAtQlK8e5a/k
      0Xkojy7otVxuqApTIWiaKkeTOcgKkzBhueEyDyNaiqBQNbYGY8Zxzp+tdrFl+OJ4hGtZDPyQ
      mmuzqiokoqCmq+yN5yiqyiRKWW+6jPyQhiyQNY0vjke0HZv7s4RfrjtIueAwSGjrEl4ps+xo
      HIx9RlGCH8d42dPG8LAL9HWc4DKPSBMZzfz6feXvi79c73D4FUpwL4Lrp+TRq4mwUxRFyUGU
      07MNrtYtFE2nbRhcczWuNF0ut2scTuYYqkrd1LEVwTwIkVSN5ZqDfdKeFnnOKCno2iaXayaG
      YdIxdC47GlcaLleaDvsTD1tXMRUJ1zS4XLeQBQhF4XrToW1pxHHC3XGIF6e8s9wgPOflf5Lp
      /Tt4gxHFyWxneiIrmEYL4xCycSEv/2nC0QFRlJFEEdPDPbI0JYkiimwxwZWEIXkSkyYJk/1d
      gumEIk3IkpQsDsnTjCTwGe/vkGXfTYS46gKdYjDxGAD3prOnTx4+Pra3dYCtqSR5yf2Jx/3J
      We3KebLYvzsaP3Wbfz6cPto+vrdISXsULuR1t5/hhyuyQnE05uuM80SjIZbtMrs/JQpm6I6N
      ohT485jlt9/5Gnf44SmyhNHdL8ijgLKImO1t098b0b28iiLJxEGEMAomxwGuo6I3O4g0IM1V
      RBGiaCqHH72PffMXuN3V71SXygBOIckyapkTF4thuud9b4NzpvEfoskylDnJ96SQnuUZe96z
      fYnT2KubmHWLw88/xJ8HdG7fJJ7PkJRvP2rzfaM5TZpaE1WG2BuTZSBZLZprq8gnozb+dIBR
      k1GJEXYTOfWIcw2n6UIaQinQOr1vPwl2QmUAp1B1k1tmgWkYaKrOg8mcFUfnwEswVYmmofJg
      EtI2Zbp1l4OJR5AVuIoglRTyNMEyDaI4Y+jNGUQvfmzeWVk4omv/1b954X/766JaNdSTVdG6
      Wzu3zNPHT48u1TBbS99LXSof4AkcRWI3SJgGEZ2azVvdGk0FJmnO9jzkZtPlJ8tNRn6Mpsh0
      LZ2mpZMlCYWs8fZSi8vuy70koeIxVQtwijjw+PXJQMrDJBh/eHC2zP7EhyeOneZu/9WdUHsT
      qVqAijeaqgWoeOOQhGDdPUcV4vaNdXL1zbOJ5V6DT/rTry5Y8VpQlCX73mKo+szb/vnegN9/
      /mQKuNefv2x8myzjFa8yD4e4Kx+g4o0lC+fn+wDryx16Jki6RZxmDIYTBJAIBVUIrvRs7h7N
      yZOYoZ+w3Gux2bL4ZPuIf/XuVf6f399FKTNWl1oYqsLO0MNVwC8Et1aa7ByN0TWFzctreMM+
      nx7OsRToNWsMgoKmnnJnd8r1lRbzpCD0PWo1F1cVbA/ndBou/fGcjqPjpaCLnMNpyH/3l2/x
      u3t9VpWMXDPw4pT+aE6vaePYNsPhGMPQ2ToccwFZfCteMmTdOt8Ari43qaslO0OPKIdLvQaX
      uy6fH87Ic4kgidlYbtOzBP/3H+5TszSGfsJbV9axDJ2rdYUvhxntZp0rDQNklbeXHXbGIX6U
      IBSNt9bq7A+GBGnJr966TBL7TAuFVREhdI31ZoqhKSx1a7TNFR4cHWE5TUxNptPt8NaSwywp
      yZKMMMvwJAvH1Nho6Hh9D91p8PZqD1Y9DkYhigaFUPnZrUvEgcfe7NkzuRVvBuJZEWH/8vkD
      yhIc20QuUmZzmencZ3ccAILldo3MnzEY5mx2a3y50+fHV3psHxzxu0+2aNZtDEVw5+4un0oS
      mm6QBR57kxChqHRslZ3BnO3+nIKSiZfQMgRHs5jlTp3Bbp8YDcnz8dKC+0GAW3PZub9DKSlE
      yOz3Z6zWdR4MPUpACIn/7f/7gJprseSabO0dk8Yx4+mMeZiiGjp1TeLT7SNGwasVPVXxw3Gu
      AcyDhTSFFz6WqDg6df7u3uCpaz64e/BoezQ9WRyWnXxlg5jho7MJ3hN5j4Mo5eEdpw+ik60U
      zwc4WT47ebjUN2F0sux34j29/Hc6D5ienJ/54eMTccoEoH/OQreKF4KlKizZ5kVXg4ahMU0j
      8tg/3wA2l5uMvBhVgo1enS8OxshFAfJCekIRJUJRyYqSjbrO/jSkEBKBH9GsW0y8iJqh0KjZ
      fPqg/0J/XMXLS1oU+M9ZRPiiiE/EuYSsnm8Asiy4utKEPEeVJX7142vEM59MTgkjoChpdZqU
      qc945LG+1MKQBEI1KSKPW5caXGnW+Of71ctf8Zg0Lx5F0l0kD9XpJEU73wCORh5Ho0U/ZalV
      Z39ygFbmHM99FiOngtUsZzqb03BMDveHdFs1JpMhYZzi1izG44Ddvnfe7SvecLIoQKgGWRSg
      219/DqbMEwqhIp9aAp1FAagGeRQgJAlF1UCSkKSvN8J/vg8QPpabm++d/xX/7MHCKzicPOyP
      P+5ve/0pB9XHv+IZeLv3iPQ6/U8+YeOdH5HHPkKvE08H2N1V/GEfp+kSxSDiGXKtSzzcx7ZK
      xmGXeqskyxRaKz28423CzGHy+Uc4qy0UyUXvtql3esjyV8cKvHnrHiouHEl3iQe7WL1lYt9D
      UjVEOERxagw//SPDcUBraYnpYMrSxhJF8CVZZpJM9ol1i1COCfySWruBUC3S/i5mdw2jVSfY
      uouxuoL4Og1AXkkjVlwAzsoqZncJIUsLgSwhFlopQqK5tEx7MkEzDZZKQTg4orb2I5L5BKN2
      i6KQKPOIWpYRTD3c7ipWawkhJIQkaHZ6FEIs1jp8ZQNQVgZQ8eIpiwJZ08iTBOUJdTcAt9t7
      tG25C1Eutd2lLDKELCPpi2MmEM+nKKaDrMiURUYQRpj1xplQyTzLkJVzXnVRSSNWXADz7c+I
      zDbHdz7iyrvvkMcBQq+RTAdYvVX8/vGJDyAQyRSl1iM68QFGQZdGqyBNZVpLLlu//yOd9Sbj
      wGRjrcG4v8fk0EFWFRpLXRAlk6NDlq/dfLoilTZoxUUgGXXi/gOs7grRfIakqAi/jzBs+h/9
      M1M/o9HtMhtMWNpYJdz/lII68XCb2DAI5ZTQj8njOq1LS6SRj92+BKREfkKtlrF/5w5pdB2K
      FNV+tiBAZQCvCbc6NdqWftHVeC4NQ+UoAHtpBaPdRcgyghIkCcoChExzaZlGv4/h2rQ3JcL+
      Pp0bPyOe9LFu/jV5ISALsHIZp+4w2d+lcfkG4XiM0uhw9ac9yiREr3fQdJm8VNCtp7tZD6kM
      4DVhe+Kxf87SkJcJV1+sJJA1DVl7lnCASnP90uNrmgulaH15DXj4wuo8NPXG2sbiqt5jvwHD
      pm58PRmYygAqXjjh6ABh91BETjgdYzXblEWJJEuUZUlZFEiSoEQQjAYohoVuW5SlgDJHSDJF
      luGN+jjd1a+lAfosKgN4zRjd/wKj3sJqtZ86Fwz7IARmq/NohDCaTR7p8U+272I02yReiG7r
      yFYDRS2IphFGfTFj6x9u43spvevXz/370XSCpMpo1rPzLRRZwujLz8kCj7IIUWSF/u6A7pU1
      ZEkm9kNks2B8HOFYAqOzjEh80lxD5D6KrnPw4b/g3v4lTmflOz2vygBeMwp/RH80R7/3AX5q
      0OnVSQswe1dJxwfgLDP/0+/QHJMg0cHr03rrPcyaA0XM6O7nuMvr9O9t07upU6oqsReQe/vs
      3HnA0o0NRFEw29sFSuZbHyN11ig8gWFnpIWGVVO59x/+T9b/m/8ex3m6q6PZDRpqE1Uuib0x
      eQaS1aS5toYiFsGK3nSA7sqoUoxkNZFSgzjXcJtXKNMQStA63UoZ7vugaer8pHfxy3S/La6m
      kp3EuFnLV4gfbKPVu+hGk3g2RhIlZt1Ay1YoWy3i4y2EkGlcvkY+konGx0iqilrroMcJaq1N
      S1VOWglBcHgf2TJxljoICpIwRpELQi9FqXWQVRnryhWCo89QTQuSGbXLVynS8+MuVLuOetJF
      N06ywLSeKKOfyg6z4FQfnzpWe/k7PbOHZlMZADCJEj4Jwq8u+JLSNDRuLi1eGKuzhNU5LRu4
      9mhLai/kBZf+7C8en7avk6cxkqKhmz3s9smLZj9+4VZ+9oszf+9hQqPmE/Ww2j95tH2+4OHL
      gSQEV+rnyKJUvJnI6ss9fPp9U5Qle4toq0oV4jS2oXHeq9CybVra+X3NzjPG3q+2G6w7OptN
      99FXpvmMNKbXWu4zl6086/4V3w9VC3AK29CIooTbKx2SNGOzZfH/fr5Pz1AQpsumYeBHCXVD
      pygzrjds7gxmXO91MMoUU5H523sHpEJBKxPu+yk/XatTpDHDOKdlaMyzkj9faRBmBY7I+cf9
      Ca5lcyUr2Gg6jMKQrmnQT0o2TIn7XsZfba4uEnOIgr/brbRHvy+yYFi1AKfJC7jVqyNJAkmU
      RKWELUPDNqlrCofTOX4BuixT1yQeTDz8NCdOUw7nISmCSzULucgwDIub7RqGKKmdLPhSVJWr
      DRtJQJJm2LqOppvURIZtmnzZn6BpCo6mIsqC3XlImOVM/IC+H2NoGt88H3rFs5CNetUCnGY4
      8xieipn/6EQu8bcPDh8fFDF1Bb7oT4gfZdCYA/DpaI6lyOTAn/YXYf6fnbr/Z/1FxpjPT/bv
      DBb3//udxw74KCsJ3IRPT9QuAO6ffPTvTebf7QdWnEFIStUCnEZRVOyTJ6LLz3g0ZcFHxxOQ
      JAxFfuoBBlmOqaqYXyMa6TzCJOGTUy9/xQ9L1QKcQtF03rJ1dMNAkRQO/Yh3ei6fHM8RErQM
      lYN5wmZdp5BV9qdzilLgqIIUhSxNWGnVGU499mYzwrzSH3qZKZK4MoDTlEVBUcDdaUBTUdG1
      RYrUNE2ZFCX9MGbTtpGEYN8LkYRAkSVUWdCfBwhFQ5QlliKRfYPcvhUXR2UAp4ijgH850eU6
      ekaZ4/nzJswCtkeT77taFT8QQnmGLlBFxQ9BXdcw1Ysfx1p2LO7N4oWMykVXpuLNYZak7HsX
      nyleEosBijyaVKNAFW8ukmpVBlDx4vEOtth6/19IkoVMYuyfVRAskpBgPOPhGNrk/qcEQcbO
      B3/CHy1klnNvyN0//J75ydxIGnoUZ5I+FMTTKXGU8CyeqQ1aUfFDUmSC1RuXefD7XzPcO6Sx
      1Kbe7pFrKslwiFm3mPcDnGtXWVlboZA15vffx5+DHfgouoYcR3Rvv4d39w98/Dd3qK1dor2+
      judlqIWHbLtI3pxJpvPWL37yjLVWojKAihePJBfsf75Fe2MDvdbGsjVKNFrrSxzOZ2i2S9vt
      kiQR8+EEza6RhgnLVxso2uKVFbpO/5M/0Vm7xPJtmXqvQ55lLF3fxNv5BMkw0e0G+ez5s+eV
      AVS8cJzVTZzVTQCa62fPbfz0caxCmacUQkGWBE6788RdXK79bHGsvrx69v6333u0/WRYzZNU
      PkDFC8fbu898HrL38YcnRwqSIDpTpswS/MmM4dY9vNHTCVlOE0367Hz8CUXx9ORjHgdkz5mQ
      r1qAihdOkZfM9+4yHc5I/st/wE9lJAwaSzVKJJLAZ+29P2e+9yVBbiNJgrv/+W9oXvs5ZqNG
      Fk6IE/C2PsC9+UsstWT9R7c5/PgP5IqKabZJZwP82RxFS8FZwzEV9OYyTt06U5czBnBzvUvy
      PHN5Tek1HT4ZVomyXxSK6aLEMZ0rlyEY4dhNkvEYu7uCXEYM9xKEJFNKBr1ejUzWqF+6hd1s
      MD08oHv1Mk4JShHgdpqohOzeuYMqK8iKgd/fQTbqLN/6EWk6IYo1ZkcPuHz5KrCYB7h0Xqb4
      e37I+9OLn6h40ejxxafteZOwul2sbvdk78QJuPRYDMtZWmyv/vjdR8ea3WWyYI6z1EPXVQDc
      R/doYnXO+gGPaVHmKWGrxkMBiaIsOfAX73nVBap4ZVAs91u9sEJWsWrq+fc872Cn7mKQsTt9
      vPBLlhVWXI3dyWP5PUmSUAXEecHlXgvSmKN5SJQtZiTWOw1C32cYpji6ivfEl1bIMnpZEJ04
      L1eWWkwmMybx4zxSrmWilRnD8PG1pqYQJhefa+pl4mrTpW6c/4/8suBqL1f9ijw73wBu9Joc
      Doa8fWmZmeex3q6RCwVin7VWjaNZiCIJlpo1dg+P2J7GrDUd9vs5y67OMMzxUkFbL5GsJsul
      wJUK9vwUvSxoNBwGkzmrvTbheIKqq/xxd8KNjsOHQcjPVjoM/ZCerVN3HPZGU660YZILRJ5x
      e6nO//Xh9ot+Xi81e57PofdyS7u4+stlAOT5+cOgfS/gcrfFzzeXeW+9wf7UI/IjZmmBq6ts
      1HSOwgJbKtE1DU2C/njG3izkxloXSwaKnGathiFBmiZ4Wclbqz1+vtFlOpux3E+IeIUAACAA
      SURBVGygytBxLWqWiaGUDPyUt1a7/PL6KtfrOod+wv7xCFlRabkmWpkjFJWyWmtf8X0gJER5
      6m36H/+Xv+U3X+5/o3s0HZOpF1J8ddGXlr+4vcHHL7my8vNoGhrvrDc59EKC8RCz5hDOE6zG
      s/U5U3/CcPeQ9uUrqCdB++FkiF5rEY5H2O2ntUW/K+/0muzMLz5z6PVmjbhcJIE/twtkqDLR
      M2TtnmT8nGbX0hSCqq/+Qhl++iHOygp+KEhmh4SzGKdbY348RHWaaKpEfX2DcDygLAT+4Jja
      Upe8VJnv3yfyPMY7R7Q2ZqRzD7PVZrJ/hKwbGDWT5tqVi/6J3xvls3yAtaaLrKgoZc7Vbo0P
      9ieoRYFlayRZiVLkJLJKWRZcq2l8OQ4xdJ2pF7LestkZzujYGhkyH+89fxav4vvFWeox608x
      Gw2Coz0O7nzOyr/6b7GabUCQRRFJEICi07m6zPDzPyGpKlari1bvMtvdxmmvkHpjju58iH3p
      JvXeKpSCOH65fYxvSpnnzx5VKrKUFBgGKe9eWSGd+2zNJhS5RCpk3t1YYjIZ4cUZjqnTMHRc
      Xed4OOb25Q4/bjn8x8+fFVhY8UPR2HyLxpWHe9dYeu+vkGTlsRpsmRHOAtylxfh77/Z7lAgk
      Waa+ukF95fF4fOvqO0iyvMjiCItMjq8T4hkRYfeOH8e1bg1nFOUBEiXZqbUW9wdj8qJAliSy
      okCRJPKioCxha+rx90KQFq+yZ/BqkqcZyqnsK7L0RAiiULEaj5eICeWJkZmTlz2LIxTdOPfc
      64KkPiMe4LSdp/niJX7SI3h4vDj5/8N9gLIoSSplmwvB6++T+R5C0RkfD+it9xCmQzj0UNUU
      9DrZ7BhFCDxsao4gmnpY3SW84z61bpsoyimziM7V85NgvE5UM8GArSlcbT57xORlp3ZmAqxE
      NhuIIsVyLfb/9M84V65iOVcRso9IJxx//hGN1duoXZNocJdUshk/2KG2ssJ46y6j4YzVW+ek
      FX3dKKtE2QAkRcEweXXXA+UCavbCCGorG1AKoMROEnrXb4KQkRQFyoWi/43uBopmkKcJ8vov
      yeMYWTdACNxOh6WS8xNLv2bk0bQyAIAsL5m/wgvilFN9c+lUn18yz896o1mL9CySsjgvWade
      A01/YwR4Jd2tAmJOI0sCCVC/Yd6prm3Ss3Q0SaCdaIoKIViyja/1gE1NZemJPACSEG/Mi3hR
      iCpT/FnadYdGUWLqMoUQHM0C4rLE0Q0U4FpD4/NpQpmmNByTg8mMUZzjmgbEIWvLHcaexyCM
      WanXUChJipIlU2WagVLmKIpCkue4ikRQSvhBQK/usmKp5IdjsrKkZprICqyqCn84GhG9JoNp
      dV1DUy4+edKyY7E9f85M8JtKCeRFQcOtMZ9F/PlqnXkKkwxEkjCOs8WXujCZJj5t22Ce+Mzj
      lDLJqJUlsoAkX4yAWarKu6sWrgTHXkouwE9ibM3AUSRuN1y+PCzIgEzAZt1G12SiUkaVC3bH
      IW1VYi9+PSzAS1MO/YuPN9FOKXdXBnCK4dRjUJQ88CNcXeHDUU5NlYgKKPIcXVVIioAyz0nL
      EtfQ0SXB8ETtbHo0BCEQwJfDKW1TY3KU0tAV/KxAKgvivGS9Vcck52+/3CPLMkopoj+XmKU5
      tizIkMjzjDgvX7/Jp5cASQjWzosIe9MpyoVKQFoUjMKFoNLwlMR5mJ8VWRo/Eci9mCd8/MIO
      gkUzOwgTFEmAkNCkkt3xlK3TAdx5QXTig78JS6cS30fWZNJMYJhnfZ+yLCgLkJ7Iz1CWJbt/
      +ie0Rhe3u4IoUsxajXA+IwtDNMdByCp5HIEAzTCQ1fNzsi2S5C0W5VUGcArdtLmsJKi6gaUb
      7E5mNAyNAy/GVCQausI8hyRJ6TgGuQA7yznKSuq6wuHUp+sYjOOchiaxXHP4fDDFUQSKohKk
      GY6mYKsKd6chrlwyjjNAsF63sFWVg5lH3dA48GOWTJVPh/PXbkrR27/PsH+EWl+hSCJqvWVU
      VWZ+sI1s2swnCY4tUNwa3v4x3dvv4tZNTLtF/comO7/9zyz96GeEUcq8f0wwOECu9dBtkyKM
      KCXQFBjuHtBaX2fSH6AYDlfeefupulQG8ARdS2cvKZHCiJrjcKOm48oS/axkFoYsN1xK22bu
      zTFdjfE8pt5okgYe76y1ackSW1OfWZZz7Ic0LJN3WhYfDj0kAZIsYyoSG66BKgRNu0RGouMa
      DCczTEMnk2Teawm2/QxFQPqaWYBi1bn87jJ7n22TZTHTg12iOMOWIwqtjqalREGAInKaG9eI
      h4fo1pXFuqQ8xmh0CWdT7K6JpuUUnTWm/RGariDJMqUE8XzI7OgA1WrSWF2Dc7ThsmD03eMB
      Xgd+8aPL3AlChJAWATwlKJKELgtcXaHvx8R5yYqjE2QlWZ6R5AUIQUNXmCU5RVEgCUHb0hkF
      MXm5GN4UZYkuQ4SMWaSMkgIhFmt0DKlEyAppmuIaGoMwxZIFpiozDBaLSbKi+MoWoGlovL1S
      f+kjwt5bbn0rJziaz9Cd2ve2FGmz4eLlEWWRVi3AacqyIDzp8mdFQZTB9NQE2YEXPXkF/SA5
      s79/KoFGGsVnSs9O7+QFi5KLTv88XewlGUxe4Um5r0M0PqJ/NGHt1k2yMKQocgzHhSIjTnJU
      KSeXLNSTt9Nwf5ihUyFV4rgVF0A881G1gmAec/jBr4kKld5yG1SD8cEhrY5Nfwzd9RUMU8Vp
      tZ+ZSPy7UhlAxQunyBNQa9iuQevyTdI0IBiOQE1AFMR+tBgJymKOdoa4re8/PBMWPkBlABUv
      nObVtx5tty5tLDauni2zDgSjY8x27werh6x/O52hiooXgtX64V5+WAhmVYvhKt5oqhbgNWGz
      4VLTzp/5fFlwNZXDi18K9IhnqkJUvHpsTeYv/TyApb1cC7zLvKi6QBVvMKLKEPPaMfjsfYY7
      e2eOZUl8fuHUY7R/zHxnizhJGe881luN5rPzr3mNkFSt6gK9bkSzCVKucvTREbJhMNofYVoF
      RmOZZD5GrTVJ/JC1d95FJB7T4wlaeISjSnjDMWarg2qYRLMpJD79nX1MxyH0Q9TCI1OaiHSK
      c+kt6t3WRf/c78wZA7jUqjFeeXK6//WnaesQvNz956+LrGqUQFHkSEhIWYjZ3aSIUygKhGrT
      WKnhjwY4lopdUyjlLtFsRpkGBDOfumESjQ5JVJOyLEijiCT0kXUZSWTUNq5Ritdjhd4ZAzie
      BzwYPj+t5OtIu/NVuQRfHVbe++WZ/e71t84tl0YhGCa9q+fPsi6/8+ePtoP+PkZ7mebK0vdX
      0QtEEoI155yAmDjN30gx2yx/PUIOAWJvju64lGVJkWXI6jMyo6gKeVFSJBGq8bR6RDidYNYb
      AFjdVaynSry6lGXJ/vMCYlquRZmljE+ysuiKAhTE2eMXRdc02qZKmmX0/SecLElCo0RVZdK8
      IMnOvmCaLC2WEwM1y6RtqQxmAUlREmc5kiSx3rTZG83JS1BkGU2C4AnF6ppl0rY1dgfTp9bM
      64qMJEmkeQ5FQXbqvCQW6g/ZaxhuGE6HjO99jlB1ZpMplpwgNZfIvRLdSMGoM9/+GKuxRGK0
      qBkJ/tRHd+sEkyluw2E88HA7jUcG8DpzrgGsuBa6JuPOQ+QyxzFdJDmBUuZoHuIoUAiZbt3l
      cDTh3Xad46lHzbbZbOr87afH3N5os6RkPPAKdE1hMJnj2iZXmzbjuOB4POHu0CNOU1brDWRF
      o6kWfNb3KCQZW1V4Z61NLmTComRVKflkGlOTS1TDZL8/ptfrcFOLiFOHhi7jlzLXOg5f7h1j
      WhYt1yEJAoZhgqkIglLmWsfleOzRqRn8/t4BXvr6fP1hIWhlL61T5hlpmpD7MZom46ysgvAg
      95kKBUl1UGSJPIko8pwsyWhubODtblMUz245vgumItMxja8u+APj6hpeEFEWz5gIUxUZRRJc
      6TZZMQV3jiMs3eDGSoud/TGmJvjseMo8jAlRuaRJLK+3+c3nB7hakzxPuFQ3uT+MkeSEulyw
      caXHf/p4m7quMg1jFFk5yUOQMY8WwR9CkkiyHEVTsDQVSZJ5e71NfzQj8gMudxrcqGv0U0FD
      l/h0OMfVIpYbDWxFIIcJ2yOfIMlJlIJ6FLHatikmCpYq0MKErZEHacbOeE5L1/DS18vpf6j6
      DFBbXXvy7OK/q2c1P097AW7nh1t/k5clSXHxaXizE9HmIgvPN4AvjseQ5+RCQqYgzkqEgE/2
      hkRpTtO1SIOA8cgjL0riSCeIEtKi5LOjKSXwHz/aJi8XGux7lk6wNSAtSu4cjAiTlFLI9GyV
      gzTnzsEYIWCbxcSEH4bcHxVM/JgvjkeESUZZlkiyzKeUSIpMz9KZzOZ8QIkY9Rdf+DQHIWHI
      EIymjCYg9qVFdNap86YiCNO8Ulx4waRFgZdevI8ZneTCFkI53wDiJDuxkrPWOjlROTgYnZ0k
      mQaPfYD5iZpCnOWoskT25PnoYQRVxsFs8TCyc2TURyfRV5NT1/LQWU0yZifHc4A8Z/6oqjn+
      yXaSPypx5rx38R+hN5os8vFnIbVe56lAlzzLztUlPe/4w2N5liLJCuIkZrLIEmaDEXarjfqc
      zJSSap5vAJc7LhkSGgXXenXe35ugljmqrpIXoJY5paqR5jk36gafD310XWcyD1hvO+yN5nRt
      DWS1yhBT8RSznS3muUYezxCqTRbNGWw9YOPnvyQc92ktddj7YovWpTUkIPHGDI6n1Fwdo9Yl
      TiKKcEqSlZRZiWZpmG6DKEzpbawRjI8YPBgQRxFLG+uEUYZpPe17PNMHADAkKAvB0Szi3cvL
      hHOfceyTZIISjc1eiyT2GUwDWq6NKQs6TpfhaMyPL7fZrNn8dnv4Qz7H7w1NkWg/oc35KtHQ
      X+5VoE8iZBWn3sA72IbsCKW9QXN1BU1XmQUes/2Igzv/jB/lqGWAbugYpsLWH/6J9spVWj97
      j1n/GKmMOb73GdaVn8CD98llh9ZyD4SE02pTZAGBF6JZ54sEF2lwvgGcngxzDI0v+lM08VBB
      edHMDPyQIIqxdZVZNMM2dMIoIS8Kdr2QjzWZcZicd/uXDllImOqruyrEUF+uVZZfRe3SJpKq
      YhsKKAaqppFFDmVRUu92KYTCW//m36PbFnGcoSklhdBotHvIhoNmmiiX1tEsh9raJnqtgVRe
      IwxivNGIWncJqyWTeFOSJH2UBfNJnhkUfzrby9h/WgkBYDhfpBUNT8bmk1NLcdM4JXiFlA3C
      LGMveHVHgwJDo2W/ZEmon0tBOJ1h1puPfADZWczGa3r3TEndPrXjPt5x2oty2iMJeB3VPF0Y
      jFqD5w26PtMHeFORhEBQLtbSlE+fK07Eb0+0b1mkoXiMIgnKEkpKBIL8ZJRJEov7PcpTd+oa
      W1OJ05SsXJQ7fd2z6/l0/V4lpltfMs806t4INIc8mtO/v8Wln/4ltnN+d+UHocoQc5Zu0+Wy
      tNDvyUsYeAGyLBOmiwz177Rt7g5nNE2NwyDlUs3kyAsYBAmKrvPXSy47QYaqSIRxzL4X4aU5
      VxoOkiQTFCUbGnw2jVmyVD4b+/x8tcO/7B0xSwtudprIRYpfSMzDiJ5jcOjH9EyVYVIg5xm2
      aVNXcz4d+uRFQfIKWoKQZHTHYjY6QqQHSM1LtFbXMIwX7MtUwlhnKYocH5Vu3aanwQNdQVNU
      4jDg9/05XqLTciwMWeK6pnIc5fyo7fIP4QiAvSBl1VK5G6QcT3xCQJNl6oZBUWT0LJP9sc/b
      TY2jePHixln+qEUxNYUoKvjpSp3hPGDbj7jiGsyynJ8vtxhFCVEYE5eCX6y1+Mft/gU9qe9G
      7dJVJE0jtFVQLTTDIPUnpGmOrLxYf6YygFOM5yGjPMD2PeqGwbEXogoehQ19NpyRl7BiaRyH
      CUUJA0+w7po8mId8NkzYmSsEWU5WgqFIGJrKZ8dD6pbJeDgnL0r63kJ+sSxL/rg/AGmRDebj
      wyGyEIyTjCiO8fOCo5Mu1yBM0ShQFI0wTcnSjFfHyzqLfBK7fFr1QWl0XnxFpGdMhL2pPFwV
      OoszZvFiteDpZX4PF/DtnpJIzArYni0GBFLOSimGWUGYLcoGJ4MGAKeXHyVFASf7+cn9w/nj
      yPGHd0vC+MyRSfRqjLC91DwrUfabim7ZrEsJsmbgGDp70zl1XWXXi2nqykLVIEioK4LVZo3D
      6ZxxklNTBImQEXmGY+iEaUmUBAyiasr5ZacygCdYdgwOUkiiGNt22LAVWprKbpyRUHLTMenW
      Db4YeQhF5ZalE5aQpTmprrHiWihZwgfHwVf/sYoL4+GIXGUAp0iikA9TiApQZQVbSdgtdB5M
      PNKTYcyJpnEYhcxzgVJmHHuCuioYRItJwjTLmAQRXlJ9/V9WJCFYsasUSU9RFgWzh+vt8gQ/
      gePgbLDPKIwYPXGdd6rI1vjNCyl91SjKkoOTPAWVAbwmXGvWaL7ocfRvSE1TOXrJeoaVAbwm
      bE3mHPkvt7KF+ZKtWSqSuBLGqniTEVUL8FpRFhx88EeSXGb19nWmX2xhXL1EHuZock4uGZTR
      lDjKUBSF+to6Qgh2fv8PmLUlrEtrqIAsFex+9DGq06TRazMb9HGbdYTmkvpj9EYXb+cj5MZN
      RBFSX3415VKEUk2EvWYUyFYDq8gYbG1haCpe/4DRl3t0r6whlJws1Egnu5jLy4yOPdpLLmWx
      CHktS5B1ncKf4KxeIZv3mewdIJsK0/1tAi/G6S4x39tB67YY37+LY8nYy0uv5IskpGoi7PVC
      KDgNkzhXqdcdRF6gJz7KLfeRjOFsf4fa2z/FOzpEy6fkucPyOz9DkeHgi7tIG5cx3RZi9CXO
      8hVUVaYoMqKxjr3iYLgO5coK0/091t7axBtN+Lo9e1fX0F8CP6Bnm3jTiCKJKwN43bC6a2dE
      rFQcrFMSnu1rtxblTmn+yObiirW333l0rHnlxpn76rZ7as+kd3Oxfv+baAfN44TD4OKHgR47
      vpUP8NoxPdhF03VKBLPhiGavg9AtsihGEhmlbJB5U2SRE+Q6lqVQpClGvUE4maBbJmkG4WRI
      58rmRf+cH5TKB3gNKYqE6eEESZIoheDBP/0D1voqZdxAMyKEXDLevsv/3955PbeRZXf465yR
      AQIkRVESqRmNZndmdrfWri0/+i/wu/9Nl99d3rLL5aAZT1KWSApMYANoNBodrx9AkWJS9FCp
      vxeSjdONTpf3nHvv+R3TXcS6tsb48Q8UVpu9Bw8xqlUm/YiD/SGd1au/2TkGW4/Y2R5w5fa3
      GKbK8Fkfs+IiIaG77itLoj778Xs6X3zBxg+/IIsIvb5I79rKG59HGQN8gjj1Dk5dBlEw3t2h
      88VXSLaHaTeABESOQMZrLRGOA2rXf0/Q71P76jaqphIPB2j1Bdz6bycYnE5DsjTh4PFP3P/h
      ITdur7P58x2qyzdQsgmjwRizWiWfjrFtnUBqMv7lX1j4w9+zsraCZsps/M/3CMPCqfXIopjZ
      ZIJ5KHj72rxMFaLk40S3j1+C1rXTL8Q8b7izfhsAqz73381K/Xh/y8bjt0VzXLRRjKxbLF5f
      xWo0acoCxbax7QZeFxAZ/kaCUatT7dxgkPs4WspkkmLWe+TFPmalwujZU4z64tudiCjKBlBy
      +XiLq3iLqwAczSB0u2ftWsfzC853fybPMmRFQXKbR8Wzawu9tz+RMh+g5GPiPMW4d+J0Rphn
      6jTd96/ee9mYH7EmUMm7ceLJ26aOe46E3KeOdsmJ2CXvF0mSWHTnGkInGsDOOOTJ4NOvDnia
      bufTKZFU8mqEEDw7zAc4dzWoqijoytmPDE3FOGf76yBJEpamzKuzvDDQa+tn3Q9JknAN7ZXj
      wSUl78q5zu9f1pfp7w2QDIM9P2Cp4XGvf8C3q122Bz6SJCPJKuE0pFmtsO0H9Kom4zjHMQ36
      fkDPM8kUjd2BT5AWfLXUJp5FSJqJWcx4PIpxPZdbNY3/3Z5Q0SUiFOQsYaKYfF2R+Xl/im1o
      OCrsRQU1HSKh4miCcZihyQWaac01SlWJB4PJZd+/ko8ZcUGl+Ls7Pt1GldVmjb+93iHJc1qG
      NpftUBRsSWKx4fGnawuIPOfP17sMxlOarsVizeNvVlvsBSlNS2atW0eWQJUEu8GMlYZLr14h
      jBP80YSZpLHW8vjD1Q4VXcE0DBAwSzNW6i6qqvLt1QWWbB1V1em6Grpu0HYtFqsVGpbMatOj
      6Tllj1HyZlw0EVYUgp+39rBMk3EUEaU5IhfsP90hKQo0oJEJkiQmTHIeHwT0Kib3dnw6s4Tt
      YUjXNdgaxSR5QV2X+ak/ZNHT+evdpwgkbE0jLgp2DkbshikbByN2w7nWTSbgv4c5iqKArPBv
      acL2OKIAPNtCLlISIWNQoBgG0WyCrZ7U3HwTaqbON94lalL+P+PpKm9/9Z835zaA3dFhYvf0
      lPjSYWmZBNgenkz+fnTofjzeG81/+qdL4RQ88c9qmT3Ynx8nOCebL8tyIOfRwfF5xONTbs5h
      hUr/vAt5TSZpyuMwfLXhB0rV0LnRcF5tWHISRT+/AdzoVAlTgSkJ1haq3NnyUUWOpKqAhE6B
      rBvEacZ63eTX/RBd1/CDKcsNl/5wStvR0HSdH7c+jiIZJZ8hF8UAAA1TxdBUNv2Qb1YWWKnX
      WKzo1E0NyzBZrLmstRy2/JCFmkfTVPl6ZRGRFnxztcZ3V9oXHfqDRYiC0eP7pNHr1wrI4xlZ
      fGxfpDNGT5+c2PYyZv4AIQTRwXEpqfw19y15Ry6KAbb8uZshIdGu2NzZ2MWWBDthhHTYZmZ5
      wXAyoe5a3OsPaFYdhrtbJHnB9ixmwQx5OvqwVQpOM916jNlZInjyK+gemqWShwGa1yAOI3S9
      ICt0RDzEaF3FrleJBvsUkqCy0CVJCqL+E5yla/h376DXe8hFThoF6K5HgYaIfCSrTjrcxV29
      xfTZPdKoR7A7JJtNSUc+WSHjNBvIpkUeDkEx0GwPJBnDe8MVjyUv5dwGMHuhIvvTMxNjc+Wo
      R3tzr/t5Nflwb3i8fxDxMepDKYbOeOMRml1HVSWyeEoyGZPNQvbuP6G9fp1cFIgoRyg7aIfV
      SbLggAAFs9FCViTGm5sYzS6SyEkDnzSD2L/PdFLgtaswHpMJDW3kozUWCTY3cNod8uiAJALD
      yRnv9hG5CuEzUrWJbQqqX/7xwnO/VveofuC6QJ6hsf3+E8KOuahE0ueK0VpCb3SR5BeWRlwp
      QJJo3Poj4dYDhFbB67TJ4xBkGae3hCN6CDFPsHCvrCOKAkk+9C57K/O/D8doRw9+QmuuYFXd
      Ixu3u8xztcrK832fV4kRvwNJEDzroxkXl0HaDEJ2P3BdIFv/wJacSGVK5EnyFGT96GUFQJk/
      NAnwVm4ebVbtyrGNpJyYgxAiRxQS8uGsuaQcP/ja+u84y/HeR7bSyVmNyvKVN7mSDxJP11mt
      vn8pqo5jEYzLpPgzFOEOQWiSBfvk0wOcxeskozFWwyONEuJggtttEYcJ06372IuraIZBGufI
      IgLdI5/4KI6N7i1iepdfenX3lzvITgu3UcN0zh8aTaIpunWcOh9sb2I2Owx+/RGt3qO51MV/
      cpdZqlJfaGF6lVccRzDaeEgq2bhV50L7SZLQD9+/DyQf/XMpe4AzJNMZjuuSmDLx7lMGj/s0
      v/4G29RQazXG/SeMN31a15cQ6YwonFCkBWarAfEI/9736Is3aXlvmaX0jqTRjCLeZbTxK5WF
      ZabjIZqi4R8ENNseklVHU2LSWKJ5Yw1VkZmNB8SpitNsojg2aZKShFOSmWBnuIVRbZMGYwzH
      oX//Id2ba6QJuFWLIJ7h9K4xmwSons32L99TXVhG1k2cdgf1LdeOXQZlUvwp5MoSLXfufVgi
      RxRQWUtRDPPISTE7HZrrIEsCISnzqpKFQFbns7F2dxVZ007GEZeI3ezgdXpMgyHxwR6CgiRO
      cet17Oa8DFESTsmSlPBgn0rdZbwfoDkZA9+nc/M2mmlhVOo01npE/oA8nhAPc5Iowmm20Owa
      lgdZMiVLYoo8RzNMoskYw7FQHJf9+w+pLJzN8gKYDffY6x+w9OUXRwsjiyJDFDKiyIinE5za
      sZZLOPTJpyFmvUIu24S727SuLL/zvSqT4k8hSTLScxccGRRQtJOBpyTrLxVUVc33u6SivjKX
      MqmYXWh3OX82Zp5GmERTUG1u/OXvzljUlueqENphymF9Zf2MzYvY3pdHv2fhiO5XX58OY46I
      xiOKQrDxX/9KIlcohptIbgUJl5nfp3Zlhb2731M4Pa7f/oLpYECWB2w/3qF7rYnvT3HrYwyn
      cuF3vC4fbv9U8lbEk4BoPDyxbRaeNyadUuTz4L3IUsRLahPnaUqRpeTZ2aIfokiZnVqeojpV
      bM8+Y/sczbRIwyFxnGHoMpkA1fQwLJtqu4Gq6+RZjq6pTIZD6i2bWVZDUhPC4ZhiuE0Yv30B
      ElmCZddh2XXKHuBTY/vH/2QaQ7PtkUgeUhxQSAWq1YCZj+7YhLHOlS+7jJ9ssx3tI8kCw2kx
      3LhL4+pNJBmmw33cTo/de4/QLUFtaZU8gdlkhOXZJImAaB+l1kOVTMzK60/QuZ0l1jpLxxtu
      3z5rdGMNkcWkmYJq1rhWBZj3br1b73aPCsHLE2JKPl7qKzfprK4wCyYk4Ri3u4SmquRZShrP
      yKYBlaVVJElCEhKta1exmh1ENiMXMkJIVLsdGldXiXyfPJlit3og5jFAkc5A9/CqLrMwIplM
      3ri2bzwesPnL3RPV7kWRU+QFeZoyHc17MEk1iINdHvz7Xxn09y842rtR9gCfGJXefPSpuXL9
      aFv13GBUpf31DQDcucIIvRe0QXWnitfqsfz77y7+rsW3C0TDgwFFIej/8B8kskcxeoawLERu
      H8UAg0c/I6w2jm1gN+s0WjZ3/vmf6N26RVEURIMBVrXG+GCAopl4FYNxDE3VhQAAAZ1JREFU
      KFj75pze5AKKJCkbQMnlo9sOcf8JaRxi1jTCIMBy6ui6ja7UUVSVYNtHEzpyYw0lj0nHPul0
      gO/PqLqCOMlhHFK/soIqBP7GozOr91+NKBtAyeXjdpZYfzEG4NuzRus3CQf7WI0qcnsuWvCn
      f/jHo4+7ayfN60tv3htJilrGACWXT5HnvGTQ6Qin2TohoHCaPMteOnr1KiRFKXuAkstnur9J
      gsNsPGS6t0nzxi1mQUil7hBFCbNgSrXpMEtl9u/9SP36l7imxCzTYXaA6rWY7PSRLZP2ynW0
      tyy6UaRlDFDynpj4Y2xDQVroMdl8wGAQkSwv4lkGlqGxt91nuDOht7pMPgvwxzFFoWC6Dtnu
      Y/Yf3ofOLdpvrop+jChHgUreA1azR7c2n5DK4ylZq4vdDam0W0c+uTWt0r6iIRczJNNFKWLS
      QsW0DGAJo7aAWWuhqm/vxUtKuRSi5D2gqDrK4Zun6joG4FRPqvPZ+uHYLM9Xltq8uLa2vvTu
      y8PLILjks6dsACWfNWUDKPmsKRtAyWdN2QBKPmv+D0P94X1j4p+AAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Airport Size' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      4qM70EqfIBMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      C7PvsAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daXCd13mYn/NtdwfuBXCxcwFIiaS4yRJFWaKs2FFij51lEns6cTNN4+m0
      aeukzjb50Um3SdOZzrg/XDWxZzJp66S249QZR0mcpbIUUwopyRRJUeK+gdh34O7bt53+AAES
      JEAAxMUlhHueP8D97ved95xzz/ud97znPecIKaVEoahTtEedAYXiUaIUQFHXKAVQ1DVKARR1
      jVIARV1znwKcefstKj645RypXHnVCWWymYX/y7lZTp16l/OXr1PIzFCw/erkVqFYBTevnOf0
      6dNcvt6/4r3Gok9ugVxulvfO3+LIriglzyRz/Qo510D3chSLFbp6n0CUZhgcm2TXvsMUpgZJ
      l+DqB2/R+8QzPH14P+fOnWPfkY8RC+hkx0cwQjHeO3OeTMnhmf29XLjez/bevXS0NGxQFSjq
      mcGxST7xiZd44/gP6EoEudI3wM7HDlDJjJLKuXQlo9wcHmfPnicW9wBXz7xDMZik79o53PwU
      Y+ky71+4yv69u0nlyhw5+lFuXDrHjVsjHD16lMvnzvD+uUvsf+Jxunse4+nD+wF49tjHuP7B
      ad58+zTpsWHyvkVHS5Tm1k7ePPEWuq7zw3feeiSVo9j6eJUCp0+fJtyY5B/eOomu67zz9lt8
      8P4F9u3fy+Ub/Rw98gzDF04tVoBJ2+IzLz7LY+0JCu7ctdbWNjQB+cwUp374DuFEG4ZwOHXq
      FOFEkmRbG7qAqKVx6txFAKZGR5C6iV2ZM6H8Soa/fPUkvlNix7ZufF9y6NCh2taKom7QAxGO
      HDnCMx85wPbubnwJhw4dorm1FVMThE3Bu2fOEEq0IVY7E3zynbc59tHnNjrvCkVNWbUCKBRb
      EeUGVdQ1VVOAzdCR1CIPW0HGVihDtWRUTQF8f2Vff7FYrJa4JfE8b0PT3yoytkIZqiVDmUCK
      usOrFLh4+Ro+NVYAXddrKU6hWJLxqRSPd0QYz/kPoQDSY3hkFIB8Zpb+odFVPfb6mT6++f3z
      TKULaxapUFSTRCzEpYFZQqK8djfo+PAghvDwEzvIDFwi1tJJa3Mcz/MQQiz5zESqwPm+SZ7b
      18Zfvn2Lf/zS/qoU5F5830fTNrZT2woytkIZlpJhGMYD7l6aNT8RsAwGhydpj7bR1NzMreFh
      2pNNSCmXNXGaGyMMT+U44Xl0tjQ8VEZXg+u6G5b2VpKxFcpQLRlVmwjzPO+BNn7ZdhmfTrOz
      s6Ua4pbkw1Lpj1rGVihDtWTUbBActAxa4+FaiVMoVoXyAinqmpoqQC0mRxSKtaAmwhR1jTKB
      FHWNMoEUdY0ygRR1jTKBFHVHanKU98+eJmtLZQIp6o+K7dLV1kzZrbECKBSbgfauLsoEiVJe
      eyzQelAmkGJTIHS6uzqAhxgD3L2YAOnR3z+4+meVCaTYZKy5B7h7MYGeHcH2PXzfx/f9Fddo
      ep6H67oPndmV8H1/Q9PfKjK2QhmWklGTcOhELMSl/lG270pQAdLpDJqmPTAceh7LslSU4yaQ
      sRXKUC0ZNQuHhrlF8eHwxkWEflgq/VHL2AplWK2MUrlMwLKWXZyjvECKLc25C1f5oz/9y2V3
      LVETYYoty6mz5/nGd77Hvsd6qFTsJe+pqRtUeYEUtSTR2MA//bmf4tmnlt+IuaYKoFDUksd2
      7VjxnmVNoJtXTvPq906w+jNiVkaZQIpas1Q7XtXGWKFQhFwlj1nFzCgTSFFrlmrHq9oYa3Bg
      DGGneeOdszXIpkKxMSzVju/eGGtZBdjds420q/OR/Y9VLTPKBFLUmqXacbixmcOHD5KIhh/Q
      A0yMUZlKE4rFqpYZZQIpas1K7XgZBfDwnAAfObIxWxgqFLVh5Xa8bA9Qys0wMpuhmkaLMoEU
      tWaldryMAuhYwSBd7a33fVPMzPD++x9Q8WB2coxLV2+sOjPKBFLUluXb8TzLToT19G5nZNLl
      3v2eU7kST+xoZqro0xQO40xlVDj0h0zGVijDUjKWCoxbrh0vPLNc4rlcinPv9nHgqb2Lrrcn
      E1zpG2XHjjK5bJ5IOKLCoT9kMrZCGVYrY7l2PM+yTzsyyo9+7DD3Gi16IML+fXMupWg4THIN
      GVYmkKLWLNeO51l2EGwJl5QvCFUpI2XbZTK9sYfkKRT3slI7XlYBgqZGNpPDqUImyrbLN179
      gIv907x+pq8KKSoUq2OldrysAkynxui/MFAVBUjlSrQ1Rdm3o5mxmXwVUlQoVsdS7XjFjbHc
      cpaBoRm6D+6iGgsYE7EQf/32NX77D98kGrKqkKJCsTLLteMVN8aaHhzjIy8+TyIQYeXjr1dm
      eDLLZKqARPL+zfEqpKhQrMxy7fjujbGWVID2x/cQ9i0OPLmrKmsmy46LEIKWhhDXhmarkKJC
      sTLLtuPbG2OFww8IhnPLGb71zW9z6dqtdWdkR1sjIctgIlUkGqrmCgOF4sGs1I6XjwWybbo6
      trF798rLylYiErTobm3Al5JPHd297vQUitWyUjteVgE8qTE7OoqswmHH10dmuTY0gxDw/o2J
      daenUKyWldrxkleL6SlGxqbp6NlRlTGAJsDzJY7rc6l/imK5Gs7V2uOnh8ApVT1N6agJwo1g
      Ne14yevheJLGkM2tyyNVmQfw/TtBcrbrcfLCUBVSrS3OxVdwh07hvPP7VWuw82lWTv4PpQQb
      wGra8dKKIT1S01mciHbfPMDdkwizU+Ocff/iihm51/cfChikc2XSuWruObGx+OlBzP0/g9a8
      C1mYqXKau6uWpuIuHtCO51kyGG7kwjma9z+PdfUSeSB613d3TyIYQtDTs3PFcOjSPbtyff/d
      m/z5m5fZ3dXES0/tpLczseayLUW1QnCdi99F5MaQsQ7M/Z8FQN//Ocpv/R6ioRs/2oFfBTnz
      aerx7YvSVOHQDyfj3sjQB7XjhWeWSri5ZzeztwaJtXcQvOe79q4uhkcnaaJMyfdIzc6SaNj2
      wHDokr14Ou3cjQlMQ2NoKktHS4yByRzJeJhdnQneuTTCttYG9m5vWbEC7mW9Ibh+YRoALT9O
      4IVfpXLy5TvpxbswXvjV6ob53k7zXlQ4dHVkPKgdz7Pk08FoIw0hgxuDY4QGG9m9vfPOl3ed
      rhEOh2leRUZ17f7lCI7rownBt75/HtPQ8XyfUMDkQE8r14dnGBhPV8Vl6mfHcM5/By2+HXP/
      zyx7nzd5GbfvOACykqVy8mVEYxdS+vizt9CaehBis+0lLHFvHgfA2PVxWHbZRxUlbur6WMxy
      7Tg1Ocrg8Cg9B55e3slTKdtUig7lUmHdGVluoZgvJbbjIaVEE4JUrsTVoWmGJ7OcvTaOdG0q
      p/6Ayqk/QHp3zKi1eE6c899Ba9uPO/j2nBdnGbzJy5h7PoO55zNorU8QOPYlrAOfw377q/hT
      V7Df/uqaylwL3JvHQQgQAvfmGzWRuZnrYynubcfFXJrx6cwdM365BxsaG0i0uOzZs/59gcSD
      XkxCUCg7aEIQDVlMpgqUiwU+n/yAk39ynI/+yEsIM0Lx//4iCA0tvgO37zjGtqMEP/W7lF/7
      HfyZGwQ+8W+h/SP3v/F1E/fm34Nbxpu6ghbftmQ2zH0/iX3m6wBYT3/hzhe+i4i24r73DQD0
      Z35p3fXxocZ3Mff+BJUTX3nUOVkV97bjcCzOvn2xBTN+2R5ASonnVsdfbxrLd5VSSgQgkfi+
      REpo90fIlX3c1CDl136H8mv/EaGZiFAT7pXvEfyx/4A3fp7SX/067vVXkZ5D+f/9O3BKOOe/
      g/XcLyN9D3fkLG7/Cdxrr+KnBsBbvjxCtwgc/SUCR38Jod/xWuk7j2GffJnAx34DrakHP9W/
      5PPOxVeonHwZPzv2sNW0ZoxdH0e6NvaF7yJiyy/8lt7cPd7k5XXL1Hceo3LyZfSdx9adVi1Y
      sh2vFAuUGunjhx9c4Vb/cHWC4ez7F6TNdwq6JkgmIkSDFsWyw55tzWxva2BMttEr+jAP/Cxa
      yx78whQyPYAINFB548vg2Ui7ALoFXgWtoRO/OI0W345z8RX8mRv4Y+8jhEbg+V8B6ePP9lF+
      88uU3/wyfmEKvzC16PNSGN3PYB37El7/yTnbN7Hzvnv89BDS97Ce+2Wc89+5cz07RuXkyzgX
      X6lCLS6FwE/3E/zYb+L2vbEwiL8X+8zXMbqexu07vuw9q8XofobAsS9hdD+zrnRqwWra8ZIm
      UKKzh0P5In2DM/iw7r2BluoBJHPzAWXb43Mv7uPmaArH9Th9ZZT49l2QOkVk19PISp7AsV/F
      PvtH4JTwU/3oO49hbHuW8uv/ee6t7jkYT/w0WuM2jOYe/PQQYu+nkXYBt/8E9gd/ihaZW71s
      PfWLALg3Xr/vs3X483fyJ/05O9d30XceI/DCr83dt4RrT0Sa8Wdu4Fx8BS2+feH6fG9kn/k6
      9tk/xjz8+UW9S/VZzSB44wfKm4XVtOOanBF2oW+S3/7Dv190rTsZI1Oo8G8++yyDkxn6RmfZ
      tz3JwGSGXKHCFz79JJ0tc9vZucPv4rz3DQg0oEXbsJ77IkJolP/+v2A9+y9xzn2LwLEvregW
      8wtTc3a+BOvIFwAWfZ5XEgBv5ib+1BXMvT+xIMdP3cLpfwtz5/P3vQGlU0QWZhaNMZyLryCd
      Is75PyP46f+K23ecwNGVxxBrcSFKz8a5/D301n3orftWdc9mcFGuBW/y8pyTYt9PLnqBVENG
      TQ7IuFfDhIBf/tmjnLk6Slsiwt+8c52Dva3kyzaWofMvfuopkvHIwv1e/0lCP/XfqZz4ypw5
      cxutdS/OuW8hGrtWlQ8tkiT44m8tunbv54V7m3pwr/4t5df+E9KzKf3FryArWQKf/V945799
      nwIIM4yIL55vNPf/DN7kZWQpjdADq8rjWhG6hXXgs+u+Z7PiF6Zx+45j7vkM9pmvr+oFshZq
      ogD3eYHk3DLJ5w9u549ffZ/f/oWPcfxcPwd7W+loXmITU83Aufw90Az8whTujdcxdr+EdeBz
      G5jnubGDfeG7c16mF3+Typv/DfutlzEaO1dO4Dbzb2V35Mxi75JiU1CTmYx7279haHQ0R9nV
      meDYgW0cP9fP4ESGRGzpzSus576I1roP67kvzg3odv3ogsuyWrjD71I5+TLu8LuLrs93u5UT
      X0FvP4R58B9hPffFNaWtt+7DOvDZDbb/tyZapAWj9+Mb9gKpSQ9g6Iv1zPMl6VyZeCzIS0/3
      MjaTY9+OFv7s+CU6mqO89HTvovuF0NCbd911pSrDlsV56j9J4IVfo3LiK4vMG6FbBF74NeYN
      GNd1N/0M6FbjQeOb9bL2X1J6DI+MAuBUSuQKK0d0+ve0167bg9uxmRxl26WjOcYb5wb4+R87
      iOdLxmZyy6ZlPf0F3Js/qP7b4C4zS1E/rNkLND48iCE8/MQOorJEJpulra0Nz/MQy0z5Dk5m
      +fXfe3Xh8z/79GEcTzIylaF/PMPv/vNPcPL8EAjBwHian3/pAAFr7c5X3/eXPRF8RaSPn+qf
      8/M/4A2/LhmrZKNlbIUyLCVjtR4hr1LgSt8I+/Y9vnYTKGAZDA5P0h5to2znGBwZp6Oj44HR
      oKHA4oXwB3rb+Oorp/nyv/5xvvrKu2SLDp88upuxmRwvHt5B0Hq4t/C63WKtj2+8jFWgokE3
      TkYxl+bm0AR7O6OM5/y1K0CitZNE67wXJMyzyfYVn2lL3InE1oSgpyPBjzy5g9/62vd5/sA2
      Oprnvl/SA6RQVJFwLM6uLo9L/aNs35WozSD4xsgsgrkZYSEE33rtPE8+1s5PH9tTC/EKxSLm
      DsmbC+SviTvDNHSEEPhSEgla/JNPHuLstdoFjSkUy1GTHiBo6YSDBqahYxgab5zrx9jgAZJC
      sRpq0go7mmNsb4tTLDsc7G2ltzPB5186UAvRCsUDqYkClG2XfMnmFz91gHevjLKttRFtiWWS
      CkWtqYkCpHIlZrMlLg/M0J5Yam2+QvFoqJkJ9AufPISUkt/4uedqIVKhWBU1WQ8wT6VSIRDY
      mLBg2LyTL5tNxlYoQ7Vk1NQVo06JVGw2lC9SUdfUVAFWMpEUilqw4iF5D8KrFLh4+Ro+kJqe
      oH9odMVnfF/yre+f55uvXeDCrcmHybNCURVWvTHWcoxPpXi8I8J4zscrO+jIhc1xK5UKuq4v
      2Prz/49O50nGgxzZ3c2fn7zJY52N991Tjf9t20bX9aqmee//nudhWdaGpV+LcmyFeprHtu2F
      66txsNy7Mdbao0FjoYVIujIemcpcTLaUknB46U2oe7tDnLo6wV+808/R/ds3zBOk6/qHwvOw
      Ehtdjq1STw8t4679bWvqBi0Wi8sqSTXY1JW+iWRshTJUS4byAinqGuUFUtQ1VeujhBArTnTN
      D442Cinlhk+2bQUZW6EMS8l4mBds1RRgNQugA4HAhvcCtehltoKMrVCGasio2iBYofgwUpMV
      YZVChr6RGbZ1JLEdh0RTU9X2KJ4cG6YiTYSdJ9DYQnZymMZEB4GwjmZFiTzE9ip3MzVyi2Cy
      h+mByyRaOxkZHmVbdzujUxm62lpwHJumpqZ1SPC5dWuQnu4kN0dmiQUEjgjgldJEEs1YmLhC
      I9EYWTmpZUhPTzKVLdEQFHh6BDs/TWNzO+PDwyS7txMUDlY0gaU//K8yOtSPNCOUs9M0tbYz
      OjJetXpKTU8wk6sQC1D1/NdkEDyVytERMemfGGMqlanqBt2FQgHP98EIUJ7tJxDvYWrgKudv
      jay78QMkG4PkK3nMUAcDVy7T83gHl66O0RTQGR4bJJVZ7/m+GsFQALuQw/M8bA98p4xmhijm
      Jjh16jwNDQ/f+AFijQ2YpoHjaXh2BiMQZ/z6JTr29HDrynVujUytq/EDxBMJNE1QKOSZGZ2o
      aj2Fw2Hy+fyG5L8mChALmQzM5mlLNBMLWvftFLceIpEwlXKFciGDCLeSmbhOJNFBb2czudL6
      T7gZnZghPZMjlxqkpbOT65cG6OxsZDxboLW5naAl1rlRo8fEyCjTJUmlUsF3yti+oJRLoVkx
      ntjXy2x6+Z3yVsPQ4CCO4+I5JVwZoJCZoKGji8FL12nu6qKzOUbJ8VdO6AEM3LqF77tEIg1Y
      Yauq9ZTL5dB1Y0Pyr8YAirpGTYQp6hqlAIq6RilATfB5+40fcGNwLnS8nMtg3zZZ06ND5F04
      9+7bXL7ax1QqtfDU4NAw4JLNrP+sZsXSqL3Aa4KGZYXoaAnw2uuvkR+doPu5F7n1D39Noq2X
      Az+6jeHBYaJNHiW3wPCNy2QcnczEEP39UUZGNZLREgeff2nRPquK9aMUoEZEGxoWutttu3dj
      2hliLZ1II4SlQe/jT6BrghIejuOQTufY9fgTQAXfLdEQNBgdn1IKUGWUF2gTMjbUB8EmOpLx
      R52VLY9SAEVdowbBirpGKYCirlEKoKhrlAIo6hqlAIq65qEUwC5kKLuQzWQAmBgdxVW+JMWH
      kEUTYWd+eAJfC5Jo7WD3jq5lH5oduEC58xjjFy/x0WPPMTQywgdnT9HU3s34TJYff+FpSoRo
      jFgbXgCFYj0sUoBgIMBswaG9tZVX/+5vaGkOc/1WAc2SfPbTH+fs+SvMpgsc7rzzmLSzSGPu
      eFPf9wgEgxSnbjAa3M97b/8tDQ0hXGsnR5/cWdOCKRSrYZEJtPfgU7zw3DO8deINIo1NPPXM
      k7Q1t9PZ3szkwABFT5KaTS1K4PKFK+w7sAczFOPIkWfwKvOLNyRGMMpTh/aidkVXbFYW9QBD
      t64xkymw98BhcCtAkJ09HWiWR6IhhJUeoHdXD9FkgmAQjG3djIyNEjUFXe1Jzr53lrbOnQTj
      MZKGidnUyNmzH+CH9z6i4ikUD2ZdoRDSznJlMMu+3d1Lfn/lwjnSeZsnjzxD0FCH4ik2HyoW
      SFHXqHkARV2jFEBR1ygFUNQ1SgEUdY1SAEVdoxRAUdcsmgjL5da3BV+12OgT5RWKeRYpQCwW
      e1T5uI/NlBfF1kWZQIq6RimAoq5RCqCoa5QCKOoapQCKuuaR7Q3qVgrc6BugOdnKdCpLV1uy
      CudtKRRr45EpgBGIoHslxqZztIdNhscGscwGEokEnufhuu6jypqijnhkClAp5vCNABFTMJ4r
      0tXRQblUQgiBrusYhtq4WrHxbMoFMblcTk2EKWpCzQbBM7NpMtnNEWqhUMxTEwUYHZ/k1eNv
      8fv/808oFEu1EKlQrIqaKMDMbJpTZ8/zr77wc0TCoVqIVChWRU3GAJPTs+i6RlO8ESFW3h1C
      jQEUtaImrpbWliZ8z8VxXUzDWJUSKBS14D4TyHcr3Ozrx7u3Y/BtspkstvdwHcYHZ3/A//mD
      76JGAIrNxH09QGZmmrLtMDE6QiqdIRyLI+wc4WiQydE8Hfv306yvXVCisRURSWHe/uxWily/
      eR3DaiRfLNLV0YpdKdPVtfymvApFtblPAYKRCN7wCPlwjObmFkBys2+IhuYEuh7mYY2XcDRB
      Mh7BA0xANwwikSY8KelojDI9O4lpRJFSqplgRc24TwFC0TiHnj666Fp7e/u6hBTTU1y+0U9j
      U9OCzWWXCuRLRdqSLaSyBbZ378B1HDUTrKgpS7pBXdelmq6hcDxJa8Kk79rQQrqBaIIn9u6h
      ubmZ3T3biUYixONxNUBW1JT7X7PS5/S7pzn8xG7yIoRWyZHKFGnvaGV6JkNLPMJw3wBmWxta
      scj23h70FRqtXS4Rauxi1y5bxV8rNhX3tcfc1DC+9OgfnGBscopIWMeTGmffu4SdyzI8PUtn
      WwuxWIip8TGKziqkSI+JkSFGx2dQRwUoNhP3TYTZto1pmlRKBTACBESZ60M5ere3kMoUiDdE
      MXRBKpPHsW1aW5Mrmi3F9DQXbw6xo6eXZKKRlawcNRGmqBUqGlRR1yiTXFHXKAVQ1DWPzNnu
      O2Wu9o+SjAUYmkjT2dmKXSrTvW3p45YUio3gkSmAZgaJR0OUHIf2eJSZ2Sk1E6yoOY9wV4gi
      s7OztLW1kcmX2dG9A9d11UywoqYoL5CirlGDYEVdoxRAUdcoBVDUNUoBFHVNXblaXM9jOlPi
      5sgs/eMZGiMB2poitDdFiUeDREIW2hrDsX1fYrseAVNfcyj3vP9h/jkpJYWyw9BkhhsjswxP
      5gCJps29p6Ihi96OODva47Q0hrHMtS3Nk1KSK1a42D/FTKZE2XYpVhw8X9IaD9OVbKC7pYFI
      yETXBJqmoWti2XJJKak4HvmSzfhMnuHpLL4viYUDxKMBoiGLSNBC1+fSMXWNcNB8qHrypUQI
      sebf50FpOq736L1AudQUAxNputuT2LZNMpkkn88veIGuDU3jepKgZRAJmTiOz9BkhrHZPGMz
      eYKWQWsiTHsiSlNDiELZIZ0vkymUyeQr5Es2hbJDxXEpl2waDdiRsOhtNMh7MFHwmMw7pIou
      ZTRa4hG6kg0kG8NUHJeK42E7HkHLINEQIh4JEA6a3BpLc2VwmrHJLDo+nqYTsAxi4QChgIFl
      6FiGjq4LihWXTL5MyXaxHQ/P8/F9H+n5c0qgzf2ohqZh4tMRs+iJB9gWEeiaxPMlCEnOFdzK
      +fRNFSl4AjNg0dIYpru1gR1tjYSs5d9nw1M5Tl0eIZcrcLCzgY5EkKCpEwwYGLpgIlNhNF1m
      NFWm6Ep85pTb8yW6LrAMHdPQMA0dx/Wo2B627SB8n8aARlssQEdUxzAN8q4kU3LI25JixcX1
      wfXB8SWOhEjIoi0RoTEapGy7C+lJ5qpiXmEyhQrFskOx4swpgQ/zL4R71UDTBKahoWsalqkT
      CpjEo0EaIwEMXaNUcSiUHAoVh2y+TK5og+c+egUYHhrCkjBdymKaDTzWu22RG/SvvvbvmZqe
      pSQDlGQAQ3i06zO0WkVaw1DyYLYEs06EtIwSEhUaRYGI6RIL6kQNiaX5mMIjJFxcp4ztuNia
      gSZ9dCmxDA3dMACLnGswmoO8NDClhyk8TAEVKcjJEGk/QlkG6NKn6Q2UaAp4mJoHRoCyMClj
      YmsmjuPhOB6ephMSPrGAwMLHxENzXYTnInwfpERoGhLwpURKB88p40gPVzdwNQNfaPiahpCS
      gO8SNDR0M0DFNUiXYbRkMCHj2NJctp4TWo6D0TwJ08Z2yzi+xEPgaTq+0DA1COgCU9PRdAMh
      7ljHng+uC54UeJ5ER2JqEkPzQfp4bgXXdXEl+EKApiEMHUPX0AFNCAQCDQ00i6KrkbYFuYqP
      JcCUHpaYe8NLXceT4AuNSFAjqPtYmotmgEBDaDpS6AgJaDpCn8un50lcwHNdbE9ScqBgC7Il
      D9/zCWoQMiGkSaKWJKR7aGITKEA2NTUXCtGexK5USCaTZLNZLMtC13XOXH4Vu5RBCIHw5yqh
      oAdwNRNHzH02pYflu1iei4vA0Q08IfGEjo/EFwIfDQ+BIwQSFynnViYIoXO7ajF9DxMfy3du
      D44k/u3/BAKduR/fkC4VYWELgS00PCSa9BFIdOnd/qkl4vb6Nyk9PJh7q+IjECD0hXQXhmKC
      ufwLDfe2/MUIhNDRhI4uwZI+lnQxpU/At2+bB2Lhublfdq6cjtAoCp2S0KgA8q605xr7XNpC
      SvTbqczXjyZ9NCSa5HaZxO06FXiAJ+b+SundZd6IO0okQcNHkz6G9DGkh4F88PpyKfGEhis0
      XGHiidt1Kn3AQ5PewvNS+gv5Bx0NMad4+HNyJEgh8G/f6wkDVwjcufLeUYDNckxqsVgkHA4/
      6mwo6gB1TKqirlFuUEVdoxRAUdcoBVDUNUoBFHWNUgBFXfPIFMCzS1y7do1cLsvN/mGKxSLZ
      bIZNuDxBsYV5dEsijQDYOfqGdZIhg/6hfiwrRjQaU0siFTXjkSmAXS7gCR1TSCayeTrbk+qY
      VEXNeeShEEuhlkQqakXNxgCZbI5SuVIrcQrFqqiJAmSyOU788D2+9r+/TbmilECxeaiJAvQN
      DPN3r5/gZz/zkrLtFZuKmowBhkbGcT2Xndu61DGpik1FTV7H27rWd8SSQrFR1DJeyxgAAAGK
      SURBVGwQfOG943z7j/6K4uZzOinqmJopQCwSpyjLWLc/e06Za9eukk6nuXFrkEKhQDqTVjPB
      ippSsxFpKNpEU9TCuS1U000ao0FGxmdoCpkMDA9gWTEaYg1qJlhRM+5TgPzECNemJmluaKOp
      pZl8Lkt7a5IbF8/SsusQopRC6kGkUyIYjVPIpIglmijn04xNpelMJjAjjYQDdxZol3Ip+vqH
      iCeTCwLt3AyDE1nammJMZPJ0dqiZYEXtub+V+RLNCOBkprhRKhOUDu2tCWYyeeyBQaLeBIWG
      vYScHFMjN/Gj3Vzve4+9e/diGToT46OEmyDc3rKQZCAcoy3ZyKVrE3eOSW1s5ZmPtAKwvRYl
      VSiW4L4xQDARJ6SZdOzspTUMwxOz4HkcOnKMnu1tJLftobcjTrmYp2P3k4Q1hwOHDpCIxwgE
      LBrjCRpi0UVpSqDieqTGxvFrVTKFYhXUZB6glEvx3vlLpGZy/NhPforACnMBah5AUStq4gWS
      ngdo7Dl4kOW3blIoas//BzY+EYtVckWGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Carrier Name' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAKaElEQVR4nO3dyW8b9xnG8WdIijuphRQpyoplKXsXpClqO22RHIrmkkOBngr0vyvaXHIq
      ih7aY3IICgRItyx2He2UaFELlxlyFs7MrwfbahNJwUzo4ZB6nw/gg2V5+GrM75C0XlCaUkqB
      SKhE3AMQxYkBkGgMgKbW44NtfPZw69LHO53O1z9v9xH2j8/QPDoMfRsaXwPQtPrwow/xztvv
      4C9/fB/FxRV4xVtwTrdRqd/B8fY/kVmqw/aKuJ3zcZwCso6BLz7fwmtvvolhp4NMroT2/pfY
      +PEvcPf7m1feRmrCXxNRYPXFMj57+Ajp4iKSro31zQ30C4Dm+ViqraK+WoOjVZEZniKdBfa2
      T9FYuwWVKuCFtSKU7yGhNvBCfena2xj7EUApBU3TxjkEUWzGfg1gGMbzmIMoFnwRTFOh2+tC
      KRu6bgMAhsMhbNv+2ufoug6lFJrNJlx7CMf738c9x4Tt+lceW9f1a2+XrwFoKvR7PZRLKezv
      tOAqG9V6Be3mPubn5/Fg/wQ/2GxAtxVe31xB+/EpsnNJ9Jwz5DN5wHMw52lo9nwMex0kYUIf
      pQG7jx/d+xkMQ0eruY9UNgfLdPDSK68gnXpy7ecjAE2FxVIeX36+jXxlARtrq4CmYXl5GYlU
      Bi9u3IbyfWSzWXQ7OgrlLPpdHalMAY1aBabRw1lPR2Iui/W1BnKleaw16pgv5mGaI2QyGVTr
      qyjlM0hogGmaF7c79ovgfr+PUqk09gkgisNzeQrEF8I0q8YOQNM0PgLQzOJrABKNAZBoDIBE
      YwAkGgMg0RgAiRbZKsQnDw7x5d5pVIcP7NXbVdx//VbcY9CUiiyAf3x1jD9//J+oDh/Ye2+9
      xADoWnwKRKIFCkD5LnZ3d2GZA+w1W7BtG8PhMOrZiCIX6CmQ57rIpTV0DBeebWJ35xHS+SWs
      r2Xh+z5c1730d5R/9W72pPm+unI+IiBgAM6gi+3DDqrlAcxRCpXKEizThpZIIJFIIJW6fBgt
      MR3PrhIJ7cr5iICAAeQXV/DTuytRz0I0cdNxmSaKCQMg0RgAicYASDQGQKIxABKNAZBoDIBE
      YwAkGgMg0RgAiRYoAN9zsbuzA8scoNlqw7IsDAaDqGcjilygZTjf85DLJPBop4WFXAo7u21k
      8xWs53Jch6aZFnAduoOdow5qSyWc9geo1ypch6YbIfA69Fs/4To03TzTcZkmigkDINEYAInG
      AEg0BkCiMQASjQGQaAyARGMAJBoDINEYAIkW+N2hT87OYQ917DVbT9eh+cOxafYFWoZTvo/h
      0IQz6OL0bADbOMNcvoL1XJ7r0DTTAr49+giPjw6xMF8GPA/5hTpGXIemGyDQPWMuW8D9+/ei
      noVo4qbjMk0UEwZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEi3wu0O3T8/gOiZ2
      9pswTROGwXVomn3B1iSVgmXZ2D8/hpsqoLm7hVSxgnye69A02wKuQztoHTZRry1j2OlgqbEC
      z+Y6NM2+8OvQG1GOQzRZ03GZJooJAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJ
      FnAdeoTjk1MopXB83IZpmtB1PerZiCIXeE3SsR0Y3VMcHZ+hf95GqlhBoVDgOjTNtGDr0CMH
      raMmRtUKLKOL5TubcB2L69A08wKvQ9+792QdenPzxUgHIpqk6bhME8WEAZBoDIBEYwAkGgMg
      0RgAicYASDQGQKIxABLtygBGtom+MYSa9DREE3ZlAP/69CN88Ls/wZr0NEQTduUuUK22hlJ9
      hLmnv/fdEdrnPSwU0jg86aFRq8DzXJRK5QmOSvT8XRlAJltEOZuG9+wTNA0jx0FyoYiE8tDc
      28JcsYpCoch1aJpplwIYdNr49xcPMLBHFx/zRjZaR4cwjS5GKo2lSg2OyXeHptl36Z5RWKxh
      oZTCw8+aFy+Cn6xD353waETRuxSA0TmBylTx7q82kYljIqIJuvQ8JVsoIuEY+NvHn8CJYyKi
      Cbr0COCOXKy/+kO8ef/n0OKYKGZ+rwmo+L8DopXq0JLpuMe48S4FkC2UkI1jkikx+P2vgZEZ
      9xjI//YDJOvfi3uMG286/quGKCYMgERjACQaAyDRGACJxgBINAZAogV7b1DHxF7rDJXiHA5P
      DTTqFTiOg3qtFvV8RJEKFEAynUMunYJuOqjk0zhq7SNfWIbv+1yHjojn+1AzOPesCRTAyBqg
      3T5GbXkZnYGFtdV12LbDdegIJRMJJGdw7lkT+N2h33jjDQBAI9JxiCZrOi7TRDFhACQaAyDR
      GACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRQgUw7HewtXuAwWCIXq8X1UxEExNq3bDb66Lb
      MeCaXaSLVZRKJa5DR4Tr0JMRKgBN05ACUK7WMeK7Q0eK69CTEeoMN9buoLEW1ShEkzcdl2mi
      mDAAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGihAnBM/ek69ADdXjeqmYgmJtQy
      XPPgAJ6WQ3N/G+liFeVSmevQEeE69GSECmBhcRGHrTNUVlbg2VyHjhLXoScj1BleWm5gaZnv
      D003x3RcpoliwgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxu+13wCjoyOYn/497jGQLJdR
      eOftuMcIhQHcAM7eHrp/eD/uMTB3Z33mAgj1FEgphYODJgxjgG6X69A0+0I9AvTO2+j0h7CM
      DlLFKsplrkNHJcw6tO9Nx7mGwsyd61ABuK4L0+hi+c4mXMfiOnSEwqxDJ5LTca6hYebOdahp
      q/VbqNZvRTUL0cTNVq50o/z10QMcxvyThhgAxeag28Wjs5NYZ5iSJ49E8WAAJBoDINEYAInG
      AEg0BkCiMQASjQGQaAyARAsVgNE7x8OvdqAbBjqdTlQzEU1MqFWIfLGITMdA62AHc8Uq5ud9
      rkNHRMI6tFIqwmGCCRVAq3kAy9GwtNyAY/HdoaMkYR1a07QIhwkm1D3j1vqLUc1BFIspuXQQ
      xYMBkGgMgERjACQaAyDRGACJxgBINAZAojEAEi3Ud4LP20c4PDWwWq/AdhysNvgzg2m2hXoE
      GDoeaqUcHrcPYY2iGolockIFsFgqoDfycXttAwvFDOLf5SMaT6inQIX5Jbwyv3Txe9/34Xke
      dF2/9LkvrxTw3t3bYw2nlBp7Y/DlRunK+a47tv3abwBvvIc3BWDcPUffzyLxjbmfrQ9/c25n
      fh7au78c8xbHpxYXQ53rl0plLCbH3NRVChjjPqKpMZeydV1HqVQa5xDXeh4BXMfzPCSTyed+
      3OvupM/r2EopJCJYNZ/Fcw2MP/fE/xfI9xwYAwuW9eSXaw+xvXsA/+kdx7Ksi8/9+hem0O/r
      MPp9jEYOXNeHZVk4eXyIbr8PfWCGmuO73Im8kQXDdK78M9ceYmi70DTtYu7e+Qken5xfzP//
      X9t3dd0/tjeyMBjaV/6Z7Vz9cQAw9D489W3HtXF6/uSHoTjWADt7zSv/rb7NdznXptGH412+
      Niv15H7w7Lafze17Dra2duD54Wb7LyOwTbJ8t95PAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Month' width='192'>
      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
      VMaG+x98iP8PHbbi8q0aSWEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delays, Cancellations and Divertions' width='192'>
      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
      FN+ZdQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map Airports' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Small/Big' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aZBe2XmY99x9+/al92409gFAzAZyhjNDiiNTlC1ZSiTLcmQ7jlRJRMey
      41LK8Q8nlSpVqpJy4nJJRdmMxcSxY8miaIr2UCRFiuRohuSMZl8ADPat9+3rb1/ufm9+9KCB
      RjfQDaDRGAL3+dHV9373nPOec897z/ue895zhTiOYxISHlLE+y1AQsL9JFGAhIeaRAESHmrW
      KMAf/Zsv8qUvfYlvvPgqr37r95lowBtvvrku0Ytf+30WnGvHJ46fWPP7F3/7f+P3/tX/xde/
      98q6tO+8+DVOX5/4Nvg3X/xtfu/3/hVf+fr3uNFxCToVTl+e2zBdZ/EiL711BoB3f/BnzLcd
      3nzznS2X25h4h2+9eprzx9+gcQvRG3OXmap0AHjzzTe2nH/C/UP6rd/6rd+6evDGO8f59V//
      dQ7uGWP6wgkyY48RdqsM9Pdz6p1X+cZ3XgLFxKnOcGlmjnffP0d/Gn77C19kZrHJY08cRQSO
      nz7P5z//d7ny1nfxC/toT5/iP33zewzv3kdr/iJK3wEWz77On/zp90iVhpm5cIb8wDDVybM0
      Q5Ufffs/8cbxczxy5DCv/vAHjI+PA/DO8dN8/vOfp3PlLab9As3J46t5nPjB1/nyN17GSOdx
      lid44ZvfQc/1U85nUK003//TP+XYsSf49p//iE9/8hPUqhVSqsAf/dFXWGyHZIQuzdgirE2x
      5ChMn3lzNW8rbjHdVui3RNLlAb71lf+XH732Fkq6zPSZt/jT771MaXic7371/+G7r50kW+pH
      EyP6+wd4+5Xv8d0fvsXufQc4d+p9Tr79BscvznNo/+77c8cT1rBmBGgtTfKlL32JF1+99nQ8
      cfIkXnOaP39vhl/71b/OO6+9AcTsPnyMvDeJkz3AM598hs//138T+YbMjzyyj+npSb78lW9x
      +OA4X/7KH6/+Vugb4vFHD/P1F16goDv84K3zvPzKW2TjGq+dnmbv+BgC8JnPfGad0EeOPMLU
      9PSaPJ771HN8+nM/z2eefoxceYAnHjvKn7zwwkoCQSGlhLTaFWSrhACcPHmCD974Aa5WYKiv
      QGX6AvMNh8b8FaYrnTV5X+XKmRN0AvjFX/lV8pbB2MgAfUO7ePTwPl544et8+rnn+Jlf/Fsc
      O7yHkydP0Jo9xQeLIr/8c8/zx197gRPvv8fRZ/4SvbkJ7mwMTNhu1ihApm8Xn//85/nsc8fW
      XhX6SJqOb3cJopVkAwN9aLpCHIPrdPHD6IYkDt/54ds8emgXrusiKgafePKx1d+//OU/xPM8
      wjhm9GPPsXjmZTByaFaRv/ff/G0uvfMSF5d66wSOQp9vfOeHPPnooTV5iKJEu90hiiL+6A9X
      zkfRNUPpJz5+kH/5L/4tTzz3E6vnDnziJ/nZTz/B1//k6wiCgGPbLC1V1sl3I9/75n/k6c/9
      5+TMiC//4VfxvIA4jhBFkU6nTRRF69IQA4rBQDGLoWk3uR0JO80aEwhgcHBw9f9scQBdhuHx
      R6A5xWvHz+A48PFjR8mXB1BFyJeH6E8LfP3F13ny6CEAJs+9z1+8c4rP/MwvMt5fYnQgwxvv
      HGd070EGy3nS+TIZyWFiqcfjjx5hZGiQubPvcegnfp6CAd//zreRinv41LFD/Og6E2hp8hwv
      /8U7HPvMz3B4vB857K3msWvfI8ycep26r7FnIMPF2TqPP3aU0eGV+mTKg8zNVnj+2ScQPqyf
      pcR8+7t/zpPPPs/Ro4d55bvfQEqX2LtvP0UtuE6+AWQ9TTFrki/nePtHb3D27AdglOmzIpZ6
      Ao8eOcDBI4/y7g+/g5Dqoy+fZmz/UYLaJV5+8wy/9Eu/iKZIDPT3A1Ae6E9mID4CCFtbCLP5
      /d/7fVqex0/+3F/n8O6BbRVi7vJpXnznMn/nl39uW/NNSNiMLSpAQsKDSTIKJzzUJAqQ8FCT
      KEDCQ83q1H2tVrufcvxYYhgGtm3fbzES7oJkBEh4qEkUIOGh5poCBF2uTC0yd+UC3eD6S3x6
      PX/1qNusU2226fV6NJuttbmFDlOzS7Tqyzh+CECz2QSg17u2qtv68FyzWiPg9ria3/Vcn/dG
      OM7awINa9aq559JsugBU79IErC3Pcubc5Lo2qSzOMTu/uOZc0K3yYbFr6PV6EAU47satcn17
      XV/nbrO5aTuu3K/1bXe7rNbPbVJd21HW94d1aW9WfkB9uUq70WCpVmFqZvEm193+vb6+jIvn
      LmDf0Lar6wC1xSucnuhg+cv46SJ+10YRXFBUfN9ktKyxWK/RtmFsdIjawgyyZuLYDooc0nZl
      Do6mmapLlKQ6y2GGqLGMWsoSOQGB22X3gcMszkxAHDI1s0R//wiWFTOz2GZ8uETkOVxeaPHs
      U0d557VXSWWHSBcNJs5d5sCjT+K1K9iBgGVoBJ0aVxbqPH7sKWYvn8Ww0jh+yIHxAV77izcp
      ju2jaMVUmhKFFES+jxfBlZlFDu3dRTlncml+gaAXU+902D0+TKsyB1oaQ1Uo9I+QNm6MblrL
      Wh+gx8K8T6+ziKJKTEzOc/jxY/i9Jq7r4rRrRKqJEIpYiktXKiA4bVRLxVIUzpy9RHl0iKG8
      xWzFRRccItWCMGT/UJqTM03UUMBMy3RtH/weu/Ye4sq546hGnsDz0LMmju2TNyWadoAuSSw0
      uzzxyB7OX5nGVAUkSWByapHDjx+jMXcRB42sodB1PKotm5FSCkEUmVyos6s/jxtHLM/MMX74
      cSK7TteFZmWK/v5+PCnN1JUrHHxkL7IgIBLTqtVBV6g2HLSwjZktsbjcZNdwEScQKGUM6rUq
      nmhAFHJgVx/np5bQ/ABXUTHUgE4PqkuLlAcHyeoiFybnGBoeIQh8pNBjcNdeagszKIrC2Usz
      7NszTBzESKk0UWuBK/MNhoZHyOgSF6aXefapxxHwOfPBRcy0Sc/xsVQoDIxeF78magwWY+LY
      QJAlWoJERs+CotHr2BipFFKrx/iuMrm0iRSVcUOJgb4yPaeLGYgYKYtRTQFXJG8HnKo1eeLA
      XlSg11l5Ohi6jqDq7BJVzFQWSYoYGjCw2036R3cxgkYcQ//wLjTNothfILI9TE1B8nXEWAa/
      h54tMSabaLJIuVwGUUb2Q0BidNc4ejZPOSNjZRQi38Z2bHKGSoREKpVCVFU0SaHQn8HKpkml
      UkhRH5KmU602N+3861FIpUQy2RGIQ+JYwtBk5EDGC2JKfYNEsobbbpLO5DEFlU47JmupeH7E
      rvExMvk8EDJYNml12vSXiojCinKBTN9gAVHwESQfQ06BAOX+QRB1MpZOz3eQJR9ZkSjroFsm
      qE0U3SSXSZHP5yEOAQVDk4nyRVKSjhiHFAoqRqpHKZ8l8l1CUaPXXCLUcozsGiNlaPixAbKA
      pe3Cskz8WGF8bBjRt5FzAxh4dB2fTEpDVVMoZJBVA0Uz0XURKZZJpUzqbZuhchlJAEFWMRSJ
      VDaLZJikDJGeAyldwczmKWYM3FAgmy+gKRKe3UVAIJVK4UcwPjZMvlhGBhTTpKcKjEkW2XyB
      rKli+wKO42DoCrv27CYKbMS2SzGfwTS060aAZBbotklmgX78WfUB6stLq3Z7p92h02nfPJXf
      o+evt8euP/Z9/8ZUEPqrZdxIp1mn1rxW5vV53VKW6673e21q7R7tTodqZYkgDpmZnKTTc9fm
      6fdoOxvLsab8KKDTaLDJpbfO4xbc3F69e66WfbWMG2W5VdlX7906+UOH3hYb42r7+UG0aTvc
      WO4t87wJrUaVjr32Prc7nU3LXB3nF5cWMXsOiAqqJBB6HRaXKsiqiRz7GOk0M5fPkcoPIPgt
      0iNH6czPohoGmqojGxkCp4cmRbz+9mn6+rOkTYtLV2b4xDOf5NIH75ArlnFiHUsJ6XQcVE1B
      UyTOTy4wmDew/RAYQwhsFqotlLBHpOfJqCEfHD/B2IHDGArk0yavv/42o3v3YdsOaU2i40cM
      WiZ1z8MURYTIobos4fkBCAKVxTkaHR+vvUQqnUKw+jkxcZlHDu5BQiSXz1Gv1+l2OljpNMtL
      c2SzGbxOQNjrMTu7xLOfePymDTk3eZGldoQp9FBTRSJBRAx6KGaWjC7TckK61Vk0M0ukpRCc
      Bka6yNSls4ipLLEns2csx3y1QxwK+G6dXqSzqy+7mtbK5Gg7AUMju1mYOE2+WOb8hQkGBwt0
      XJHdg0U63Q6CkcauL6Gn8siRw6wDkugjySYDBZM3j5/nkQO7qS8vEggSrhOQMmW8UCL2u9iO
      z9DoOK3aIhVRx20uoqdLBH6LdGk/jeUZNN3g7MUpDh7YgxjD0sIMhVKZC5dm2Lt3mHbHZ6Sk
      MlkVkIIa6VSGy1cm+diTT9NcnMLxQ1KmQc9zEcIV86VRrXHoyBGmr5xHEWXShSz1bojfbaJo
      Bvg2qmkyfWWCvpFxLMNAFUOWmz1iv8fgWIrZ6QmCIGRuboHcwCj93QbTVZuxwSJBt8VCN+bo
      wWsvI62GQwdRDKFPGIsYuoZIiBtEZE0NH/B8UGWRVMrE9wOsXInQbiOqJs16ncHBPhq1Cp2u
      gyLJZEp54jDCTKXJZjP0ul1UCXzRZKQvS73ZwcpkUcWYIIKB/n6yKZNIkCDw8SMwdJVMJkfs
      9pBUlUw2S6PlkFIFvDBAMvIUMjqe6yBIKmldw7A02u0OPTtEEkEQQFJUIs8lFiQ0VSGbSWN7
      MZookLUUOpECgYcpgx0EeKFMIZ9FFgKCUEJUZdKWSTaTXtPpFUUhCFZmFWzHxkxlII6QRYFI
      kCjk86iKjCjEuEGMQIwsQGloBE2REeIYBMhk06RTBQzLoFGvAyG6qpHKZFAlVtOqUky+bxBi
      CSly6TkBmWwWTVNJpzPkswb1jkfo+eTzeVRZIvRdvFAgV8ihqwqB7xOFMZplYOgmhD5+GKPI
      ImEsksvlMDUFUdVQVRVdU/F9H0mIiRCw0nkCp4MfRMiihCwLtLsuKV3C9mMy2SySCAgSpWKe
      Ts+jVCogRgGiZlHIZ5FkBcuyIPRwgxDLSmM7HmldJZXNIcsyYuyxvFxHSeUpZixMXSPwPURJ
      QlYNLCtFf18Rx+7Rc33KfWUyKYtmo44syyhGmpRlIMQRgigRe13MwgCtZp1MOoUsrzz7t8EH
      CGm1HDIZ6w7Tb51ep4VqppFFYfOLt0i71SKVtggCAUW5vWWRB8EH8H0fRVHutxj3nFarRSaT
      WXd+0zvu+/4mNpy02vm3Yus5jrOprbfyVLp2/dV8zVQGOQ7YyI3YSM6b2YBXy/d9n3QmgyBI
      KGLA/FKFbquFu/La22p+m8oLNGvLzC8ub3rdRtxMztB36Dn+Gtu702mvqedG7dnr9SAOWKrU
      1tj6vV6PKHBX6wfctPN32mtlulkbbN4/rnEvfB7f99f5JhvJen3nv/731RHg0sWzdOwAwXeY
      nKuye6xEoxMQ+h7pjIkg6XSWZzCsHIKVY6xo8Prbp9m7bxTbCdGkED+SyVsSS50Qtz6Hni4h
      KCpZy0AQYpq1GlauQHVxjlx5EEOVMBSJuVoHDR8UFbvVRpMCulo/qlPDyhXpNauoqTS6bNCr
      XqFrjmDPX8DKlYhknT2DxdV5bt20mLoywb6PPYnXa1JbmCZVHGR+apKh0VEQZZqNBo8c3MPZ
      81co5VMEKBRVj1lXJxN0Cc0creoyprUybWq36uw+cBhdkdY06vUjwMLsFKgWXqeBpkq0IpOx
      vMLbx8+w7+BBZEli+uJpcv278d0OkqJhqgJeLKPgMTU5w76PPUkxY1CvLdGxA9TAo+ZH9GUV
      Fio2w2O7cTrLyIpK6Nk4oUhKFZhbqmOoMb5oYIigWmksKaLhxaQ1Fdduky4O4PbaZHWB2VaE
      2+2g4dCONGK7ycGPPcHE+ZOrfsXo7nG85hKRYiELIq7nMLJrN+3KDK1Awe/UOPixx7h09hSm
      lSZEIrLrRHqevqyOE4pUZy+TyQ2AqRO0Gli5ItW5CfRMliA22L97iHajvuq31Gcuo+eHyOoC
      oagwe/ksuYHdBI7N7v3jnD5+nHK5zMR8jYIeIab6UKIe6bTB/FKXYi7LxNwCxZTC4K69tKsL
      dGyPdNqi23WQhRhf0vA71+7nqg8wNz2DJMQoZgrDMBFFkBQdS5WxsnlMTSWOY9KWRbbcT2B3
      CIMII58no2u4jo2kGqRTFrVGk5S58r8XRES+jRuwMg9NjCpLpAyFejcmrUt0HB+JECSJXK6M
      roAfSRRyGSAmDgNERaXTqKGnUsSCgqaI5PIFOu0O/QP92N0O+WIJVYyJRY1CIU8chQgImJqK
      KIvo6SKO45DSFDLFEq7dRZJEIiRKuRSymUVwu7jIdJtNiv0DWJqKLAroVhpZWjtgXu8DRDEU
      C/kVG1QSyZaHkSIXZA1T04hDh0hUiFEpl3KYpk6v20aUNHRVQJANDFVC0U2a1SqSEKOZFqph
      IBCTL5URQoE46NLquWQyGXRNI0ZEIkbRNDKZNJ7tYVoWvudgd7qIuoFpmmRSFo1aBd/3CSSL
      YsYkjmNSmQxi4CCb+TV+hWEYiCJkMmlc1yeTSaNqOp5jI8kyqhAgmwVkAlQzQ9rSieOYTCaH
      REQQxxCLSHFM3+gwiiQDMQKQyaRIZct4Toe0pa36LZoqk8nlIfKJ45BYlIljlcFSFknXcNsN
      AlEnm82gKhKZbB5LV4mAXKlEp9lBVmUKuTSqZiLJMinLQhZjeo6HYVn0bJt82lq9n/dtHaDb
      bqGnMkjbZ85vG77bY7nZY7CvdMvr7tYHuNH+fljs8at8FOq75pF21TYKXI9bzfbOz0zRaHXX
      nFtnd304Bwzget66PKz09nT+68vdiq0OEb5/68gZRTNXO//W8rw5t0qvyBK1Wn31uqudwfM2
      CBTaJm5ly19P6LssLte2XP9Oq06rY+O6Lr7v37QOoe+v9q276fxX8+91u2ywB8eWWV0HqCzO
      0XNDFAGkSEApZXDaLpmUAaHLcstjfHRlh4VWq4kdigSejSRE2L6A3aqSyuZZrjU4fGA3UxMX
      kawhiBwkERQhRpQUNNOg3e6iaDpZU2F2sU7WlAmQsB2P0eF+5qankaKIrpZlJKuxWG8zOjTA
      9MQlrEyRbrdLLmvRdUPwbTKFPgK7zUK1xVB/GQip19vopo7v9NDMFJ1Wg0LfKGkTlmaXyPdl
      6NgujuOT0SVCScdSBapNG1UMiESN2OvhCyqjQ/2bNmSjVqHjROTSKxMC9eo8ITKCqAIx+ayJ
      7QuEdpu+4REWpqdQRJ8GeXSlwZW5CiPlPL6gEDhtfC/EyhXRZIFOs0660E8UuriOi67JNOot
      dNMijiNs22ZgeJT64iySquN4Idm0AUCzXiWdLdDu2uhSTMv2GcoZ1AIJt9tjpL/A2UuTZAwF
      LZUj9nuk8300a8v09fczdeUymVKJyPWw/YiULiJpFp16Fd206PQcRsdGaba7xHRJWSnqy0t0
      vYiR/iKhpOG0GuiWDpKOEXh0VIleo0dgtyiU++naLpYm4oVgOz6lnIntBiwuVugb6EeOA0JJ
      w23XSOeKNJttZE1meGCQVn2RrtuHEDTpeTKq4CEbKex2EzOVxXV61JptPnb4kQ3v26oPMDVx
      BRGf85emscwUjt9lYmqetAaxrHHl0hUKfSVUWUYQJEQR4ijEtW26jke+UEAURALPIa3K1O0u
      rUaXxVqdQjbNwuwkDirNahVThUrTRhcDPjh1kVx/GcFpc2l6kZGhIqc++ADDyIKmg9Pk1MUp
      9uwaZWFulm67yez8MoIQMbdQRYw9jFSWbruBH0KvXafrOFhmljD0UDSDsNek67kgp7Ebi/hu
      wOLSAugZ0prEzMQlPFREv8vZKzMM9JURBGg3VxZgMunUho13vQ/Q7TookkB1eZGu45NOm2iq
      QrPuEAceteYy7V5ALpsibcjMLdTR5IhUaQy3XcXxAprL8/QCETXuMTExiZ4t02x3sJsVUFNE
      TotGs0scOJy9OIliWJQsiRPnLtE/MEK9uoDn2FyamUcTQhpdh/byAs2OTaXeRpMEkBVMMaYR
      CqR1hVQ6szI3nsshCD7nTp0jVehDjF3ato9lWQixT6vaJNZ06gvTdGybIBJoNlrI+GjZMp3q
      Al4kMjQ4QBSBrilUl+aodjzymRRzU5fxUMlqCu0oxlIVZFGg1awzvVAlV8ghSzKaotCsLjKz
      3Caf0kGScXsd3CAinUphNypcunwZLd9HKa0xOb1EGIfIUQ8lNUCnWSEOHTpOjNNpM7h7nF6r
      gWlaq3P/17OpD7C8vEypdHNbuFGt4CHTV8zf9JpVQp/lZo9SIbv5tRvQ6/UwTfP2E4Y+UzNz
      9A2Not/mXP+tuNfrAHa3SSQaWIZ6z8q4M0JmpmbI9w1h6R8tn+V2+8g1BVhewo9EFFnEcz1U
      7daNftVmvV1HZqvX306+3W4XWVHQ1K3JfGtCfB+UG6Y8N+J6BXA9jzAI0BUZNxYw1PXl9Dot
      BMVEFKJNZb0mjo+PwjVxIjw3RNU+Wh0PIPB9REVZt7jU7XZRFBlVvfmOeFfvTRT4RKKCLO6M
      k3xtTAi7zC5FFLMK3XZnJV5GELAsi26rQdsNweshGymcdgvZsOjUK8iaSYxIqZCm64akDA1B
      EJifmaLYN0Cna2NqEm4kIoUubiwTe50Vu7TVom9olF6jgi8ohE6HdL4P/B4L1Ra5lIqkqIiC
      gkCEG4b4fsTIUI7ZyRpu5LFr9y4WZiaJ9SzFlIIbSqRMjcBzaPc8TE2i3bUx01may/MU+wbp
      drqkUgaIGjIeti/g202MVI52awnDGqGvdHsjTaNeJ+jWcZQcGi6CYqAJIYqqsFxvMzi6i6mp
      STKFAQR8GtUq/YPDuH6EGLkEKGhShI+M4NsoVpZ2bZGcpTLdXLGnez2b4cEC1UoFLwxJp3Wi
      SGB+scIj+8Y5d2mS8bERXNdFFiJqrR6jY2M4vS5x4NFo98hkUtheiBA4IMooukkhm6bT6eK6
      Drqu0WrUyRYHcDt1IkGi03XIpFS6TsRQX5ap+TrFjEbPF8DvYWWLLExfwdAt7Cimr5il5/rU
      FhbYe+gIc1MTyKkcBUvDR0BBJBIioljCCwKkyMOPRFKWiYlHzyzh15Zp1qvky/3Y7TZGKoVj
      t2m0AsZG+lb75t2y6gNcunAO249YWqqQMg1Cv4ePgiQILC/MMjVfpVwqIQRdmp0Qw9BQZZEA
      mYJlMLcwQ73tIfld1HQRIfTotZtMziyR7SuhCgLtVnMljkNXCVybjh8gSRrddh3Hs3F7PoIk
      4bld/BACzyaIZRqNKp3uioOlSAKmKTM/06C/mCY2TWQEKovzyJKI7QZ4nTq2FzA1vUC2r4Sh
      qYjE2L0OdrvF1NwCRrrIQDnP/PQVZipNyuUiQbdOJwRDy2CZmz95rvcBcHt0JQO7WSOby6OI
      IlcunkEUBTLlPnxfxjRVZBHCKEYWBeq1Zaotm1wmg0CIKCtI4orvEcQClq4iEWHl80xfmaHa
      bDE6VKY6t8jE5GVEw6LnhGhSTLGvn3azTmC36douTiCA30VKFegsz+K4PpcnpyCOmV+sUsjn
      ibwOtbZHytRwui0ajSZeHHDx7EWypX7sTp3A87h47hLpgQFMScDQZE6fvoDndWn1PBanr6Bn
      S+gyxLFEIWUwX6swP1+jlLNIZ/OIksTSwjzdVo1eINPtNOl1exDaTMxUKBXyELr0vIi0KjC5
      1EQRIwLPJfJ6nL88g6xb7BobolVvEfkdJCOHrt7uOxvruakPUFteJptN4UYKpra5OXCVzXyG
      jahWFkA2KebXx2p8lLlXPsDC3DRmprQyA7cN3OqexKFLzxc/crb8rbiTPnYzkhdi7oIHIRju
      YWd1DGm1WgSejWbl6DTrZLMpPD/C9SMUwUfW03SadXK5DD0vImdpLCw3KOdT1Fo2mhQh6xki
      r0PX9in39+N2miw1OgwPlImCADuIkIhwej2yhRK15QrlgSGmL58nlg368ikE1aTXqqObBrGo
      4rTrHy6JgyAI5FIGdiAgxS56qsAWfNUdYbm6jKVrdNyA5vIi/UMjeEGELsUEkYAXhMj4SIrO
      3GKFof4yke+ipdI0a3WyuSytjkMUegwWDc5NthkbLtDqOJgKoJq0qvOoiDQFnV19ORptm3I+
      xfzCMpIskctatHo+cuwThh4NW2bvaInpC2cxhsYRggDf6SIJoKfzmIpI1+4RCyrZ9B3Mrj0A
      rI4Ap0+fAkHAayxjDO/HqS8RBS5OJGHJ0HM9hCjGjcE0LPrzFhcvTJEe6kOLY+LAo+dDRuwS
      ZwaQlSx+t4IsS4SBj9OsYgwfIO4tI2DQqS2SyWbQ+kYJmlVsp0e7UccyFaT0KO3KBGamiK4E
      RBE0GjHlrMhMs03GSiOLMaMjo/e18a4fAZarywR+iCSKIMS0m3ViyUCVRVRFQRRFnF4LJ5TJ
      pQ3CKFzxH/w2crqPdrVL22kx2F9msGiw0PRXzw2VcwiqhRAH5FWBph8wtdjF0iUOjhVYWGjh
      o9AOAtIKSHGIqglESj+KXyeOY6ZqLdK6gWUo2O0GAdJKEGBaIxRUBvu3x6T4cWNVARYW5hEE
      EYipVWvki0XEOKRS72AoIGsm7VaLfC5Fq+dTylosVRqIgst8zWHXQB5ZT6EKIYKiASJOp0Ek
      afh2B9OyUI0UYeAgCjKB0+b4Bxd44umn6FQX0Kw8sdclknS8Xgvd0PFjibS5MnUWeD7NrkPO
      Uum4Edm0SRiG6Lp+3xrvegW4PmTA6bZBUui5PoXstZdoOq0GqpnG7nbIZNL02i20VBpZkvEd
      h5btkc+m0GQRP2L1nCFHSHoaTYzo9FzSaYsgCKk3OwyWc/hBRIxAGPp0HR8pdNHTebrtFsVC
      lsWFCtl8hlbXJZ+xaDWb6LpGxw5IaSKRpKHKErr+8H24I/EB7oLEB/jxJ9kZLuGhJlGAhIea
      DVcSDGN75p8fdGRZTtrqI8hVs3Qr9yZRgLvkfr/QkbCe21GAxARKeKhZHQGSp6FpbKwAABnQ
      SURBVH7Cg8Lt9OWbKsBX//Xv8olf/HVGTJ+2r5BPb22+/dTpkxw5fBSA86feo94N0FNZ9g0X
      wchjqcmgk3Bv+f73vw+AocTkSkMs1zv8lc89v+G1G/oA3cXz7PvULzB58l0GDua47Awx+a3/
      yL7HnmJ+8gzFQplAsqC3jKgZyGaBmdPvMHbkGBdOvIPjixx77AiWaTBbqbBr70EqF0+hHzrG
      +fff4d3zs3zyyBgdHwTF4qknjtyzxkh4eJE0i2PHnuT733+R42+/jhuBqOdYuPg+Q/seA7u6
      sQ/w/qkJvPYSc0vXPlQwOLqbRw/tI5Ur8fGnnsbr1PFjhaeeeppevULf8DiPHznA8Pg+jj22
      0qEHxvbzk89/ihNvv7aSiajSs3v8yt/4a8wtLCFLElIyICRsM8888wzPPPMModvl3Xff56ln
      Ps384iKSpCALMcXBUZ589BA9P772PsD1xKLMkcOH6E/rYOXRdIu0rpDNZjjzwXvUqk0OPnqM
      nCFw+twFDhx9AlOVyWSzpDWJExemGR7oo7Y4y6lzF+gbGqNUyKGqMDW1iON5fOzgHiq1FsVS
      H/lseoNqJCTcGaZpYpomgqRw+PBhdFWmlM9QbbQplgfIZywy2SyWJt3+l+KnZqYZu89BaAkJ
      28VtK0BCwoNEYoEnPNTc/UuVNxBFEaJ4a71yXRdNu3eht2EYIkn39k2ZB6GMB6EOtyrjKyev
      bJp22xXgo2BR7YQMD0IZD0IdblXGzA3bd27EfTGBwvAOP7qVkLCN9CpzO68Ajhew1NjaBxUS
      Eu4lge/fuQL0mlWOHz+BG8Lc9AQT03ObpnG8gD/47glOTSzz4juX77TohIRtITM4cuc+QL1t
      c3hXkUovQpIkeu0eURQRRdFNbbJqs8tIOc0zh/r5k9euXNtUapuJouie5f0glfEg1GGjMjba
      BHdDBOnOFWCgnOfs5Tl27XJwZRldFxBFkTiOb+r1D5eznJ2q8rUfnufnP3Vo64LeJkEQ3LO8
      H6QyHoQ63G0ZdyyZpFkcObQfgJRpUtxius8e24PrDt/TadCEhK2SzAIlPNQkK8EJDzX3RQHu
      9cpgQsJWSUyghIeaxARKeKhJTKCEh5rEBEp4aIncTmICJTy8tKr1xARKeHgxU0ZiAiU8vKiZ
      UmICJTzc3LEC1JfmOP7u27S8GLtd5813j285bWICJXxUuONgONcLGO4v4gQxC9MzOI69aTj0
      VTzPu6dK8KCG+f645X+/yridyNA7D4ceHmZmbokCDn2HjzLmOJuGQ19FkqQkzPcjUMaDUIe7
      LePOJRMkRoYHVw9v52N1iQmUsNN47RZxEKLl82vOJ7NACQ88dqXC8vHjLJ04Tuh5a35LZoES
      HnjiKMJ3XYY/9WkkVV3zW7IQlvDAoxUKjD7/k4gb9LtNFcBu1ZieX2Y7tzdKTKCEnURSFCK3
      S7vWWNePN1WAM2ff5oV/93WceyRcQsJOUJ0+w8UXf8j1E7Jb2hirmB9m/Mggs1Ob7/uzVRIT
      KGGnMdJlsruKdJcqq+e2tDGW6wZISDj25vssbpXEBErYaUI/QIglAu+aLZMZHNlcAQTRo1F3
      OHBw/z0VMCHhniIEuF2X/PUfdxGkzRVANYsUMxLRNsqSmEAJO42kZdEN6XadYJ+/ePkV0Mxt
      nS9NTKCEnSVg7sRxUHSEG37ZpF8rPPb4YbK57LqExCEzsyuOcbuxzHyltl3SJiRsMzLlvbvR
      Uta6frxpLJBpmbQce935hdlZdCFkqRehx1BZWqK/mNtSNCiQRDl+BMp4EOqwURkbBcbJmo7n
      rZ/M31QBmo05zh1v8ugnj6Fcd15TZaZmlhhI9eO6Lo7rbjka1PO8JMrxI1DGg1CHrZbhdSvU
      L3coPXJojdmzqWSl/nHGDixx41a2+b4h8n1DKwdZk/LA8G2KnZCwcxi5QdIjdW58NG/q23Zb
      HXzXYTvd1mQWKGGn8Xs2ke/dfihEu1FDS2fWO8F3yIvvXObff+8klcb2LawlJGyG120hGeud
      4E0VYGR8jLSR2hYFmK+2CaOYv/H8If7szUvbkGNCwtZI9fejqMaac1vaGKvdrvP+W8e3ZSEs
      nzZ488ws/+qbx8lYyQcyEnYOz25TOX9hjQnUqtZv7QRXr5zj3PQSz/30T6He6sItUm/bXJip
      IiCgKokfkLAz2IuT1Ct1ho89tcYJNlPGrRXAKg3ydK6IZ0dE3P3bM42OQ7PjkjJULswkC2cJ
      O4OSLjG4P0voRcSwas5vujGWns4QdjvMzE7Q6Xm3unRLaIqMIkukDCVxghN2DNm0iF2bTnUe
      z/XX/LbpQz0MA1QzS2N56a4F2TOU55GxIpWmzScPj9x1fgkJWyWKAiTNwmuttTw2VYDFhUl+
      8I2XKY3dfYettnpcmKkRRhGWsR1eRULC1ujVF5h+8130cv+a87dUgF6jwkLNQ0kL61bQ7oSF
      WhfbCxAFgffOz29DjgkJm+N3G/TaPpIurOvwt3SCzVyZJ4/up79/97YogPbhzE8Yxcwutzk7
      tcwjY6VtyHnniFrz+Ce/SpwZQT7617Y1TzE3hnLkF7Ylz4RrKFaO8vgoRm7o9hfCbrYOELpd
      Tp05TwTUKgtcmpjeVBBVXqtG00utTdN81PBPfhX1mb+PEIdEjc3rfDt5xtH25Zmwlo3WAWCT
      EaC7PMOF6RYDu9ZPFy1U6hwYtFhoR/RlsrTd+qab4974Iozn+3z1pVMA/Pyz+5Gl7XntZrtC
      cOPeMtHllxD3/CSCuTJSxZkRvA/+I2H1ItL+v0K0HeV8mGdUvYS476dX80zCoe+sjBsjQ/3W
      Eo1KF6svd3vvA7TrHRRdwa20cIDUdb/l0wanJ+YY25tnenqKSLY2DYe2vbUK8G/+9DiZlMaB
      0SI/OjnD5z6+Z9PKboXtCsF13v991Cd/Fe/d/w/9J/4xAPLRv0bUmEba/1eQjfRdl3F9nsKh
      v4qgmKvnk3Do7SnDa/eQVJmw0SWANYu6t5RsYP8jlPfsJ4qidRea2SKPPVYEIL/vkS0JeuPI
      4IcRjbbDG6dnCcOYP375NPm0zpHdfbx7fp7Rvgx/56cfpZyztpT/ZkSNaQSruKaTrZMx9PDe
      +bcrB6EHG2wJJuZGt+XJf2OeCfcGa3gcc3CUKIrXWDJbigV669Uf8I0//hovvf7uXQsiiutD
      6sIohhjePjuLH4ZUGj2+/foF+vMWewbzfPXl0yvCdpeJust3XLZ/6gWC6TdxX/1dYr938+vO
      fBNl/19G2f+XEcwywaWXUI/9GsHMW7ivfoFg5q07luFeEXUrOD/8Zzg//GdE3crmCbaBj3J7
      bMTC6fe48spLzJw9B4DXqbNwZWbzF2KGBwcIzRJHD+6+ayHCcGPfIIpjBEGg2rz26uWpKxXe
      PDPLE6M6yxffJr280tCCYoKsI489jff+l5H6DqEc+QXCpTOES2dQDv0cV33765/4Uf0KcRQQ
      VS8SVS8hDRzdUBap7xD+uT8FQN7zPFLfIQD89/496jO/gf3Nf4SgpqDw0dkmJrj4IuqTv3rt
      /8d+5Z6XGU68ivap38R95XeQRz5xz8u7W1KFIrGWo/Thlv5qKk9pKNxcAVRN4cRbb/Dxjz96
      10IY+s2Li+MYAZAkkULGYLnR5YDV4O/wfX701TQ/89RuxMIewpm3iGoTuD/4P5D3PI934gSC
      kcX+9j9BkFWi+ePIP/m/4J96YWVWpXoR7bn/njj0CC69hJgdIVw8dUsFEKwyAKJ13RStKON8
      539CtIoEl19G1AuQ6V+XPvZ7xN3qjpo08r7PrphtMagf/7WdKVSU8c98E8R7a99vF5IsUTn/
      Af37962e2zQWKI4jKtU6u3aNbsv7ALZzc7tZECCX1gnCiGqzh6mrtDyB/7v1MxzIB0SNKbx3
      /h3B1OuIfY+AICFYJaLGFM73fgsiH7G4j2DiVaLmNFFjCuXILyAW9+Gf/Brh1BsrI0HlLIKW
      Ibj0EsGll1ix8eM1x6JVWtv5AfWZ30BID6w+aTdsL7+H++rvEky/iX/qhTW/RY3pW5ped4No
      lZH3PI8gKfjHv0Icbxy8Hsy8hfvK7+D+xb+46TVbRX3mNxD7DqE+8xt3lc9OEMcRvXabTN/6
      B9YtFaA5P8mV+TqtVntbFsKEDXwAgZXOLyCQsTQe29dPNqWTtTT+s48PsE+4xJB7FrGwB+2Z
      30De9Rzh/AkQJYJLLyHveR5x8FGIY8LpNxH7jyCaJZSjv4z32r9EECXE7EoYh7zvpxCsMuH0
      Gx8WKhBc+gHBpZfXHN9IuHQG/9QLaJ/87wjm3lvpbGZx3XVxt4pY3Idy5BeIGlOr57fqf9wN
      4eRraJ/6TcTCbqLalTu+ZqsIgohU3IsgfPQ/MeHWFmjW2ni93roHuRBvYQ+TwHURNG1LShCG
      4U2nQU9PVPgnX3pxzblCWscLIobLaf7mZ4/y4juXObqnj1dOTjNfbfPM3jT/xafGMTUZITuM
      +9L/jrzrOYKJH6F+8u8j6Gl6/+FXkfo/RmzX0X/6fyUU1BumxWKCSz8gql1CyI+v3DRBuPrT
      yp/rjuW9z6+mjLrL+Ce/inLwZ/Ev/BnaU58njiOC5UvIpfUdwD/1wsroc/SXETMr9qb76hdQ
      P/n3sL/5PyBmhpD3f25LdvPtTCEGM28RTrwKorwyWm3QMW+8Jgyj+z5FeS/L+OevfrDmOPJ9
      UJTb2xUCQNa25+2tKFqva4/vH8QLQn7zrz/Nv/7We+wZyvPKiSli4G9+9iifPXbN+Xb/4l8g
      DT2B9+7vo33mHyNaK09hafhJ1Cf/K7x3/92Kk7xuilJY6dSrHTtefdLLez8DsO54I8LJ13Hs
      BrFdRxx9Bu/Cn6E9+w/WXLNRKINy9JdxX/6niPlx9J/4H3Ff/cK2O47yyCc2zXP9Ndu54eW9
      JY4jvNe+CFGANP7cHbWfqCjrzu2oB7PujXxR4JefP8zL703wL//TW+wbLrBQ6/CPfuVZbNdn
      sHjDQlMUoDzyV4mWL6zOzgAr05QXX0Q99mtblERY85QH1h2vymiVkPc8vzLbseczIKl4l/4c
      Yc9nEaKtrQWImUG0v/Q/4732RdxXfgdp/Lktyplwlah2BbGwG+WRv7qtD5AdNeBuXAeI45hC
      xuBvfe4opazJz35yP2P9WWw3WN/5AWn8OdxXv4A0/hzeB1/DffULeB98DdEqoz72K4gfzt7c
      DXEcEVYvrXESpb5DqE9/nuDyD4gq55D6jhBd/P5tdWRBENGe/Qdon/rNH4tpw48aV/0W95Xf
      Qdr1zLblu6MjwI0OiCJJqwFyf/mpvfzh908yWEwBMY4XoKtrxbt+CHcnX0N77h/ivvqFbZXR
      e+2LiIXdBOe+vca8kfoOof/s/0k4+y6CpMKuT91z2zbhGlcfINvNzo4AwloVMDSZ2eWViNBy
      zuK//OmVtYaTl5f4g++ewPFuMW2aHcZ99QsI2W3eke5DM4sNzBvRKqEc+OmbmksJP37csQL0
      mlWOHz+BG0Kzvsz84uZhCtIN0Z6Hx8tIoshv/4fX+c4bFwGYr3b4qWN7GOvPUm/f/Mtk6sd+
      Ce25f4j6sV+60ypsLON1ZlbCg88dj+H1ts3hXUUqvYihfIne/Pym4dDyDer22SfH+dffepfP
      //yTfOFrb3J0d5mfOjbOH37/JAMFi3JWv6NQ2rsKwR14AmngCeDWO1g/CKHED0IdNipjq6Zp
      rzJ35wowUM5z9vIcu3Y51Cotas0Og4ODtwyHHixl1hzvGynS/eFZjl9aImPpFHMWuiqvmkJ3
      ykchBPfHoYwHoQ53WobXqdOqNe5cASTN4sihDwPCTJNCeWDTNF3n2tYqhirTsT3+8a88y5tn
      Zvlvf+7JdU5vQsK9Qk3lGTiQ2dlZoEqjhyQKaIqEJIlcnqszU2nztz+3cWBaQsI9ZSsfydtO
      DE0hBoIwQldlPvP4OGH047MamfDgsaMK0J+3GClnUGSJ4VKGP/juCZ48MLiTIiQkrGFHTSBd
      lYnjmKylUu/Yd+3sJiTcLTs6AsxX24RhxC986iCtrruTRSckbMiOKkA+baCpMt9/5wo//+yB
      nSw6IWFDdtwE+qd/96dYWG4wPvTjtSNcwoPJjr/Oo6syfbmbb0uSkLCT3Jf32ZKvRCZ8VLgv
      CnDjFokJCfeDLW2Mtd1cmqvzgxMz+EGiBAn3j6sbY92xAtSX5jj+7tu0vJjJy+c5cerspmka
      bYe3zs5yaKzAC6+cu9OiExLumpWNsUp3PgvkegHD/UWcICaWVNJmvBoO7boukiStmjpX/3dc
      D9/zsW0Hz3VxXXfdNdvxv+d5SJK0rXne+H8Yhqiqes/y34l6PAjtdBXP81bPa1vcxEHN3IUC
      DAwPMzO3RAGHbLlIy4lWd4c2zY1neUzT5NlHxzk7scDf+OyjKPK9cYYlSfpIhuDeLve6Hg9K
      O91NGXcumSAxMnwtjqe8xZnNvUN5RormPev8CQm3QzILlPBQ89Hf1y4h4R6ypa0Rb4c4XnGG
      b0UUrfgL94p7nf+DUsaDUIeNyridhdZt904EQdhUAEEQ7mmj3Ov8H5QyHoQ63G0Z2z4CJCT8
      OLGj0aBLc1PMzNUoDfcT2Da79+zZlu8OAFw8dxotXaS9PIeWStGqdzBEGbmcZrBvFEu9u1mn
      ypUTBOVHWDr7Abqh0QtcVDWNbdsMDpZxbZs9e+7mI38RJ0+e5vCuIhO1gNht4wkakV3HzGfw
      miLlsUGK2Tv/XlpjeZFLM0ukNYFI1vE6TQxdo+36SGqOohnTN7obVbrzuzI3PUGjF+B2qgyU
      B1ioV7etnerLi5yfmCdvydsm/446wV4Q01/M0u228cL1WyXeDYahU6ksY2VyiKFNrjxE4PWo
      1rqrH+i+G8rlMsQh2WI/brfN0HA/7W5AXy5Nu91gCx/b2QSRUrmIJ+hUKhUUzcJQRNLZIkLo
      U61Wt7zAc1MEgd27x1GNNJock8mVCbod+keG8Lptal0P5S46P4AoSYzvGsHQTObn5re1nRRZ
      RtO1bZV/R02gOPSZW6pRLuSIwhDVMNngmxl3RKtewUVDCnromRKt6iL5QglJFfE8MPX1W2Pf
      DnPTE4SSgSoEFPoGWZqfZ3CgxMJyi2I+SxgGGKZ5F0odcuncRbKlMq4fkjUkAlEn6DVJFYoI
      kUgYejddZNwKtcoC1bbLQMEiklN4nRqZ0gDLC/OUymUUMcJDRVfu/Lk4O3UZ1DR4XYqDo1QX
      F7atnVr1ZdouZHS2Tf7EB0h4qEnWARIeahIFSHioSfYi3FEivvYH/54jP/FZxF4Dr1kjKu9G
      6VYR7Q7ZR5/l7W99FTPbz8j+MfpMjaodc+b9Nzj62GE+OLPMYwf7sMqj5FP6/a7MA0EyAuwo
      IuN79zNkdllsdzl5fIJiTufcB+/x9vnFa1dJInNzsxw/fZbZ6ctkCmWmZ6+QtzLMTE+ysLh0
      H+vwYJE4wTtMu9nCyqa5ePYMu3bvZn6pStBtkc6VyfeVcdpNBARCYibPvMeco/PsE4cBqFaX
      IXApDu8ha23PhwsfdhIFSHioSUyghIeaRAESHmoSBUh4qEkUIOGhJlGAhIeaRAESHmo2XAmu
      zE8xMbNEoX+YvWM3/4JLbfIkXvEotSunOHz0CO++9TaGqdKzPfRMgf3DRWwMspZ6zyqQkHA3
      bKgAx0+d4/m/9FOIxJw9dYJer4cvqMSIfOLoPt49eRYrU6QQtHCy0Gq1gJiQmMWFCs9/9rO8
      9Od/zt4+HU+2mLh4hlqry8DIPob6cjtcxYSEm7OhCfTpZ5/mzdde4d2T56i2ejz5iUfoNSPC
      wCaOIqIo5sT7x9ekacycIzt8EN9u89Ybr+PEMk5jnkrHZ2q+wpOHR5icbuxIpRIStsqGCjA7
      PY2mGzhOd/Wc8OErDPOXL9GLxXUbW52fa7F/aOVD2KIs4zq91ZRet8l7x0+R7AaU8FFje0Ih
      Yp833jzB008f2/Dnsx+8T71WobzvafYNZTa8JiHhfrAtChD7Nu1AJmPc3WuHCQk7TRIMl/BQ
      k6wDJDzUJAqQ8FCTKEDCQ02iAAkPNYkCJDzUbBgK0W63d1qOhIT7wkd6GrTdbpNOp++3GAkP
      MIkJlPBQkyhAwkNNogAJDzWJAiQ81CQKkPBQc983x43jmDCMkCRxR74omJBwPfddAULP5tTJ
      4whWicCxKfcV8RyXPXt2E8cxH+FZ2oQHgPuuALEgkUob1HsBxbRFr9dGFI3Vzp98VT7hXnLf
      FUAUQNaLPL63n+V6m+FsmjAMV7/9Ksv/f3t3zNs0EIZx/H9xEuo4LlSFQFiQKtSJhQEGvkC3
      bnxANkY+AQsLnRiqlhSFJC1pFQjQRJUvZ+fOZqFCSBiKq5iIvr/Ng30Z7pWeR2fF//wniv9Y
      6SfBaZqilEKpP38mTU6CxaKV3jj33/V4+WpHsr1YCqUOwJvdtzx7/oLxl1P0zJS5tBC/VGrA
      rtdqPHr4gKfbWxeKQEIsmrwNKq600jvAyVGHnde7zJd37sQVkjsA088j9vYPMIkljmOSuSVJ
      Ylw8odvpMk2KbWAz03T2Dji/O0st/V4PYzRHxyOMMURRJCVZlCK3AzSaIerkI+/7fRId4TdD
      pqNDgrUbkNSxBfdnGN6kdXtM+v06dY7A9+h0j1kPavQPe9TqIRv3fJxzWGuLLSTEBeQOgHOO
      6kqDVvsu1QoowPcyGmETlVVpFKjP81gzHA4504bzCmz1lO6Hr9xZX+XT5Ix2+xazSKOUwvM8
      OQgTC5W7u1aCVTY3f/4fz2Dj/qUWy9IUVamg1I/kde16iyePW5d6rhBF/bYEDwYDbKyJc/KO
      NQb7F1m97jepeBmT0RhJ+GIZfAMHjGOuMHUuOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 delayed carriers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 in/Out' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
